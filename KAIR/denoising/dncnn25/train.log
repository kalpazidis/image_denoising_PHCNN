23-04-04 13:47:05.572 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 1
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 1
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 1
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-04 13:47:05.573 : Random seed: 5122
23-04-06 19:39:21.829 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 1
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 1
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 1
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-06 19:39:22.358 : Random seed: 4351
23-04-06 19:39:22.803 : Number of train images: 200, iters: 4
23-04-06 19:47:43.147 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 1
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 1
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 1
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-06 19:47:43.148 : Random seed: 7282
23-04-06 19:47:43.158 : Number of train images: 200, iters: 4
23-04-06 19:48:32.359 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 1
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 1
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 1
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-06 19:48:32.688 : Random seed: 3220
23-04-06 19:48:34.059 : Number of train images: 200, iters: 4
23-04-06 19:48:38.517 : 
Networks name: DnCNN
Params number: 557057
Net structure:
DnCNN(
  (model): Sequential(
    (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): ReLU(inplace=True)
    (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (3): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (6): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (12): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (15): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (18): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (21): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (24): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (27): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (30): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (33): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (36): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (39): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (42): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (45): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): Conv2d(64, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
)

23-04-06 19:48:38.655 : 
 |  mean  |  min   |  max   |  std   || shape               
 |  0.002 | -0.068 |  0.066 |  0.025 | torch.Size([64, 1, 3, 3]) || model.0.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.0.bias
 |  0.000 | -0.035 |  0.036 |  0.008 | torch.Size([64, 64, 3, 3]) || model.2.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.2.bias
 |  0.499 |  0.101 |  0.992 |  0.272 | torch.Size([64]) || model.3.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.3.running_var
 | -0.000 | -0.033 |  0.034 |  0.008 | torch.Size([64, 64, 3, 3]) || model.5.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.5.bias
 |  0.528 |  0.159 |  0.997 |  0.221 | torch.Size([64]) || model.6.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.6.running_var
 | -0.000 | -0.035 |  0.033 |  0.008 | torch.Size([64, 64, 3, 3]) || model.8.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.8.bias
 |  0.600 |  0.119 |  0.996 |  0.239 | torch.Size([64]) || model.9.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.9.running_var
 |  0.000 | -0.032 |  0.034 |  0.008 | torch.Size([64, 64, 3, 3]) || model.11.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.11.bias
 |  0.557 |  0.105 |  0.999 |  0.242 | torch.Size([64]) || model.12.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.12.running_var
 |  0.000 | -0.034 |  0.036 |  0.008 | torch.Size([64, 64, 3, 3]) || model.14.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.14.bias
 |  0.584 |  0.108 |  0.989 |  0.259 | torch.Size([64]) || model.15.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.15.running_var
 |  0.000 | -0.034 |  0.036 |  0.008 | torch.Size([64, 64, 3, 3]) || model.17.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.17.bias
 |  0.521 |  0.110 |  0.998 |  0.255 | torch.Size([64]) || model.18.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.18.running_var
 |  0.000 | -0.036 |  0.032 |  0.008 | torch.Size([64, 64, 3, 3]) || model.20.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.20.bias
 |  0.537 |  0.122 |  0.976 |  0.244 | torch.Size([64]) || model.21.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.21.running_var
 |  0.000 | -0.034 |  0.034 |  0.008 | torch.Size([64, 64, 3, 3]) || model.23.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.23.bias
 |  0.573 |  0.108 |  0.997 |  0.271 | torch.Size([64]) || model.24.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.24.running_var
 | -0.000 | -0.038 |  0.034 |  0.008 | torch.Size([64, 64, 3, 3]) || model.26.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.26.bias
 |  0.547 |  0.120 |  0.990 |  0.268 | torch.Size([64]) || model.27.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.27.running_var
 |  0.000 | -0.033 |  0.035 |  0.008 | torch.Size([64, 64, 3, 3]) || model.29.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.29.bias
 |  0.517 |  0.109 |  0.996 |  0.264 | torch.Size([64]) || model.30.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.30.running_var
 | -0.000 | -0.031 |  0.031 |  0.008 | torch.Size([64, 64, 3, 3]) || model.32.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.32.bias
 |  0.569 |  0.116 |  0.996 |  0.264 | torch.Size([64]) || model.33.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.33.running_var
 | -0.000 | -0.035 |  0.034 |  0.008 | torch.Size([64, 64, 3, 3]) || model.35.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.35.bias
 |  0.496 |  0.102 |  0.995 |  0.264 | torch.Size([64]) || model.36.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.36.running_var
 | -0.000 | -0.038 |  0.035 |  0.008 | torch.Size([64, 64, 3, 3]) || model.38.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.38.bias
 |  0.623 |  0.125 |  0.984 |  0.229 | torch.Size([64]) || model.39.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.39.running_var
 | -0.000 | -0.037 |  0.032 |  0.008 | torch.Size([64, 64, 3, 3]) || model.41.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.41.bias
 |  0.572 |  0.112 |  0.996 |  0.237 | torch.Size([64]) || model.42.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.42.running_var
 | -0.000 | -0.034 |  0.034 |  0.008 | torch.Size([64, 64, 3, 3]) || model.44.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.44.bias
 |  0.559 |  0.102 |  0.991 |  0.269 | torch.Size([64]) || model.45.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.45.running_var
 | -0.000 | -0.028 |  0.034 |  0.008 | torch.Size([1, 64, 3, 3]) || model.47.weight
 |  0.000 |  0.000 |  0.000 |    nan | torch.Size([1]) || model.47.bias

23-04-06 19:49:56.148 : <epoch: 66, iter:     200, lr:1.000e-04> G_loss: 3.343e-02 
23-04-06 19:51:01.387 : <epoch:133, iter:     400, lr:1.000e-04> G_loss: 2.952e-02 
23-04-06 19:51:20.488 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 1
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 1
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 1
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-06 19:51:20.488 : Random seed: 8457
23-04-06 19:51:20.496 : Number of train images: 200, iters: 4
23-04-06 19:51:20.841 : 
Networks name: DnCNN
Params number: 557057
Net structure:
DnCNN(
  (model): Sequential(
    (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): ReLU(inplace=True)
    (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (3): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (6): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (12): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (15): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (18): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (21): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (24): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (27): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (30): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (33): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (36): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (39): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (42): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (45): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): Conv2d(64, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
)

23-04-06 19:51:20.872 : 
 |  mean  |  min   |  max   |  std   || shape               
 |  0.003 | -0.070 |  0.073 |  0.025 | torch.Size([64, 1, 3, 3]) || model.0.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.0.bias
 |  0.000 | -0.036 |  0.034 |  0.008 | torch.Size([64, 64, 3, 3]) || model.2.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.2.bias
 |  0.546 |  0.105 |  0.998 |  0.249 | torch.Size([64]) || model.3.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.3.running_var
 | -0.000 | -0.035 |  0.034 |  0.008 | torch.Size([64, 64, 3, 3]) || model.5.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.5.bias
 |  0.524 |  0.104 |  0.963 |  0.244 | torch.Size([64]) || model.6.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.6.running_var
 |  0.000 | -0.032 |  0.035 |  0.008 | torch.Size([64, 64, 3, 3]) || model.8.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.8.bias
 |  0.572 |  0.110 |  0.978 |  0.259 | torch.Size([64]) || model.9.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.9.running_var
 | -0.000 | -0.031 |  0.032 |  0.008 | torch.Size([64, 64, 3, 3]) || model.11.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.11.bias
 |  0.555 |  0.100 |  0.982 |  0.277 | torch.Size([64]) || model.12.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.12.running_var
 |  0.000 | -0.037 |  0.032 |  0.008 | torch.Size([64, 64, 3, 3]) || model.14.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.14.bias
 |  0.539 |  0.106 |  0.994 |  0.260 | torch.Size([64]) || model.15.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.15.running_var
 | -0.000 | -0.039 |  0.035 |  0.008 | torch.Size([64, 64, 3, 3]) || model.17.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.17.bias
 |  0.477 |  0.100 |  0.996 |  0.252 | torch.Size([64]) || model.18.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.18.running_var
 | -0.000 | -0.031 |  0.032 |  0.008 | torch.Size([64, 64, 3, 3]) || model.20.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.20.bias
 |  0.568 |  0.131 |  0.991 |  0.255 | torch.Size([64]) || model.21.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.21.running_var
 |  0.000 | -0.036 |  0.031 |  0.008 | torch.Size([64, 64, 3, 3]) || model.23.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.23.bias
 |  0.567 |  0.124 |  0.993 |  0.238 | torch.Size([64]) || model.24.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.24.running_var
 | -0.000 | -0.036 |  0.042 |  0.008 | torch.Size([64, 64, 3, 3]) || model.26.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.26.bias
 |  0.535 |  0.110 |  0.989 |  0.249 | torch.Size([64]) || model.27.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.27.running_var
 | -0.000 | -0.041 |  0.035 |  0.008 | torch.Size([64, 64, 3, 3]) || model.29.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.29.bias
 |  0.530 |  0.113 |  0.953 |  0.273 | torch.Size([64]) || model.30.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.30.running_var
 | -0.000 | -0.032 |  0.035 |  0.008 | torch.Size([64, 64, 3, 3]) || model.32.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.32.bias
 |  0.596 |  0.159 |  1.000 |  0.241 | torch.Size([64]) || model.33.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.33.running_var
 |  0.000 | -0.031 |  0.037 |  0.008 | torch.Size([64, 64, 3, 3]) || model.35.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.35.bias
 |  0.575 |  0.104 |  0.996 |  0.252 | torch.Size([64]) || model.36.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.36.running_var
 | -0.000 | -0.037 |  0.032 |  0.008 | torch.Size([64, 64, 3, 3]) || model.38.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.38.bias
 |  0.546 |  0.110 |  1.000 |  0.258 | torch.Size([64]) || model.39.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.39.running_var
 | -0.000 | -0.034 |  0.032 |  0.008 | torch.Size([64, 64, 3, 3]) || model.41.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.41.bias
 |  0.560 |  0.104 |  0.981 |  0.253 | torch.Size([64]) || model.42.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.42.running_var
 | -0.000 | -0.036 |  0.039 |  0.008 | torch.Size([64, 64, 3, 3]) || model.44.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.44.bias
 |  0.571 |  0.117 |  1.000 |  0.269 | torch.Size([64]) || model.45.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.45.running_var
 |  0.000 | -0.026 |  0.023 |  0.008 | torch.Size([1, 64, 3, 3]) || model.47.weight
 |  0.000 |  0.000 |  0.000 |    nan | torch.Size([1]) || model.47.bias

23-04-06 19:51:42.391 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 1
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 1
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 1
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-06 19:51:42.392 : Random seed: 8201
23-04-06 19:51:42.399 : Number of train images: 200, iters: 4
23-04-06 19:51:42.796 : 
Networks name: DnCNN
Params number: 557057
Net structure:
DnCNN(
  (model): Sequential(
    (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): ReLU(inplace=True)
    (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (3): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (6): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (12): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (15): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (18): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (21): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (24): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (27): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (30): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (33): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (36): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (39): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (42): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (45): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): Conv2d(64, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
)

23-04-06 19:51:42.838 : 
 |  mean  |  min   |  max   |  std   || shape               
 | -0.001 | -0.086 |  0.064 |  0.025 | torch.Size([64, 1, 3, 3]) || model.0.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.0.bias
 | -0.000 | -0.035 |  0.033 |  0.008 | torch.Size([64, 64, 3, 3]) || model.2.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.2.bias
 |  0.479 |  0.107 |  0.931 |  0.241 | torch.Size([64]) || model.3.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.3.running_var
 |  0.000 | -0.035 |  0.034 |  0.008 | torch.Size([64, 64, 3, 3]) || model.5.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.5.bias
 |  0.607 |  0.104 |  0.991 |  0.274 | torch.Size([64]) || model.6.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.6.running_var
 |  0.000 | -0.036 |  0.033 |  0.008 | torch.Size([64, 64, 3, 3]) || model.8.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.8.bias
 |  0.535 |  0.114 |  0.980 |  0.243 | torch.Size([64]) || model.9.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.9.running_var
 |  0.000 | -0.036 |  0.036 |  0.008 | torch.Size([64, 64, 3, 3]) || model.11.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.11.bias
 |  0.533 |  0.103 |  0.977 |  0.258 | torch.Size([64]) || model.12.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.12.running_var
 |  0.000 | -0.033 |  0.038 |  0.008 | torch.Size([64, 64, 3, 3]) || model.14.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.14.bias
 |  0.519 |  0.114 |  0.990 |  0.245 | torch.Size([64]) || model.15.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.15.running_var
 |  0.000 | -0.037 |  0.035 |  0.008 | torch.Size([64, 64, 3, 3]) || model.17.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.17.bias
 |  0.541 |  0.124 |  0.997 |  0.275 | torch.Size([64]) || model.18.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.18.running_var
 |  0.000 | -0.031 |  0.032 |  0.008 | torch.Size([64, 64, 3, 3]) || model.20.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.20.bias
 |  0.520 |  0.127 |  0.997 |  0.256 | torch.Size([64]) || model.21.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.21.running_var
 |  0.000 | -0.031 |  0.034 |  0.008 | torch.Size([64, 64, 3, 3]) || model.23.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.23.bias
 |  0.536 |  0.110 |  0.999 |  0.299 | torch.Size([64]) || model.24.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.24.running_var
 |  0.000 | -0.032 |  0.033 |  0.008 | torch.Size([64, 64, 3, 3]) || model.26.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.26.bias
 |  0.583 |  0.107 |  0.990 |  0.262 | torch.Size([64]) || model.27.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.27.running_var
 | -0.000 | -0.034 |  0.030 |  0.008 | torch.Size([64, 64, 3, 3]) || model.29.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.29.bias
 |  0.540 |  0.102 |  0.980 |  0.264 | torch.Size([64]) || model.30.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.30.running_var
 | -0.000 | -0.033 |  0.032 |  0.008 | torch.Size([64, 64, 3, 3]) || model.32.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.32.bias
 |  0.492 |  0.135 |  0.974 |  0.253 | torch.Size([64]) || model.33.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.33.running_var
 |  0.000 | -0.032 |  0.034 |  0.008 | torch.Size([64, 64, 3, 3]) || model.35.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.35.bias
 |  0.490 |  0.102 |  0.930 |  0.240 | torch.Size([64]) || model.36.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.36.running_var
 |  0.000 | -0.033 |  0.035 |  0.008 | torch.Size([64, 64, 3, 3]) || model.38.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.38.bias
 |  0.581 |  0.106 |  0.977 |  0.271 | torch.Size([64]) || model.39.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.39.running_var
 | -0.000 | -0.034 |  0.032 |  0.008 | torch.Size([64, 64, 3, 3]) || model.41.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.41.bias
 |  0.544 |  0.124 |  0.981 |  0.245 | torch.Size([64]) || model.42.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.42.running_var
 | -0.000 | -0.034 |  0.038 |  0.008 | torch.Size([64, 64, 3, 3]) || model.44.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.44.bias
 |  0.559 |  0.126 |  0.987 |  0.234 | torch.Size([64]) || model.45.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.45.running_var
 | -0.000 | -0.027 |  0.023 |  0.008 | torch.Size([1, 64, 3, 3]) || model.47.weight
 |  0.000 |  0.000 |  0.000 |    nan | torch.Size([1]) || model.47.bias

23-04-06 19:52:50.831 : <epoch: 66, iter:     200, lr:1.000e-04> G_loss: 3.291e-02 
23-04-06 19:53:58.443 : <epoch:133, iter:     400, lr:1.000e-04> G_loss: 3.195e-02 
23-04-06 19:55:05.659 : <epoch:199, iter:     600, lr:1.000e-04> G_loss: 3.023e-02 
23-04-06 19:56:13.351 : <epoch:266, iter:     800, lr:1.000e-04> G_loss: 2.958e-02 
23-04-06 19:57:21.274 : <epoch:333, iter:   1,000, lr:1.000e-04> G_loss: 3.101e-02 
23-04-06 19:58:28.310 : <epoch:399, iter:   1,200, lr:1.000e-04> G_loss: 3.026e-02 
23-04-06 19:59:34.658 : <epoch:466, iter:   1,400, lr:1.000e-04> G_loss: 2.881e-02 
23-04-06 20:00:40.552 : <epoch:533, iter:   1,600, lr:1.000e-04> G_loss: 2.986e-02 
23-04-06 20:01:45.718 : <epoch:599, iter:   1,800, lr:1.000e-04> G_loss: 2.852e-02 
23-04-06 20:02:51.261 : <epoch:666, iter:   2,000, lr:1.000e-04> G_loss: 2.955e-02 
23-04-06 20:03:56.627 : <epoch:733, iter:   2,200, lr:1.000e-04> G_loss: 2.571e-02 
23-04-06 20:05:01.206 : <epoch:799, iter:   2,400, lr:1.000e-04> G_loss: 2.873e-02 
23-04-06 20:06:06.377 : <epoch:866, iter:   2,600, lr:1.000e-04> G_loss: 2.826e-02 
23-04-06 20:07:11.680 : <epoch:933, iter:   2,800, lr:1.000e-04> G_loss: 2.828e-02 
23-04-06 20:08:17.401 : <epoch:999, iter:   3,000, lr:1.000e-04> G_loss: 2.767e-02 
23-04-06 20:09:24.548 : <epoch:1066, iter:   3,200, lr:1.000e-04> G_loss: 2.701e-02 
23-04-06 20:10:31.939 : <epoch:1133, iter:   3,400, lr:1.000e-04> G_loss: 2.645e-02 
23-04-06 20:11:39.031 : <epoch:1199, iter:   3,600, lr:1.000e-04> G_loss: 2.798e-02 
23-04-06 20:12:46.646 : <epoch:1266, iter:   3,800, lr:1.000e-04> G_loss: 2.584e-02 
23-04-06 20:13:54.263 : <epoch:1333, iter:   4,000, lr:1.000e-04> G_loss: 2.775e-02 
23-04-06 20:15:03.335 : <epoch:1399, iter:   4,200, lr:1.000e-04> G_loss: 2.928e-02 
23-04-06 20:16:10.554 : <epoch:1466, iter:   4,400, lr:1.000e-04> G_loss: 2.752e-02 
23-04-06 20:17:17.504 : <epoch:1533, iter:   4,600, lr:1.000e-04> G_loss: 3.109e-02 
23-04-06 20:18:24.410 : <epoch:1599, iter:   4,800, lr:1.000e-04> G_loss: 2.556e-02 
23-04-06 20:19:32.191 : <epoch:1666, iter:   5,000, lr:1.000e-04> G_loss: 2.517e-02 
23-04-06 20:19:32.192 : Saving the model.
23-04-06 20:19:32.786 : ---1--> 101085.png | 25.68dB
23-04-06 20:19:33.000 : ---2--> 101087.png | 29.69dB
23-04-06 20:19:33.391 : ---3--> 102061.png | 29.39dB
23-04-06 20:19:34.580 : ---4--> 103070.png | 30.17dB
23-04-06 20:19:35.503 : ---5--> 105025.png | 27.02dB
23-04-06 20:19:35.761 : ---6--> 106024.png | 32.24dB
23-04-06 20:19:36.012 : ---7--> 108005.png | 28.25dB
23-04-06 20:19:36.471 : ---8--> 108070.png | 25.98dB
23-04-06 20:19:36.678 : ---9--> 108082.png | 28.66dB
23-04-06 20:19:36.901 : --10--> 109053.png | 29.51dB
23-04-06 20:19:38.901 : --11--> 119082.png | 28.09dB
23-04-06 20:19:39.216 : --12-->  12084.png | 28.12dB
23-04-06 20:19:39.482 : --13--> 123074.png | 29.10dB
23-04-06 20:19:39.865 : --14--> 126007.png | 30.34dB
23-04-06 20:19:40.171 : --15--> 130026.png | 26.97dB
23-04-06 20:19:40.507 : --16--> 134035.png | 27.47dB
23-04-06 20:19:40.855 : --17-->  14037.png | 32.39dB
23-04-06 20:19:41.219 : --18--> 143090.png | 32.39dB
23-04-06 20:19:41.549 : --19--> 145086.png | 27.76dB
23-04-06 20:19:42.230 : --20--> 147091.png | 28.58dB
23-04-06 20:19:42.994 : --21--> 148026.png | 25.89dB
23-04-06 20:19:43.249 : --22--> 148089.png | 26.64dB
23-04-06 20:19:43.676 : --23--> 157055.png | 28.16dB
23-04-06 20:19:45.802 : --24--> 159008.png | 28.23dB
23-04-06 20:19:46.166 : --25--> 160068.png | 29.19dB
23-04-06 20:19:46.481 : --26-->  16077.png | 28.18dB
23-04-06 20:19:46.912 : --27--> 163085.png | 29.61dB
23-04-06 20:19:47.354 : --28--> 167062.png | 32.54dB
23-04-06 20:19:47.636 : --29--> 167083.png | 24.16dB
23-04-06 20:19:48.312 : --30--> 170057.png | 29.44dB
23-04-06 20:19:48.924 : --31--> 175032.png | 24.29dB
23-04-06 20:19:49.277 : --32--> 175043.png | 26.42dB
23-04-06 20:19:49.940 : --33--> 182053.png | 27.48dB
23-04-06 20:19:50.285 : --34--> 189080.png | 32.72dB
23-04-06 20:19:50.625 : --35-->  19021.png | 27.83dB
23-04-06 20:19:51.056 : --36--> 196073.png | 27.13dB
23-04-06 20:19:51.414 : --37--> 197017.png | 28.21dB
23-04-06 20:19:51.766 : --38--> 208001.png | 28.64dB
23-04-06 20:19:51.993 : --39--> 210088.png | 31.90dB
23-04-06 20:19:52.255 : --40-->  21077.png | 28.89dB
23-04-06 20:19:52.514 : --41--> 216081.png | 27.59dB
23-04-06 20:19:52.862 : --42--> 219090.png | 29.08dB
23-04-06 20:19:53.093 : --43--> 220075.png | 29.76dB
23-04-06 20:19:53.334 : --44--> 223061.png | 26.81dB
23-04-06 20:19:53.637 : --45--> 227092.png | 32.77dB
23-04-06 20:19:53.965 : --46--> 229036.png | 26.10dB
23-04-06 20:20:01.151 : --47--> 236037.png | 26.41dB
23-04-06 20:20:01.499 : --48-->  24077.png | 29.00dB
23-04-06 20:20:01.829 : --49--> 241004.png | 31.13dB
23-04-06 20:20:02.292 : --50--> 241048.png | 26.44dB
23-04-06 20:20:02.600 : --51--> 253027.png | 27.93dB
23-04-06 20:20:02.863 : --52--> 253055.png | 31.44dB
23-04-06 20:20:06.387 : --53--> 260058.png | 30.48dB
23-04-06 20:20:06.797 : --54--> 271035.png | 28.53dB
23-04-06 20:20:14.268 : --55--> 285079.png | 27.26dB
23-04-06 20:20:14.675 : --56--> 291000.png | 23.74dB
23-04-06 20:20:14.994 : --57--> 295087.png | 28.12dB
23-04-06 20:20:15.719 : --58--> 296007.png | 30.53dB
23-04-06 20:20:16.121 : --59--> 296059.png | 29.95dB
23-04-06 20:20:16.312 : --60--> 299086.png | 30.69dB
23-04-06 20:20:16.666 : --61--> 300091.png | 29.74dB
23-04-06 20:20:17.014 : --62--> 302008.png | 32.54dB
23-04-06 20:20:17.389 : --63--> 304034.png | 26.24dB
23-04-06 20:20:17.681 : --64--> 304074.png | 26.51dB
23-04-06 20:20:17.913 : --65--> 306005.png | 28.69dB
23-04-06 20:20:18.200 : --66-->   3096.png | 36.99dB
23-04-06 20:20:18.553 : --67-->  33039.png | 24.52dB
23-04-06 20:20:18.964 : --68--> 351093.png | 25.88dB
23-04-06 20:20:18.976 : <epoch:1666, iter:   5,000, Average PSNR : 28.65dB

23-04-06 20:21:25.299 : <epoch:1733, iter:   5,200, lr:1.000e-04> G_loss: 2.767e-02 
23-04-06 20:22:31.080 : <epoch:1799, iter:   5,400, lr:1.000e-04> G_loss: 2.807e-02 
23-04-06 20:23:37.667 : <epoch:1866, iter:   5,600, lr:1.000e-04> G_loss: 2.898e-02 
23-04-06 20:24:44.233 : <epoch:1933, iter:   5,800, lr:1.000e-04> G_loss: 2.634e-02 
23-04-06 20:25:50.084 : <epoch:1999, iter:   6,000, lr:1.000e-04> G_loss: 2.867e-02 
23-04-06 20:26:56.176 : <epoch:2066, iter:   6,200, lr:1.000e-04> G_loss: 2.739e-02 
23-04-06 20:28:01.338 : <epoch:2133, iter:   6,400, lr:1.000e-04> G_loss: 2.829e-02 
23-04-06 20:30:55.635 : <epoch:2199, iter:   6,600, lr:1.000e-04> G_loss: 2.769e-02 
23-04-06 20:32:00.651 : <epoch:2266, iter:   6,800, lr:1.000e-04> G_loss: 2.911e-02 
23-04-06 20:33:05.978 : <epoch:2333, iter:   7,000, lr:1.000e-04> G_loss: 2.636e-02 
23-04-06 20:34:10.422 : <epoch:2399, iter:   7,200, lr:1.000e-04> G_loss: 2.448e-02 
23-04-06 20:35:15.244 : <epoch:2466, iter:   7,400, lr:1.000e-04> G_loss: 2.646e-02 
23-04-06 20:36:20.364 : <epoch:2533, iter:   7,600, lr:1.000e-04> G_loss: 2.665e-02 
23-04-06 20:37:24.276 : <epoch:2599, iter:   7,800, lr:1.000e-04> G_loss: 2.814e-02 
23-04-06 20:38:29.153 : <epoch:2666, iter:   8,000, lr:1.000e-04> G_loss: 3.025e-02 
23-04-06 20:39:33.570 : <epoch:2733, iter:   8,200, lr:1.000e-04> G_loss: 2.575e-02 
23-04-06 20:40:37.546 : <epoch:2799, iter:   8,400, lr:1.000e-04> G_loss: 2.762e-02 
23-04-06 20:41:42.185 : <epoch:2866, iter:   8,600, lr:1.000e-04> G_loss: 2.800e-02 
23-04-06 20:42:46.894 : <epoch:2933, iter:   8,800, lr:1.000e-04> G_loss: 2.575e-02 
23-04-06 20:43:50.951 : <epoch:2999, iter:   9,000, lr:1.000e-04> G_loss: 2.603e-02 
23-04-06 20:44:55.494 : <epoch:3066, iter:   9,200, lr:1.000e-04> G_loss: 2.511e-02 
23-04-06 20:45:59.748 : <epoch:3133, iter:   9,400, lr:1.000e-04> G_loss: 2.613e-02 
23-04-06 20:47:03.643 : <epoch:3199, iter:   9,600, lr:1.000e-04> G_loss: 2.737e-02 
23-04-06 20:48:08.084 : <epoch:3266, iter:   9,800, lr:1.000e-04> G_loss: 2.875e-02 
23-04-06 20:49:12.412 : <epoch:3333, iter:  10,000, lr:1.000e-04> G_loss: 2.598e-02 
23-04-06 20:49:12.413 : Saving the model.
23-04-06 20:49:12.545 : ---1--> 101085.png | 25.73dB
23-04-06 20:49:12.608 : ---2--> 101087.png | 29.79dB
23-04-06 20:49:12.671 : ---3--> 102061.png | 29.54dB
23-04-06 20:49:12.735 : ---4--> 103070.png | 30.33dB
23-04-06 20:49:12.800 : ---5--> 105025.png | 27.14dB
23-04-06 20:49:12.862 : ---6--> 106024.png | 32.36dB
23-04-06 20:49:12.927 : ---7--> 108005.png | 28.41dB
23-04-06 20:49:12.989 : ---8--> 108070.png | 26.05dB
23-04-06 20:49:13.054 : ---9--> 108082.png | 28.79dB
23-04-06 20:49:13.117 : --10--> 109053.png | 29.60dB
23-04-06 20:49:13.180 : --11--> 119082.png | 28.38dB
23-04-06 20:49:13.242 : --12-->  12084.png | 28.18dB
23-04-06 20:49:13.306 : --13--> 123074.png | 29.28dB
23-04-06 20:49:13.369 : --14--> 126007.png | 30.43dB
23-04-06 20:49:13.455 : --15--> 130026.png | 27.06dB
23-04-06 20:49:13.523 : --16--> 134035.png | 27.65dB
23-04-06 20:49:13.586 : --17-->  14037.png | 32.59dB
23-04-06 20:49:13.647 : --18--> 143090.png | 32.57dB
23-04-06 20:49:13.711 : --19--> 145086.png | 27.90dB
23-04-06 20:49:13.776 : --20--> 147091.png | 28.65dB
23-04-06 20:49:13.839 : --21--> 148026.png | 25.99dB
23-04-06 20:49:13.902 : --22--> 148089.png | 26.75dB
23-04-06 20:49:13.965 : --23--> 157055.png | 28.37dB
23-04-06 20:49:14.028 : --24--> 159008.png | 28.36dB
23-04-06 20:49:14.089 : --25--> 160068.png | 29.31dB
23-04-06 20:49:14.152 : --26-->  16077.png | 28.28dB
23-04-06 20:49:14.213 : --27--> 163085.png | 29.76dB
23-04-06 20:49:14.274 : --28--> 167062.png | 32.61dB
23-04-06 20:49:14.337 : --29--> 167083.png | 24.25dB
23-04-06 20:49:14.401 : --30--> 170057.png | 29.61dB
23-04-06 20:49:14.466 : --31--> 175032.png | 24.40dB
23-04-06 20:49:14.533 : --32--> 175043.png | 26.52dB
23-04-06 20:49:14.616 : --33--> 182053.png | 27.66dB
23-04-06 20:49:14.678 : --34--> 189080.png | 32.97dB
23-04-06 20:49:14.742 : --35-->  19021.png | 27.89dB
23-04-06 20:49:14.805 : --36--> 196073.png | 27.25dB
23-04-06 20:49:14.871 : --37--> 197017.png | 28.23dB
23-04-06 20:49:14.937 : --38--> 208001.png | 28.74dB
23-04-06 20:49:15.000 : --39--> 210088.png | 32.28dB
23-04-06 20:49:15.062 : --40-->  21077.png | 29.06dB
23-04-06 20:49:15.127 : --41--> 216081.png | 27.66dB
23-04-06 20:49:15.189 : --42--> 219090.png | 29.21dB
23-04-06 20:49:15.251 : --43--> 220075.png | 29.99dB
23-04-06 20:49:15.315 : --44--> 223061.png | 26.95dB
23-04-06 20:49:15.382 : --45--> 227092.png | 33.00dB
23-04-06 20:49:15.443 : --46--> 229036.png | 26.21dB
23-04-06 20:49:15.509 : --47--> 236037.png | 26.48dB
23-04-06 20:49:15.572 : --48-->  24077.png | 29.26dB
23-04-06 20:49:15.635 : --49--> 241004.png | 31.17dB
23-04-06 20:49:15.699 : --50--> 241048.png | 26.60dB
23-04-06 20:49:15.761 : --51--> 253027.png | 28.21dB
23-04-06 20:49:15.845 : --52--> 253055.png | 31.59dB
23-04-06 20:49:15.905 : --53--> 260058.png | 30.81dB
23-04-06 20:49:15.970 : --54--> 271035.png | 28.72dB
23-04-06 20:49:16.035 : --55--> 285079.png | 27.34dB
23-04-06 20:49:16.100 : --56--> 291000.png | 23.87dB
23-04-06 20:49:16.165 : --57--> 295087.png | 28.13dB
23-04-06 20:49:16.226 : --58--> 296007.png | 30.71dB
23-04-06 20:49:16.288 : --59--> 296059.png | 30.08dB
23-04-06 20:49:16.351 : --60--> 299086.png | 30.77dB
23-04-06 20:49:16.416 : --61--> 300091.png | 29.86dB
23-04-06 20:49:16.480 : --62--> 302008.png | 33.07dB
23-04-06 20:49:16.543 : --63--> 304034.png | 26.38dB
23-04-06 20:49:16.610 : --64--> 304074.png | 26.58dB
23-04-06 20:49:16.671 : --65--> 306005.png | 28.78dB
23-04-06 20:49:16.738 : --66-->   3096.png | 37.42dB
23-04-06 20:49:16.799 : --67-->  33039.png | 24.62dB
23-04-06 20:49:16.862 : --68--> 351093.png | 25.93dB
23-04-06 20:49:16.873 : <epoch:3333, iter:  10,000, Average PSNR : 28.80dB

23-04-06 20:50:21.029 : <epoch:3399, iter:  10,200, lr:1.000e-04> G_loss: 2.656e-02 
23-04-06 20:51:25.836 : <epoch:3466, iter:  10,400, lr:1.000e-04> G_loss: 2.726e-02 
23-04-06 20:52:31.085 : <epoch:3533, iter:  10,600, lr:1.000e-04> G_loss: 2.743e-02 
23-04-06 20:53:35.405 : <epoch:3599, iter:  10,800, lr:1.000e-04> G_loss: 2.796e-02 
23-04-06 20:54:39.799 : <epoch:3666, iter:  11,000, lr:1.000e-04> G_loss: 2.671e-02 
23-04-06 20:55:44.438 : <epoch:3733, iter:  11,200, lr:1.000e-04> G_loss: 2.824e-02 
23-04-06 20:56:49.448 : <epoch:3799, iter:  11,400, lr:1.000e-04> G_loss: 2.518e-02 
23-04-06 20:57:54.487 : <epoch:3866, iter:  11,600, lr:1.000e-04> G_loss: 2.719e-02 
23-04-06 20:58:59.169 : <epoch:3933, iter:  11,800, lr:1.000e-04> G_loss: 2.573e-02 
23-04-06 21:00:02.890 : <epoch:3999, iter:  12,000, lr:1.000e-04> G_loss: 2.754e-02 
23-04-06 21:01:07.370 : <epoch:4066, iter:  12,200, lr:1.000e-04> G_loss: 2.510e-02 
23-04-06 21:02:12.021 : <epoch:4133, iter:  12,400, lr:1.000e-04> G_loss: 2.560e-02 
23-04-06 21:03:15.621 : <epoch:4199, iter:  12,600, lr:1.000e-04> G_loss: 2.787e-02 
23-04-06 21:04:19.937 : <epoch:4266, iter:  12,800, lr:1.000e-04> G_loss: 2.575e-02 
23-04-06 21:05:24.222 : <epoch:4333, iter:  13,000, lr:1.000e-04> G_loss: 2.504e-02 
23-04-06 21:06:27.976 : <epoch:4399, iter:  13,200, lr:1.000e-04> G_loss: 2.616e-02 
23-04-06 21:07:32.449 : <epoch:4466, iter:  13,400, lr:1.000e-04> G_loss: 2.821e-02 
23-04-06 21:08:36.765 : <epoch:4533, iter:  13,600, lr:1.000e-04> G_loss: 2.563e-02 
23-04-06 21:09:40.817 : <epoch:4599, iter:  13,800, lr:1.000e-04> G_loss: 2.671e-02 
23-04-06 21:10:45.049 : <epoch:4666, iter:  14,000, lr:1.000e-04> G_loss: 2.856e-02 
23-04-06 21:11:49.270 : <epoch:4733, iter:  14,200, lr:1.000e-04> G_loss: 2.410e-02 
23-04-06 21:12:53.203 : <epoch:4799, iter:  14,400, lr:1.000e-04> G_loss: 2.693e-02 
23-04-06 21:13:57.391 : <epoch:4866, iter:  14,600, lr:1.000e-04> G_loss: 2.839e-02 
23-04-06 21:15:01.538 : <epoch:4933, iter:  14,800, lr:1.000e-04> G_loss: 2.564e-02 
23-04-06 21:16:05.376 : <epoch:4999, iter:  15,000, lr:1.000e-04> G_loss: 2.624e-02 
23-04-06 21:16:05.377 : Saving the model.
23-04-06 21:16:05.504 : ---1--> 101085.png | 25.82dB
23-04-06 21:16:05.567 : ---2--> 101087.png | 29.98dB
23-04-06 21:16:05.644 : ---3--> 102061.png | 29.71dB
23-04-06 21:16:05.710 : ---4--> 103070.png | 30.46dB
23-04-06 21:16:05.774 : ---5--> 105025.png | 27.40dB
23-04-06 21:16:05.835 : ---6--> 106024.png | 32.58dB
23-04-06 21:16:05.898 : ---7--> 108005.png | 28.52dB
23-04-06 21:16:05.962 : ---8--> 108070.png | 26.15dB
23-04-06 21:16:06.027 : ---9--> 108082.png | 28.90dB
23-04-06 21:16:06.090 : --10--> 109053.png | 29.69dB
23-04-06 21:16:06.155 : --11--> 119082.png | 28.61dB
23-04-06 21:16:06.220 : --12-->  12084.png | 28.28dB
23-04-06 21:16:06.289 : --13--> 123074.png | 29.39dB
23-04-06 21:16:06.353 : --14--> 126007.png | 30.64dB
23-04-06 21:16:06.418 : --15--> 130026.png | 27.13dB
23-04-06 21:16:06.481 : --16--> 134035.png | 27.78dB
23-04-06 21:16:06.548 : --17-->  14037.png | 32.75dB
23-04-06 21:16:06.611 : --18--> 143090.png | 32.74dB
23-04-06 21:16:06.676 : --19--> 145086.png | 28.01dB
23-04-06 21:16:06.742 : --20--> 147091.png | 28.74dB
23-04-06 21:16:06.833 : --21--> 148026.png | 26.09dB
23-04-06 21:16:06.900 : --22--> 148089.png | 26.86dB
23-04-06 21:16:06.962 : --23--> 157055.png | 28.61dB
23-04-06 21:16:07.027 : --24--> 159008.png | 28.46dB
23-04-06 21:16:07.090 : --25--> 160068.png | 29.36dB
23-04-06 21:16:07.155 : --26-->  16077.png | 28.42dB
23-04-06 21:16:07.219 : --27--> 163085.png | 29.81dB
23-04-06 21:16:07.283 : --28--> 167062.png | 32.92dB
23-04-06 21:16:07.347 : --29--> 167083.png | 24.30dB
23-04-06 21:16:07.411 : --30--> 170057.png | 29.72dB
23-04-06 21:16:07.475 : --31--> 175032.png | 24.46dB
23-04-06 21:16:07.542 : --32--> 175043.png | 26.56dB
23-04-06 21:16:07.604 : --33--> 182053.png | 27.75dB
23-04-06 21:16:07.666 : --34--> 189080.png | 33.13dB
23-04-06 21:16:07.733 : --35-->  19021.png | 27.99dB
23-04-06 21:16:07.803 : --36--> 196073.png | 27.32dB
23-04-06 21:16:07.866 : --37--> 197017.png | 28.40dB
23-04-06 21:16:07.929 : --38--> 208001.png | 28.89dB
23-04-06 21:16:08.020 : --39--> 210088.png | 32.69dB
23-04-06 21:16:08.083 : --40-->  21077.png | 29.17dB
23-04-06 21:16:08.150 : --41--> 216081.png | 27.80dB
23-04-06 21:16:08.212 : --42--> 219090.png | 29.33dB
23-04-06 21:16:08.274 : --43--> 220075.png | 30.15dB
23-04-06 21:16:08.338 : --44--> 223061.png | 27.18dB
23-04-06 21:16:08.401 : --45--> 227092.png | 33.22dB
23-04-06 21:16:08.475 : --46--> 229036.png | 26.29dB
23-04-06 21:16:08.552 : --47--> 236037.png | 26.55dB
23-04-06 21:16:08.617 : --48-->  24077.png | 29.57dB
23-04-06 21:16:08.679 : --49--> 241004.png | 31.37dB
23-04-06 21:16:08.750 : --50--> 241048.png | 26.77dB
23-04-06 21:16:08.814 : --51--> 253027.png | 28.33dB
23-04-06 21:16:08.878 : --52--> 253055.png | 31.80dB
23-04-06 21:16:08.941 : --53--> 260058.png | 30.85dB
23-04-06 21:16:09.005 : --54--> 271035.png | 28.91dB
23-04-06 21:16:09.069 : --55--> 285079.png | 27.49dB
23-04-06 21:16:09.150 : --56--> 291000.png | 23.96dB
23-04-06 21:16:09.212 : --57--> 295087.png | 28.25dB
23-04-06 21:16:09.276 : --58--> 296007.png | 30.79dB
23-04-06 21:16:09.339 : --59--> 296059.png | 30.22dB
23-04-06 21:16:09.405 : --60--> 299086.png | 30.85dB
23-04-06 21:16:09.470 : --61--> 300091.png | 30.02dB
23-04-06 21:16:09.552 : --62--> 302008.png | 33.35dB
23-04-06 21:16:09.621 : --63--> 304034.png | 26.43dB
23-04-06 21:16:09.697 : --64--> 304074.png | 26.66dB
23-04-06 21:16:09.767 : --65--> 306005.png | 28.84dB
23-04-06 21:16:09.836 : --66-->   3096.png | 37.67dB
23-04-06 21:16:09.900 : --67-->  33039.png | 24.66dB
23-04-06 21:16:09.963 : --68--> 351093.png | 26.02dB
23-04-06 21:16:09.978 : <epoch:4999, iter:  15,000, Average PSNR : 28.93dB

23-04-06 21:17:14.769 : <epoch:5066, iter:  15,200, lr:1.000e-04> G_loss: 2.688e-02 
23-04-06 21:18:19.579 : <epoch:5133, iter:  15,400, lr:1.000e-04> G_loss: 2.604e-02 
23-04-06 21:19:22.867 : <epoch:5199, iter:  15,600, lr:1.000e-04> G_loss: 2.386e-02 
23-04-06 21:20:27.128 : <epoch:5266, iter:  15,800, lr:1.000e-04> G_loss: 2.713e-02 
23-04-06 21:21:31.328 : <epoch:5333, iter:  16,000, lr:1.000e-04> G_loss: 2.658e-02 
23-04-06 21:22:34.915 : <epoch:5399, iter:  16,200, lr:1.000e-04> G_loss: 2.628e-02 
23-04-06 21:23:38.868 : <epoch:5466, iter:  16,400, lr:1.000e-04> G_loss: 2.517e-02 
23-04-06 21:24:43.202 : <epoch:5533, iter:  16,600, lr:1.000e-04> G_loss: 2.552e-02 
23-04-06 21:25:46.796 : <epoch:5599, iter:  16,800, lr:1.000e-04> G_loss: 2.624e-02 
23-04-06 21:26:51.312 : <epoch:5666, iter:  17,000, lr:1.000e-04> G_loss: 2.902e-02 
23-04-06 21:27:55.967 : <epoch:5733, iter:  17,200, lr:1.000e-04> G_loss: 2.575e-02 
23-04-06 21:28:59.884 : <epoch:5799, iter:  17,400, lr:1.000e-04> G_loss: 2.615e-02 
23-04-06 21:30:05.135 : <epoch:5866, iter:  17,600, lr:1.000e-04> G_loss: 2.536e-02 
23-04-06 21:31:10.452 : <epoch:5933, iter:  17,800, lr:1.000e-04> G_loss: 2.525e-02 
23-04-06 21:32:14.087 : <epoch:5999, iter:  18,000, lr:1.000e-04> G_loss: 2.419e-02 
23-04-06 21:33:19.009 : <epoch:6066, iter:  18,200, lr:1.000e-04> G_loss: 2.603e-02 
23-04-06 21:34:23.707 : <epoch:6133, iter:  18,400, lr:1.000e-04> G_loss: 2.529e-02 
23-04-06 21:35:27.109 : <epoch:6199, iter:  18,600, lr:1.000e-04> G_loss: 2.576e-02 
23-04-06 21:36:32.021 : <epoch:6266, iter:  18,800, lr:1.000e-04> G_loss: 2.511e-02 
23-04-06 21:37:37.431 : <epoch:6333, iter:  19,000, lr:1.000e-04> G_loss: 2.569e-02 
23-04-06 21:38:40.951 : <epoch:6399, iter:  19,200, lr:1.000e-04> G_loss: 2.580e-02 
23-04-06 21:39:45.463 : <epoch:6466, iter:  19,400, lr:1.000e-04> G_loss: 2.729e-02 
23-04-06 21:40:49.442 : <epoch:6533, iter:  19,600, lr:1.000e-04> G_loss: 2.673e-02 
23-04-06 21:41:53.142 : <epoch:6599, iter:  19,800, lr:1.000e-04> G_loss: 2.512e-02 
23-04-06 21:42:57.459 : <epoch:6666, iter:  20,000, lr:1.000e-04> G_loss: 2.538e-02 
23-04-06 21:42:57.459 : Saving the model.
23-04-06 21:42:57.590 : ---1--> 101085.png | 25.81dB
23-04-06 21:42:57.655 : ---2--> 101087.png | 29.65dB
23-04-06 21:42:57.719 : ---3--> 102061.png | 29.78dB
23-04-06 21:42:57.786 : ---4--> 103070.png | 30.45dB
23-04-06 21:42:57.851 : ---5--> 105025.png | 27.28dB
23-04-06 21:42:57.913 : ---6--> 106024.png | 32.15dB
23-04-06 21:42:57.980 : ---7--> 108005.png | 28.52dB
23-04-06 21:42:58.047 : ---8--> 108070.png | 26.14dB
23-04-06 21:42:58.120 : ---9--> 108082.png | 28.90dB
23-04-06 21:42:58.192 : --10--> 109053.png | 29.70dB
23-04-06 21:42:58.260 : --11--> 119082.png | 28.70dB
23-04-06 21:42:58.333 : --12-->  12084.png | 28.26dB
23-04-06 21:42:58.400 : --13--> 123074.png | 29.40dB
23-04-06 21:42:58.463 : --14--> 126007.png | 30.65dB
23-04-06 21:42:58.530 : --15--> 130026.png | 27.14dB
23-04-06 21:42:58.601 : --16--> 134035.png | 27.84dB
23-04-06 21:42:58.663 : --17-->  14037.png | 32.73dB
23-04-06 21:42:58.724 : --18--> 143090.png | 32.82dB
23-04-06 21:42:58.789 : --19--> 145086.png | 28.02dB
23-04-06 21:42:58.905 : --20--> 147091.png | 28.74dB
23-04-06 21:42:58.968 : --21--> 148026.png | 26.16dB
23-04-06 21:42:59.040 : --22--> 148089.png | 26.94dB
23-04-06 21:42:59.111 : --23--> 157055.png | 28.66dB
23-04-06 21:42:59.183 : --24--> 159008.png | 28.48dB
23-04-06 21:42:59.253 : --25--> 160068.png | 29.41dB
23-04-06 21:42:59.324 : --26-->  16077.png | 28.40dB
23-04-06 21:42:59.393 : --27--> 163085.png | 29.86dB
23-04-06 21:42:59.464 : --28--> 167062.png | 32.12dB
23-04-06 21:42:59.538 : --29--> 167083.png | 24.34dB
23-04-06 21:42:59.614 : --30--> 170057.png | 29.72dB
23-04-06 21:42:59.678 : --31--> 175032.png | 24.50dB
23-04-06 21:42:59.748 : --32--> 175043.png | 26.58dB
23-04-06 21:42:59.811 : --33--> 182053.png | 27.78dB
23-04-06 21:42:59.875 : --34--> 189080.png | 32.87dB
23-04-06 21:42:59.937 : --35-->  19021.png | 28.00dB
23-04-06 21:43:00.000 : --36--> 196073.png | 27.30dB
23-04-06 21:43:00.067 : --37--> 197017.png | 28.39dB
23-04-06 21:43:00.148 : --38--> 208001.png | 28.91dB
23-04-06 21:43:00.215 : --39--> 210088.png | 32.66dB
23-04-06 21:43:00.284 : --40-->  21077.png | 29.14dB
23-04-06 21:43:00.362 : --41--> 216081.png | 27.82dB
23-04-06 21:43:00.432 : --42--> 219090.png | 29.39dB
23-04-06 21:43:00.502 : --43--> 220075.png | 30.19dB
23-04-06 21:43:00.571 : --44--> 223061.png | 27.25dB
23-04-06 21:43:00.642 : --45--> 227092.png | 33.30dB
23-04-06 21:43:00.715 : --46--> 229036.png | 26.29dB
23-04-06 21:43:00.785 : --47--> 236037.png | 26.56dB
23-04-06 21:43:00.858 : --48-->  24077.png | 29.47dB
23-04-06 21:43:00.928 : --49--> 241004.png | 31.05dB
23-04-06 21:43:00.997 : --50--> 241048.png | 26.71dB
23-04-06 21:43:01.075 : --51--> 253027.png | 28.37dB
23-04-06 21:43:01.147 : --52--> 253055.png | 31.24dB
23-04-06 21:43:01.217 : --53--> 260058.png | 30.92dB
23-04-06 21:43:01.289 : --54--> 271035.png | 28.95dB
23-04-06 21:43:01.366 : --55--> 285079.png | 27.47dB
23-04-06 21:43:01.456 : --56--> 291000.png | 24.00dB
23-04-06 21:43:01.529 : --57--> 295087.png | 28.26dB
23-04-06 21:43:01.593 : --58--> 296007.png | 30.82dB
23-04-06 21:43:01.655 : --59--> 296059.png | 30.27dB
23-04-06 21:43:01.719 : --60--> 299086.png | 30.89dB
23-04-06 21:43:01.782 : --61--> 300091.png | 29.98dB
23-04-06 21:43:01.844 : --62--> 302008.png | 33.53dB
23-04-06 21:43:01.906 : --63--> 304034.png | 26.46dB
23-04-06 21:43:01.972 : --64--> 304074.png | 26.67dB
23-04-06 21:43:02.034 : --65--> 306005.png | 28.85dB
23-04-06 21:43:02.105 : --66-->   3096.png | 38.00dB
23-04-06 21:43:02.167 : --67-->  33039.png | 24.69dB
23-04-06 21:43:02.229 : --68--> 351093.png | 25.90dB
23-04-06 21:43:02.240 : <epoch:6666, iter:  20,000, Average PSNR : 28.91dB

23-04-06 21:44:06.933 : <epoch:6733, iter:  20,200, lr:1.000e-04> G_loss: 2.366e-02 
23-04-06 21:45:10.803 : <epoch:6799, iter:  20,400, lr:1.000e-04> G_loss: 2.676e-02 
23-04-06 21:46:15.021 : <epoch:6866, iter:  20,600, lr:1.000e-04> G_loss: 2.455e-02 
23-04-06 21:47:19.799 : <epoch:6933, iter:  20,800, lr:1.000e-04> G_loss: 2.521e-02 
23-04-06 21:48:23.594 : <epoch:6999, iter:  21,000, lr:1.000e-04> G_loss: 2.577e-02 
23-04-06 21:49:28.293 : <epoch:7066, iter:  21,200, lr:1.000e-04> G_loss: 2.743e-02 
23-04-06 21:50:32.704 : <epoch:7133, iter:  21,400, lr:1.000e-04> G_loss: 2.457e-02 
23-04-06 21:55:29.541 : <epoch:7199, iter:  21,600, lr:1.000e-04> G_loss: 2.652e-02 
23-04-06 21:56:33.881 : <epoch:7266, iter:  21,800, lr:1.000e-04> G_loss: 2.674e-02 
23-04-06 21:57:38.381 : <epoch:7333, iter:  22,000, lr:1.000e-04> G_loss: 2.562e-02 
23-04-06 21:58:42.352 : <epoch:7399, iter:  22,200, lr:1.000e-04> G_loss: 2.838e-02 
23-04-06 21:59:46.793 : <epoch:7466, iter:  22,400, lr:1.000e-04> G_loss: 2.747e-02 
23-04-06 22:00:51.191 : <epoch:7533, iter:  22,600, lr:1.000e-04> G_loss: 2.512e-02 
23-04-06 22:01:55.035 : <epoch:7599, iter:  22,800, lr:1.000e-04> G_loss: 2.579e-02 
23-04-06 22:02:59.455 : <epoch:7666, iter:  23,000, lr:1.000e-04> G_loss: 2.647e-02 
23-04-06 22:04:04.125 : <epoch:7733, iter:  23,200, lr:1.000e-04> G_loss: 2.664e-02 
23-04-06 22:05:08.034 : <epoch:7799, iter:  23,400, lr:1.000e-04> G_loss: 2.501e-02 
23-04-06 22:06:12.418 : <epoch:7866, iter:  23,600, lr:1.000e-04> G_loss: 2.529e-02 
23-04-06 22:07:17.054 : <epoch:7933, iter:  23,800, lr:1.000e-04> G_loss: 2.555e-02 
23-04-06 22:08:20.978 : <epoch:7999, iter:  24,000, lr:1.000e-04> G_loss: 2.379e-02 
23-04-06 22:09:25.583 : <epoch:8066, iter:  24,200, lr:1.000e-04> G_loss: 2.406e-02 
23-04-06 22:10:30.203 : <epoch:8133, iter:  24,400, lr:1.000e-04> G_loss: 2.456e-02 
23-04-06 22:11:34.616 : <epoch:8199, iter:  24,600, lr:1.000e-04> G_loss: 2.532e-02 
23-04-06 22:12:39.632 : <epoch:8266, iter:  24,800, lr:1.000e-04> G_loss: 2.649e-02 
23-04-06 22:13:44.526 : <epoch:8333, iter:  25,000, lr:1.000e-04> G_loss: 2.577e-02 
23-04-06 22:13:44.526 : Saving the model.
23-04-06 22:13:44.655 : ---1--> 101085.png | 25.80dB
23-04-06 22:13:44.721 : ---2--> 101087.png | 29.99dB
23-04-06 22:13:44.783 : ---3--> 102061.png | 29.73dB
23-04-06 22:13:44.846 : ---4--> 103070.png | 30.53dB
23-04-06 22:13:44.911 : ---5--> 105025.png | 27.21dB
23-04-06 22:13:44.976 : ---6--> 106024.png | 32.41dB
23-04-06 22:13:45.039 : ---7--> 108005.png | 28.56dB
23-04-06 22:13:45.102 : ---8--> 108070.png | 26.16dB
23-04-06 22:13:45.166 : ---9--> 108082.png | 28.91dB
23-04-06 22:13:45.229 : --10--> 109053.png | 29.71dB
23-04-06 22:13:45.292 : --11--> 119082.png | 28.67dB
23-04-06 22:13:45.355 : --12-->  12084.png | 28.32dB
23-04-06 22:13:45.418 : --13--> 123074.png | 29.44dB
23-04-06 22:13:45.479 : --14--> 126007.png | 30.63dB
23-04-06 22:13:45.542 : --15--> 130026.png | 27.08dB
23-04-06 22:13:45.605 : --16--> 134035.png | 27.87dB
23-04-06 22:13:45.669 : --17-->  14037.png | 32.78dB
23-04-06 22:13:45.731 : --18--> 143090.png | 32.78dB
23-04-06 22:13:45.798 : --19--> 145086.png | 28.01dB
23-04-06 22:13:45.861 : --20--> 147091.png | 28.77dB
23-04-06 22:13:45.925 : --21--> 148026.png | 26.03dB
23-04-06 22:13:45.988 : --22--> 148089.png | 26.96dB
23-04-06 22:13:46.053 : --23--> 157055.png | 28.52dB
23-04-06 22:13:46.119 : --24--> 159008.png | 28.48dB
23-04-06 22:13:46.187 : --25--> 160068.png | 29.39dB
23-04-06 22:13:46.252 : --26-->  16077.png | 28.38dB
23-04-06 22:13:46.317 : --27--> 163085.png | 29.89dB
23-04-06 22:13:46.381 : --28--> 167062.png | 32.79dB
23-04-06 22:13:46.446 : --29--> 167083.png | 24.33dB
23-04-06 22:13:46.510 : --30--> 170057.png | 29.76dB
23-04-06 22:13:46.573 : --31--> 175032.png | 24.53dB
23-04-06 22:13:46.642 : --32--> 175043.png | 26.61dB
23-04-06 22:13:46.704 : --33--> 182053.png | 27.75dB
23-04-06 22:13:46.769 : --34--> 189080.png | 33.03dB
23-04-06 22:13:46.838 : --35-->  19021.png | 27.98dB
23-04-06 22:13:46.904 : --36--> 196073.png | 27.40dB
23-04-06 22:13:46.966 : --37--> 197017.png | 28.42dB
23-04-06 22:13:47.031 : --38--> 208001.png | 28.88dB
23-04-06 22:13:47.100 : --39--> 210088.png | 32.77dB
23-04-06 22:13:47.166 : --40-->  21077.png | 29.19dB
23-04-06 22:13:47.258 : --41--> 216081.png | 27.82dB
23-04-06 22:13:47.320 : --42--> 219090.png | 29.39dB
23-04-06 22:13:47.383 : --43--> 220075.png | 30.20dB
23-04-06 22:13:47.449 : --44--> 223061.png | 27.28dB
23-04-06 22:13:47.513 : --45--> 227092.png | 33.36dB
23-04-06 22:13:47.576 : --46--> 229036.png | 26.27dB
23-04-06 22:13:47.638 : --47--> 236037.png | 26.57dB
23-04-06 22:13:47.702 : --48-->  24077.png | 29.49dB
23-04-06 22:13:47.766 : --49--> 241004.png | 31.32dB
23-04-06 22:13:47.829 : --50--> 241048.png | 26.69dB
23-04-06 22:13:47.894 : --51--> 253027.png | 28.31dB
23-04-06 22:13:47.957 : --52--> 253055.png | 31.66dB
23-04-06 22:13:48.019 : --53--> 260058.png | 30.93dB
23-04-06 22:13:48.082 : --54--> 271035.png | 28.90dB
23-04-06 22:13:48.149 : --55--> 285079.png | 27.47dB
23-04-06 22:13:48.211 : --56--> 291000.png | 23.98dB
23-04-06 22:13:48.276 : --57--> 295087.png | 28.28dB
23-04-06 22:13:48.344 : --58--> 296007.png | 30.81dB
23-04-06 22:13:48.411 : --59--> 296059.png | 30.28dB
23-04-06 22:13:48.472 : --60--> 299086.png | 30.90dB
23-04-06 22:13:48.535 : --61--> 300091.png | 30.00dB
23-04-06 22:13:48.599 : --62--> 302008.png | 33.55dB
23-04-06 22:13:48.663 : --63--> 304034.png | 26.48dB
23-04-06 22:13:48.726 : --64--> 304074.png | 26.65dB
23-04-06 22:13:48.791 : --65--> 306005.png | 28.85dB
23-04-06 22:13:48.865 : --66-->   3096.png | 37.76dB
23-04-06 22:13:48.926 : --67-->  33039.png | 24.62dB
23-04-06 22:13:48.987 : --68--> 351093.png | 26.04dB
23-04-06 22:13:48.999 : <epoch:8333, iter:  25,000, Average PSNR : 28.95dB

23-04-06 22:14:53.486 : <epoch:8399, iter:  25,200, lr:1.000e-04> G_loss: 2.814e-02 
23-04-06 22:15:58.710 : <epoch:8466, iter:  25,400, lr:1.000e-04> G_loss: 2.527e-02 
23-04-06 22:17:04.057 : <epoch:8533, iter:  25,600, lr:1.000e-04> G_loss: 2.265e-02 
23-04-06 22:18:08.801 : <epoch:8599, iter:  25,800, lr:1.000e-04> G_loss: 2.479e-02 
23-04-06 22:19:14.358 : <epoch:8666, iter:  26,000, lr:1.000e-04> G_loss: 2.793e-02 
23-04-06 22:20:20.999 : <epoch:8733, iter:  26,200, lr:1.000e-04> G_loss: 2.840e-02 
23-04-06 22:21:27.236 : <epoch:8799, iter:  26,400, lr:1.000e-04> G_loss: 2.810e-02 
23-04-06 22:22:33.222 : <epoch:8866, iter:  26,600, lr:1.000e-04> G_loss: 2.192e-02 
23-04-06 22:23:38.910 : <epoch:8933, iter:  26,800, lr:1.000e-04> G_loss: 2.640e-02 
23-04-06 22:24:43.837 : <epoch:8999, iter:  27,000, lr:1.000e-04> G_loss: 2.503e-02 
23-04-06 22:25:49.636 : <epoch:9066, iter:  27,200, lr:1.000e-04> G_loss: 2.568e-02 
23-04-06 22:26:55.132 : <epoch:9133, iter:  27,400, lr:1.000e-04> G_loss: 2.635e-02 
23-04-06 22:28:00.082 : <epoch:9199, iter:  27,600, lr:1.000e-04> G_loss: 2.570e-02 
23-04-06 22:29:04.975 : <epoch:9266, iter:  27,800, lr:1.000e-04> G_loss: 2.578e-02 
23-04-06 22:30:09.958 : <epoch:9333, iter:  28,000, lr:1.000e-04> G_loss: 2.602e-02 
23-04-06 22:31:13.998 : <epoch:9399, iter:  28,200, lr:1.000e-04> G_loss: 2.551e-02 
23-04-06 22:32:18.752 : <epoch:9466, iter:  28,400, lr:1.000e-04> G_loss: 2.828e-02 
23-04-06 22:33:23.418 : <epoch:9533, iter:  28,600, lr:1.000e-04> G_loss: 2.458e-02 
23-04-06 22:34:27.512 : <epoch:9599, iter:  28,800, lr:1.000e-04> G_loss: 2.407e-02 
23-04-06 22:35:32.403 : <epoch:9666, iter:  29,000, lr:1.000e-04> G_loss: 2.728e-02 
23-04-06 22:36:37.103 : <epoch:9733, iter:  29,200, lr:1.000e-04> G_loss: 2.726e-02 
23-04-06 22:37:40.788 : <epoch:9799, iter:  29,400, lr:1.000e-04> G_loss: 2.550e-02 
23-04-06 22:38:45.799 : <epoch:9866, iter:  29,600, lr:1.000e-04> G_loss: 2.809e-02 
23-04-06 22:39:51.077 : <epoch:9933, iter:  29,800, lr:1.000e-04> G_loss: 2.613e-02 
23-04-06 22:40:55.065 : <epoch:9999, iter:  30,000, lr:1.000e-04> G_loss: 2.572e-02 
23-04-06 22:40:55.066 : Saving the model.
23-04-06 22:40:55.192 : ---1--> 101085.png | 25.84dB
23-04-06 22:40:55.260 : ---2--> 101087.png | 30.06dB
23-04-06 22:40:55.323 : ---3--> 102061.png | 29.85dB
23-04-06 22:40:55.388 : ---4--> 103070.png | 30.57dB
23-04-06 22:40:55.451 : ---5--> 105025.png | 27.48dB
23-04-06 22:40:55.513 : ---6--> 106024.png | 32.78dB
23-04-06 22:40:55.577 : ---7--> 108005.png | 28.60dB
23-04-06 22:40:55.656 : ---8--> 108070.png | 26.16dB
23-04-06 22:40:55.724 : ---9--> 108082.png | 28.96dB
23-04-06 22:40:55.786 : --10--> 109053.png | 29.73dB
23-04-06 22:40:55.851 : --11--> 119082.png | 28.80dB
23-04-06 22:40:55.918 : --12-->  12084.png | 28.36dB
23-04-06 22:40:55.980 : --13--> 123074.png | 29.47dB
23-04-06 22:40:56.045 : --14--> 126007.png | 30.70dB
23-04-06 22:40:56.108 : --15--> 130026.png | 27.15dB
23-04-06 22:40:56.172 : --16--> 134035.png | 27.97dB
23-04-06 22:40:56.235 : --17-->  14037.png | 32.79dB
23-04-06 22:40:56.298 : --18--> 143090.png | 32.88dB
23-04-06 22:40:56.360 : --19--> 145086.png | 28.10dB
23-04-06 22:40:56.424 : --20--> 147091.png | 28.80dB
23-04-06 22:40:56.488 : --21--> 148026.png | 26.23dB
23-04-06 22:40:56.553 : --22--> 148089.png | 27.00dB
23-04-06 22:40:56.622 : --23--> 157055.png | 28.82dB
23-04-06 22:40:56.685 : --24--> 159008.png | 28.58dB
23-04-06 22:40:56.768 : --25--> 160068.png | 29.42dB
23-04-06 22:40:56.831 : --26-->  16077.png | 28.48dB
23-04-06 22:40:56.893 : --27--> 163085.png | 29.92dB
23-04-06 22:40:56.956 : --28--> 167062.png | 32.92dB
23-04-06 22:40:57.023 : --29--> 167083.png | 24.35dB
23-04-06 22:40:57.087 : --30--> 170057.png | 29.80dB
23-04-06 22:40:57.152 : --31--> 175032.png | 24.54dB
23-04-06 22:40:57.216 : --32--> 175043.png | 26.62dB
23-04-06 22:40:57.279 : --33--> 182053.png | 27.83dB
23-04-06 22:40:57.343 : --34--> 189080.png | 33.30dB
23-04-06 22:40:57.405 : --35-->  19021.png | 28.03dB
23-04-06 22:40:57.469 : --36--> 196073.png | 27.41dB
23-04-06 22:40:57.532 : --37--> 197017.png | 28.48dB
23-04-06 22:40:57.597 : --38--> 208001.png | 29.01dB
23-04-06 22:40:57.658 : --39--> 210088.png | 32.93dB
23-04-06 22:40:57.720 : --40-->  21077.png | 29.29dB
23-04-06 22:40:57.782 : --41--> 216081.png | 27.88dB
23-04-06 22:40:57.843 : --42--> 219090.png | 29.46dB
23-04-06 22:40:57.931 : --43--> 220075.png | 30.31dB
23-04-06 22:40:57.992 : --44--> 223061.png | 27.34dB
23-04-06 22:40:58.054 : --45--> 227092.png | 33.41dB
23-04-06 22:40:58.116 : --46--> 229036.png | 26.36dB
23-04-06 22:40:58.179 : --47--> 236037.png | 26.59dB
23-04-06 22:40:58.245 : --48-->  24077.png | 29.78dB
23-04-06 22:40:58.308 : --49--> 241004.png | 31.43dB
23-04-06 22:40:58.371 : --50--> 241048.png | 26.83dB
23-04-06 22:40:58.435 : --51--> 253027.png | 28.41dB
23-04-06 22:40:58.499 : --52--> 253055.png | 31.91dB
23-04-06 22:40:58.564 : --53--> 260058.png | 31.04dB
23-04-06 22:40:58.628 : --54--> 271035.png | 29.06dB
23-04-06 22:40:58.691 : --55--> 285079.png | 27.55dB
23-04-06 22:40:58.754 : --56--> 291000.png | 24.01dB
23-04-06 22:40:58.819 : --57--> 295087.png | 28.29dB
23-04-06 22:40:58.885 : --58--> 296007.png | 30.84dB
23-04-06 22:40:58.951 : --59--> 296059.png | 30.31dB
23-04-06 22:40:59.023 : --60--> 299086.png | 30.94dB
23-04-06 22:40:59.096 : --61--> 300091.png | 30.10dB
23-04-06 22:40:59.163 : --62--> 302008.png | 33.66dB
23-04-06 22:40:59.239 : --63--> 304034.png | 26.48dB
23-04-06 22:40:59.308 : --64--> 304074.png | 26.68dB
23-04-06 22:40:59.385 : --65--> 306005.png | 28.90dB
23-04-06 22:40:59.456 : --66-->   3096.png | 38.01dB
23-04-06 22:40:59.520 : --67-->  33039.png | 24.64dB
23-04-06 22:40:59.584 : --68--> 351093.png | 26.05dB
23-04-06 22:40:59.600 : <epoch:9999, iter:  30,000, Average PSNR : 29.03dB

23-04-06 22:40:59.664 : Saving the final model.
23-04-06 22:40:59.695 : End of training.
23-04-08 12:45:27.053 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-08 12:45:27.332 : Random seed: 7510
23-04-08 12:45:28.603 : Number of train images: 200, iters: 4
23-04-08 12:47:22.574 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-08 12:47:22.599 : Random seed: 1180
23-04-08 12:47:22.611 : Number of train images: 200, iters: 4
23-04-08 12:47:56.670 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-08 12:47:56.671 : Random seed: 7365
23-04-08 12:47:56.680 : Number of train images: 200, iters: 4
23-04-08 12:51:18.553 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-08 12:51:18.554 : Random seed: 570
23-04-08 12:51:18.563 : Number of train images: 200, iters: 4
23-04-10 06:32:22.116 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 06:32:22.273 : Random seed: 4691
23-04-10 06:32:23.387 : Number of train images: 200, iters: 4
23-04-10 06:44:41.002 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 06:44:42.332 : Random seed: 7199
23-04-10 06:44:44.758 : Number of train images: 200, iters: 4
23-04-10 06:47:29.026 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 06:47:29.026 : Random seed: 1171
23-04-10 06:47:29.033 : Number of train images: 200, iters: 4
23-04-10 06:48:17.352 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 06:48:17.352 : Random seed: 2325
23-04-10 06:48:17.359 : Number of train images: 200, iters: 4
23-04-10 06:48:51.943 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 06:48:51.944 : Random seed: 1263
23-04-10 06:48:51.950 : Number of train images: 200, iters: 4
23-04-10 06:48:52.830 : 
Networks name: DnCNN
Params number: 557057
Net structure:
DnCNN(
  (model): Sequential(
    (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): ReLU(inplace=True)
    (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (3): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (6): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (12): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (15): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (18): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (21): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (24): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (27): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (30): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (33): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (36): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (39): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (42): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (45): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): Conv2d(64, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
)

23-04-10 06:48:52.946 : 
 |  mean  |  min   |  max   |  std   || shape               
 | -0.000 | -0.065 |  0.071 |  0.025 | torch.Size([64, 1, 3, 3]) || model.0.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.0.bias
 | -0.000 | -0.034 |  0.034 |  0.008 | torch.Size([64, 64, 3, 3]) || model.2.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.2.bias
 |  0.510 |  0.108 |  0.990 |  0.261 | torch.Size([64]) || model.3.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.3.running_var
 |  0.000 | -0.033 |  0.033 |  0.008 | torch.Size([64, 64, 3, 3]) || model.5.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.5.bias
 |  0.542 |  0.125 |  0.966 |  0.267 | torch.Size([64]) || model.6.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.6.running_var
 |  0.000 | -0.034 |  0.035 |  0.008 | torch.Size([64, 64, 3, 3]) || model.8.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.8.bias
 |  0.538 |  0.105 |  0.978 |  0.250 | torch.Size([64]) || model.9.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.9.running_var
 |  0.000 | -0.041 |  0.035 |  0.008 | torch.Size([64, 64, 3, 3]) || model.11.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.11.bias
 |  0.552 |  0.111 |  0.969 |  0.270 | torch.Size([64]) || model.12.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.12.running_var
 |  0.000 | -0.034 |  0.034 |  0.008 | torch.Size([64, 64, 3, 3]) || model.14.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.14.bias
 |  0.494 |  0.105 |  0.989 |  0.245 | torch.Size([64]) || model.15.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.15.running_var
 |  0.000 | -0.033 |  0.031 |  0.008 | torch.Size([64, 64, 3, 3]) || model.17.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.17.bias
 |  0.513 |  0.135 |  0.979 |  0.263 | torch.Size([64]) || model.18.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.18.running_var
 |  0.000 | -0.035 |  0.034 |  0.008 | torch.Size([64, 64, 3, 3]) || model.20.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.20.bias
 |  0.489 |  0.114 |  0.929 |  0.249 | torch.Size([64]) || model.21.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.21.running_var
 |  0.000 | -0.035 |  0.033 |  0.008 | torch.Size([64, 64, 3, 3]) || model.23.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.23.bias
 |  0.563 |  0.107 |  0.980 |  0.247 | torch.Size([64]) || model.24.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.24.running_var
 |  0.000 | -0.035 |  0.036 |  0.008 | torch.Size([64, 64, 3, 3]) || model.26.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.26.bias
 |  0.509 |  0.110 |  0.990 |  0.266 | torch.Size([64]) || model.27.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.27.running_var
 | -0.000 | -0.034 |  0.032 |  0.008 | torch.Size([64, 64, 3, 3]) || model.29.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.29.bias
 |  0.580 |  0.107 |  1.000 |  0.276 | torch.Size([64]) || model.30.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.30.running_var
 | -0.000 | -0.035 |  0.037 |  0.008 | torch.Size([64, 64, 3, 3]) || model.32.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.32.bias
 |  0.595 |  0.100 |  0.993 |  0.261 | torch.Size([64]) || model.33.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.33.running_var
 |  0.000 | -0.034 |  0.038 |  0.008 | torch.Size([64, 64, 3, 3]) || model.35.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.35.bias
 |  0.498 |  0.102 |  0.954 |  0.268 | torch.Size([64]) || model.36.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.36.running_var
 | -0.000 | -0.034 |  0.033 |  0.008 | torch.Size([64, 64, 3, 3]) || model.38.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.38.bias
 |  0.533 |  0.102 |  0.957 |  0.259 | torch.Size([64]) || model.39.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.39.running_var
 | -0.000 | -0.036 |  0.036 |  0.008 | torch.Size([64, 64, 3, 3]) || model.41.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.41.bias
 |  0.615 |  0.102 |  0.993 |  0.256 | torch.Size([64]) || model.42.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.42.running_var
 |  0.000 | -0.040 |  0.032 |  0.008 | torch.Size([64, 64, 3, 3]) || model.44.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.44.bias
 |  0.562 |  0.103 |  0.997 |  0.291 | torch.Size([64]) || model.45.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.45.running_var
 | -0.000 | -0.023 |  0.028 |  0.008 | torch.Size([1, 64, 3, 3]) || model.47.weight
 |  0.000 |  0.000 |  0.000 |    nan | torch.Size([1]) || model.47.bias

23-04-10 13:54:27.802 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 1
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 1
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 1
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 13:54:28.350 : Random seed: 7658
23-04-10 13:54:30.203 : Number of train images: 200, iters: 4
23-04-10 13:54:42.744 : 
Networks name: DnCNN
Params number: 557057
Net structure:
DnCNN(
  (model): Sequential(
    (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): ReLU(inplace=True)
    (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (3): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (6): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (12): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (15): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (18): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (21): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (24): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (27): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (30): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (33): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (36): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (39): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (42): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (45): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): Conv2d(64, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
)

23-04-10 13:54:42.872 : 
 |  mean  |  min   |  max   |  std   || shape               
 | -0.001 | -0.074 |  0.070 |  0.025 | torch.Size([64, 1, 3, 3]) || model.0.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.0.bias
 |  0.000 | -0.031 |  0.033 |  0.008 | torch.Size([64, 64, 3, 3]) || model.2.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.2.bias
 |  0.522 |  0.101 |  0.988 |  0.267 | torch.Size([64]) || model.3.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.3.running_var
 |  0.000 | -0.033 |  0.036 |  0.008 | torch.Size([64, 64, 3, 3]) || model.5.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.5.bias
 |  0.562 |  0.102 |  0.995 |  0.269 | torch.Size([64]) || model.6.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.6.running_var
 | -0.000 | -0.033 |  0.033 |  0.008 | torch.Size([64, 64, 3, 3]) || model.8.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.8.bias
 |  0.575 |  0.148 |  0.997 |  0.241 | torch.Size([64]) || model.9.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.9.running_var
 | -0.000 | -0.035 |  0.032 |  0.008 | torch.Size([64, 64, 3, 3]) || model.11.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.11.bias
 |  0.562 |  0.104 |  1.000 |  0.277 | torch.Size([64]) || model.12.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.12.running_var
 | -0.000 | -0.031 |  0.033 |  0.008 | torch.Size([64, 64, 3, 3]) || model.14.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.14.bias
 |  0.473 |  0.109 |  0.978 |  0.283 | torch.Size([64]) || model.15.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.15.running_var
 | -0.000 | -0.036 |  0.033 |  0.008 | torch.Size([64, 64, 3, 3]) || model.17.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.17.bias
 |  0.527 |  0.114 |  0.996 |  0.274 | torch.Size([64]) || model.18.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.18.running_var
 | -0.000 | -0.036 |  0.037 |  0.008 | torch.Size([64, 64, 3, 3]) || model.20.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.20.bias
 |  0.538 |  0.129 |  0.956 |  0.251 | torch.Size([64]) || model.21.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.21.running_var
 | -0.000 | -0.031 |  0.032 |  0.008 | torch.Size([64, 64, 3, 3]) || model.23.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.23.bias
 |  0.590 |  0.101 |  0.973 |  0.247 | torch.Size([64]) || model.24.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.24.running_var
 |  0.000 | -0.036 |  0.034 |  0.008 | torch.Size([64, 64, 3, 3]) || model.26.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.26.bias
 |  0.539 |  0.109 |  0.996 |  0.266 | torch.Size([64]) || model.27.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.27.running_var
 | -0.000 | -0.036 |  0.037 |  0.008 | torch.Size([64, 64, 3, 3]) || model.29.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.29.bias
 |  0.621 |  0.117 |  0.990 |  0.274 | torch.Size([64]) || model.30.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.30.running_var
 |  0.000 | -0.034 |  0.032 |  0.008 | torch.Size([64, 64, 3, 3]) || model.32.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.32.bias
 |  0.568 |  0.107 |  0.992 |  0.269 | torch.Size([64]) || model.33.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.33.running_var
 |  0.000 | -0.035 |  0.038 |  0.008 | torch.Size([64, 64, 3, 3]) || model.35.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.35.bias
 |  0.554 |  0.135 |  0.975 |  0.231 | torch.Size([64]) || model.36.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.36.running_var
 | -0.000 | -0.033 |  0.035 |  0.008 | torch.Size([64, 64, 3, 3]) || model.38.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.38.bias
 |  0.525 |  0.102 |  0.987 |  0.290 | torch.Size([64]) || model.39.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.39.running_var
 | -0.000 | -0.035 |  0.033 |  0.008 | torch.Size([64, 64, 3, 3]) || model.41.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.41.bias
 |  0.563 |  0.112 |  0.961 |  0.260 | torch.Size([64]) || model.42.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.42.running_var
 | -0.000 | -0.035 |  0.035 |  0.008 | torch.Size([64, 64, 3, 3]) || model.44.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.44.bias
 |  0.555 |  0.112 |  0.976 |  0.237 | torch.Size([64]) || model.45.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.45.running_var
 |  0.000 | -0.027 |  0.023 |  0.008 | torch.Size([1, 64, 3, 3]) || model.47.weight
 |  0.000 |  0.000 |  0.000 |    nan | torch.Size([1]) || model.47.bias

23-04-10 13:56:13.118 : <epoch: 66, iter:     200, lr:1.000e-04> G_loss: 2.991e-02 
23-04-10 14:02:36.689 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 1
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 1
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 1
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 14:02:36.689 : Random seed: 3537
23-04-10 14:02:36.696 : Number of train images: 200, iters: 4
23-04-10 14:02:37.808 : 
Networks name: DnCNN
Params number: 557057
Net structure:
DnCNN(
  (model): Sequential(
    (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): ReLU(inplace=True)
    (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (3): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (6): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (12): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (15): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (18): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (21): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (24): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (27): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (30): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (33): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (36): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (39): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (42): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (45): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): Conv2d(64, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
)

23-04-10 14:02:37.839 : 
 |  mean  |  min   |  max   |  std   || shape               
 | -0.001 | -0.081 |  0.073 |  0.025 | torch.Size([64, 1, 3, 3]) || model.0.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.0.bias
 |  0.000 | -0.033 |  0.032 |  0.008 | torch.Size([64, 64, 3, 3]) || model.2.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.2.bias
 |  0.545 |  0.111 |  0.992 |  0.261 | torch.Size([64]) || model.3.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.3.running_var
 |  0.000 | -0.034 |  0.033 |  0.008 | torch.Size([64, 64, 3, 3]) || model.5.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.5.bias
 |  0.546 |  0.114 |  0.984 |  0.263 | torch.Size([64]) || model.6.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.6.running_var
 | -0.000 | -0.031 |  0.036 |  0.008 | torch.Size([64, 64, 3, 3]) || model.8.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.8.bias
 |  0.563 |  0.111 |  0.991 |  0.273 | torch.Size([64]) || model.9.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.9.running_var
 |  0.000 | -0.041 |  0.032 |  0.008 | torch.Size([64, 64, 3, 3]) || model.11.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.11.bias
 |  0.531 |  0.109 |  0.994 |  0.267 | torch.Size([64]) || model.12.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.12.running_var
 | -0.000 | -0.034 |  0.031 |  0.008 | torch.Size([64, 64, 3, 3]) || model.14.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.14.bias
 |  0.524 |  0.115 |  0.978 |  0.249 | torch.Size([64]) || model.15.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.15.running_var
 |  0.000 | -0.033 |  0.033 |  0.008 | torch.Size([64, 64, 3, 3]) || model.17.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.17.bias
 |  0.600 |  0.110 |  0.991 |  0.231 | torch.Size([64]) || model.18.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.18.running_var
 |  0.000 | -0.035 |  0.036 |  0.008 | torch.Size([64, 64, 3, 3]) || model.20.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.20.bias
 |  0.573 |  0.101 |  0.996 |  0.255 | torch.Size([64]) || model.21.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.21.running_var
 | -0.000 | -0.035 |  0.032 |  0.008 | torch.Size([64, 64, 3, 3]) || model.23.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.23.bias
 |  0.531 |  0.106 |  0.999 |  0.249 | torch.Size([64]) || model.24.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.24.running_var
 | -0.000 | -0.036 |  0.034 |  0.008 | torch.Size([64, 64, 3, 3]) || model.26.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.26.bias
 |  0.579 |  0.140 |  0.999 |  0.241 | torch.Size([64]) || model.27.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.27.running_var
 | -0.000 | -0.033 |  0.036 |  0.008 | torch.Size([64, 64, 3, 3]) || model.29.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.29.bias
 |  0.571 |  0.111 |  0.999 |  0.262 | torch.Size([64]) || model.30.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.30.running_var
 | -0.000 | -0.035 |  0.032 |  0.008 | torch.Size([64, 64, 3, 3]) || model.32.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.32.bias
 |  0.528 |  0.120 |  0.956 |  0.266 | torch.Size([64]) || model.33.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.33.running_var
 |  0.000 | -0.035 |  0.035 |  0.008 | torch.Size([64, 64, 3, 3]) || model.35.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.35.bias
 |  0.600 |  0.111 |  0.964 |  0.251 | torch.Size([64]) || model.36.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.36.running_var
 | -0.000 | -0.043 |  0.037 |  0.008 | torch.Size([64, 64, 3, 3]) || model.38.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.38.bias
 |  0.585 |  0.110 |  0.978 |  0.275 | torch.Size([64]) || model.39.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.39.running_var
 |  0.000 | -0.032 |  0.035 |  0.008 | torch.Size([64, 64, 3, 3]) || model.41.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.41.bias
 |  0.532 |  0.103 |  1.000 |  0.271 | torch.Size([64]) || model.42.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.42.running_var
 |  0.000 | -0.031 |  0.035 |  0.008 | torch.Size([64, 64, 3, 3]) || model.44.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.44.bias
 |  0.582 |  0.151 |  0.999 |  0.247 | torch.Size([64]) || model.45.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.45.running_var
 | -0.000 | -0.027 |  0.026 |  0.008 | torch.Size([1, 64, 3, 3]) || model.47.weight
 |  0.000 |  0.000 |  0.000 |    nan | torch.Size([1]) || model.47.bias

23-04-10 14:03:44.241 : <epoch: 66, iter:     200, lr:1.000e-04> G_loss: 3.334e-02 
23-04-10 14:04:50.382 : <epoch:133, iter:     400, lr:1.000e-04> G_loss: 2.945e-02 
23-04-10 14:05:32.324 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 1
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 1
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 1
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 14:05:32.325 : Random seed: 6406
23-04-10 14:05:32.331 : Number of train images: 200, iters: 4
23-04-10 14:06:09.727 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 1
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 1
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 1
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 14:06:09.728 : Random seed: 6639
23-04-10 14:06:09.734 : Number of train images: 200, iters: 4
23-04-10 14:06:25.066 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 1
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 1
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 1
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 14:06:25.067 : Random seed: 3593
23-04-10 14:06:25.075 : Number of train images: 200, iters: 4
23-04-10 14:06:56.771 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 1
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 1
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 1
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 14:06:56.772 : Random seed: 6927
23-04-10 14:06:56.779 : Number of train images: 200, iters: 4
23-04-10 14:10:00.878 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 1
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 1
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 1
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 14:10:00.879 : Random seed: 8815
23-04-10 14:10:00.886 : Number of train images: 200, iters: 4
23-04-10 14:10:12.350 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 1
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 1
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 1
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 14:10:12.350 : Random seed: 6135
23-04-10 14:10:12.357 : Number of train images: 200, iters: 4
23-04-10 14:10:41.140 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 1
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 1
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 1
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 14:10:41.141 : Random seed: 6745
23-04-10 14:10:41.149 : Number of train images: 200, iters: 4
23-04-10 14:13:38.968 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 1
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 1
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 1
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 64
    out_nc: 64
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 14:13:38.968 : Random seed: 6262
23-04-10 14:13:38.975 : Number of train images: 200, iters: 4
23-04-10 14:13:39.368 : 
Networks name: DnCNN
Params number: 4469248
Net structure:
DnCNN(
  (model): Sequential(
    (0): PHConv2d(in_features=64, out_features=64, bias=True)
    (1): ReLU(inplace=True)
    (2): PHConv2d(in_features=64, out_features=64, bias=True)
    (3): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): PHConv2d(in_features=64, out_features=64, bias=True)
    (6): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): PHConv2d(in_features=64, out_features=64, bias=True)
    (9): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): PHConv2d(in_features=64, out_features=64, bias=True)
    (12): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): PHConv2d(in_features=64, out_features=64, bias=True)
    (15): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): PHConv2d(in_features=64, out_features=64, bias=True)
    (18): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): PHConv2d(in_features=64, out_features=64, bias=True)
    (21): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): PHConv2d(in_features=64, out_features=64, bias=True)
    (24): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): PHConv2d(in_features=64, out_features=64, bias=True)
    (27): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): PHConv2d(in_features=64, out_features=64, bias=True)
    (30): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): PHConv2d(in_features=64, out_features=64, bias=True)
    (33): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): PHConv2d(in_features=64, out_features=64, bias=True)
    (36): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): PHConv2d(in_features=64, out_features=64, bias=True)
    (39): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): PHConv2d(in_features=64, out_features=64, bias=True)
    (42): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): PHConv2d(in_features=64, out_features=64, bias=True)
    (45): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): PHConv2d(in_features=64, out_features=64, bias=True)
  )
)

23-04-10 14:13:39.407 : 
 |  mean  |  min   |  max   |  std   || shape               
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.0.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.0.A
 | -0.003 | -0.101 |  0.101 |  0.058 | torch.Size([64, 1, 1, 3, 3]) || model.0.F
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.2.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.2.A
 |  0.001 | -0.100 |  0.101 |  0.058 | torch.Size([64, 1, 1, 3, 3]) || model.2.F
 |  0.543 |  0.115 |  0.997 |  0.248 | torch.Size([64]) || model.3.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.3.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.5.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.5.A
 | -0.002 | -0.101 |  0.101 |  0.059 | torch.Size([64, 1, 1, 3, 3]) || model.5.F
 |  0.559 |  0.102 |  0.976 |  0.259 | torch.Size([64]) || model.6.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.6.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.8.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.8.A
 |  0.002 | -0.101 |  0.101 |  0.057 | torch.Size([64, 1, 1, 3, 3]) || model.8.F
 |  0.541 |  0.108 |  0.972 |  0.255 | torch.Size([64]) || model.9.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.9.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.11.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.11.A
 | -0.001 | -0.101 |  0.101 |  0.059 | torch.Size([64, 1, 1, 3, 3]) || model.11.F
 |  0.524 |  0.119 |  0.991 |  0.268 | torch.Size([64]) || model.12.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.12.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.14.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.14.A
 | -0.000 | -0.100 |  0.101 |  0.058 | torch.Size([64, 1, 1, 3, 3]) || model.14.F
 |  0.586 |  0.109 |  0.986 |  0.260 | torch.Size([64]) || model.15.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.15.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.17.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.17.A
 |  0.006 | -0.100 |  0.101 |  0.059 | torch.Size([64, 1, 1, 3, 3]) || model.17.F
 |  0.550 |  0.111 |  0.989 |  0.248 | torch.Size([64]) || model.18.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.18.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.20.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.20.A
 |  0.002 | -0.100 |  0.101 |  0.058 | torch.Size([64, 1, 1, 3, 3]) || model.20.F
 |  0.508 |  0.129 |  0.985 |  0.256 | torch.Size([64]) || model.21.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.21.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.23.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.23.A
 |  0.001 | -0.101 |  0.101 |  0.058 | torch.Size([64, 1, 1, 3, 3]) || model.23.F
 |  0.575 |  0.100 |  0.997 |  0.277 | torch.Size([64]) || model.24.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.24.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.26.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.26.A
 |  0.000 | -0.101 |  0.101 |  0.058 | torch.Size([64, 1, 1, 3, 3]) || model.26.F
 |  0.592 |  0.101 |  0.990 |  0.258 | torch.Size([64]) || model.27.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.27.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.29.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.29.A
 |  0.002 | -0.100 |  0.101 |  0.058 | torch.Size([64, 1, 1, 3, 3]) || model.29.F
 |  0.590 |  0.102 |  1.000 |  0.279 | torch.Size([64]) || model.30.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.30.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.32.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.32.A
 | -0.001 | -0.101 |  0.101 |  0.058 | torch.Size([64, 1, 1, 3, 3]) || model.32.F
 |  0.567 |  0.107 |  0.977 |  0.265 | torch.Size([64]) || model.33.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.33.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.35.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.35.A
 | -0.001 | -0.101 |  0.101 |  0.057 | torch.Size([64, 1, 1, 3, 3]) || model.35.F
 |  0.580 |  0.121 |  0.991 |  0.242 | torch.Size([64]) || model.36.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.36.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.38.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.38.A
 |  0.007 | -0.101 |  0.101 |  0.057 | torch.Size([64, 1, 1, 3, 3]) || model.38.F
 |  0.543 |  0.133 |  0.994 |  0.285 | torch.Size([64]) || model.39.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.39.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.41.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.41.A
 |  0.001 | -0.101 |  0.100 |  0.057 | torch.Size([64, 1, 1, 3, 3]) || model.41.F
 |  0.526 |  0.107 |  0.996 |  0.291 | torch.Size([64]) || model.42.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.42.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.44.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.44.A
 |  0.002 | -0.101 |  0.101 |  0.060 | torch.Size([64, 1, 1, 3, 3]) || model.44.F
 |  0.568 |  0.106 |  0.997 |  0.278 | torch.Size([64]) || model.45.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.45.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.47.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.47.A
 |  0.002 | -0.101 |  0.101 |  0.060 | torch.Size([64, 1, 1, 3, 3]) || model.47.F

23-04-10 14:13:51.692 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 1
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 1
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 1
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 14:13:51.693 : Random seed: 9561
23-04-10 14:13:51.700 : Number of train images: 200, iters: 4
23-04-10 14:14:29.374 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 1
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 1
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 1
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 14:14:29.375 : Random seed: 1186
23-04-10 14:14:29.381 : Number of train images: 200, iters: 4
23-04-10 14:14:29.772 : 
Networks name: DnCNN
Params number: 4469248
Net structure:
DnCNN(
  (model): Sequential(
    (0): PHConv2d(in_features=64, out_features=64, bias=True)
    (1): ReLU(inplace=True)
    (2): PHConv2d(in_features=64, out_features=64, bias=True)
    (3): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): PHConv2d(in_features=64, out_features=64, bias=True)
    (6): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): PHConv2d(in_features=64, out_features=64, bias=True)
    (9): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): PHConv2d(in_features=64, out_features=64, bias=True)
    (12): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): PHConv2d(in_features=64, out_features=64, bias=True)
    (15): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): PHConv2d(in_features=64, out_features=64, bias=True)
    (18): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): PHConv2d(in_features=64, out_features=64, bias=True)
    (21): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): PHConv2d(in_features=64, out_features=64, bias=True)
    (24): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): PHConv2d(in_features=64, out_features=64, bias=True)
    (27): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): PHConv2d(in_features=64, out_features=64, bias=True)
    (30): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): PHConv2d(in_features=64, out_features=64, bias=True)
    (33): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): PHConv2d(in_features=64, out_features=64, bias=True)
    (36): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): PHConv2d(in_features=64, out_features=64, bias=True)
    (39): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): PHConv2d(in_features=64, out_features=64, bias=True)
    (42): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): PHConv2d(in_features=64, out_features=64, bias=True)
    (45): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): PHConv2d(in_features=64, out_features=64, bias=True)
  )
)

23-04-10 14:14:29.805 : 
 |  mean  |  min   |  max   |  std   || shape               
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.0.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.0.A
 |  0.001 | -0.101 |  0.101 |  0.059 | torch.Size([64, 1, 1, 3, 3]) || model.0.F
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.2.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.2.A
 | -0.001 | -0.101 |  0.101 |  0.058 | torch.Size([64, 1, 1, 3, 3]) || model.2.F
 |  0.522 |  0.105 |  1.000 |  0.278 | torch.Size([64]) || model.3.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.3.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.5.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.5.A
 | -0.001 | -0.101 |  0.101 |  0.058 | torch.Size([64, 1, 1, 3, 3]) || model.5.F
 |  0.504 |  0.102 |  0.981 |  0.270 | torch.Size([64]) || model.6.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.6.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.8.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.8.A
 | -0.002 | -0.101 |  0.101 |  0.058 | torch.Size([64, 1, 1, 3, 3]) || model.8.F
 |  0.528 |  0.112 |  0.961 |  0.264 | torch.Size([64]) || model.9.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.9.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.11.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.11.A
 | -0.002 | -0.101 |  0.101 |  0.058 | torch.Size([64, 1, 1, 3, 3]) || model.11.F
 |  0.540 |  0.105 |  0.998 |  0.273 | torch.Size([64]) || model.12.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.12.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.14.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.14.A
 | -0.005 | -0.101 |  0.100 |  0.058 | torch.Size([64, 1, 1, 3, 3]) || model.14.F
 |  0.525 |  0.125 |  1.000 |  0.268 | torch.Size([64]) || model.15.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.15.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.17.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.17.A
 | -0.001 | -0.101 |  0.101 |  0.060 | torch.Size([64, 1, 1, 3, 3]) || model.17.F
 |  0.539 |  0.124 |  0.930 |  0.249 | torch.Size([64]) || model.18.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.18.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.20.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.20.A
 | -0.000 | -0.101 |  0.101 |  0.059 | torch.Size([64, 1, 1, 3, 3]) || model.20.F
 |  0.540 |  0.100 |  0.985 |  0.299 | torch.Size([64]) || model.21.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.21.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.23.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.23.A
 | -0.001 | -0.101 |  0.101 |  0.061 | torch.Size([64, 1, 1, 3, 3]) || model.23.F
 |  0.522 |  0.105 |  0.963 |  0.265 | torch.Size([64]) || model.24.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.24.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.26.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.26.A
 |  0.002 | -0.101 |  0.101 |  0.058 | torch.Size([64, 1, 1, 3, 3]) || model.26.F
 |  0.514 |  0.140 |  1.000 |  0.234 | torch.Size([64]) || model.27.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.27.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.29.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.29.A
 |  0.002 | -0.101 |  0.100 |  0.057 | torch.Size([64, 1, 1, 3, 3]) || model.29.F
 |  0.568 |  0.110 |  0.985 |  0.256 | torch.Size([64]) || model.30.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.30.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.32.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.32.A
 |  0.002 | -0.101 |  0.101 |  0.058 | torch.Size([64, 1, 1, 3, 3]) || model.32.F
 |  0.540 |  0.104 |  0.974 |  0.248 | torch.Size([64]) || model.33.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.33.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.35.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.35.A
 | -0.000 | -0.101 |  0.101 |  0.059 | torch.Size([64, 1, 1, 3, 3]) || model.35.F
 |  0.504 |  0.100 |  0.967 |  0.244 | torch.Size([64]) || model.36.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.36.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.38.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.38.A
 | -0.003 | -0.101 |  0.100 |  0.058 | torch.Size([64, 1, 1, 3, 3]) || model.38.F
 |  0.531 |  0.100 |  0.986 |  0.272 | torch.Size([64]) || model.39.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.39.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.41.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.41.A
 | -0.001 | -0.101 |  0.101 |  0.058 | torch.Size([64, 1, 1, 3, 3]) || model.41.F
 |  0.548 |  0.114 |  0.968 |  0.243 | torch.Size([64]) || model.42.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.42.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.44.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.44.A
 |  0.004 | -0.101 |  0.101 |  0.058 | torch.Size([64, 1, 1, 3, 3]) || model.44.F
 |  0.505 |  0.131 |  0.971 |  0.249 | torch.Size([64]) || model.45.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.45.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.47.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.47.A
 |  0.000 | -0.101 |  0.101 |  0.059 | torch.Size([64, 1, 1, 3, 3]) || model.47.F

23-04-10 14:14:59.968 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 14:14:59.969 : Random seed: 7662
23-04-10 14:14:59.976 : Number of train images: 200, iters: 4
23-04-10 14:15:00.363 : 
Networks name: DnCNN
Params number: 4469248
Net structure:
DnCNN(
  (model): Sequential(
    (0): PHConv2d(in_features=64, out_features=64, bias=True)
    (1): ReLU(inplace=True)
    (2): PHConv2d(in_features=64, out_features=64, bias=True)
    (3): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): PHConv2d(in_features=64, out_features=64, bias=True)
    (6): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): PHConv2d(in_features=64, out_features=64, bias=True)
    (9): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): PHConv2d(in_features=64, out_features=64, bias=True)
    (12): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): PHConv2d(in_features=64, out_features=64, bias=True)
    (15): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): PHConv2d(in_features=64, out_features=64, bias=True)
    (18): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): PHConv2d(in_features=64, out_features=64, bias=True)
    (21): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): PHConv2d(in_features=64, out_features=64, bias=True)
    (24): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): PHConv2d(in_features=64, out_features=64, bias=True)
    (27): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): PHConv2d(in_features=64, out_features=64, bias=True)
    (30): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): PHConv2d(in_features=64, out_features=64, bias=True)
    (33): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): PHConv2d(in_features=64, out_features=64, bias=True)
    (36): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): PHConv2d(in_features=64, out_features=64, bias=True)
    (39): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): PHConv2d(in_features=64, out_features=64, bias=True)
    (42): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): PHConv2d(in_features=64, out_features=64, bias=True)
    (45): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): PHConv2d(in_features=64, out_features=64, bias=True)
  )
)

23-04-10 14:15:00.399 : 
 |  mean  |  min   |  max   |  std   || shape               
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.0.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.0.A
 | -0.001 | -0.101 |  0.101 |  0.060 | torch.Size([64, 1, 1, 3, 3]) || model.0.F
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.2.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.2.A
 |  0.002 | -0.101 |  0.101 |  0.058 | torch.Size([64, 1, 1, 3, 3]) || model.2.F
 |  0.609 |  0.101 |  0.964 |  0.249 | torch.Size([64]) || model.3.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.3.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.5.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.5.A
 |  0.002 | -0.101 |  0.101 |  0.058 | torch.Size([64, 1, 1, 3, 3]) || model.5.F
 |  0.553 |  0.109 |  0.960 |  0.238 | torch.Size([64]) || model.6.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.6.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.8.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.8.A
 |  0.001 | -0.101 |  0.101 |  0.057 | torch.Size([64, 1, 1, 3, 3]) || model.8.F
 |  0.541 |  0.106 |  0.988 |  0.251 | torch.Size([64]) || model.9.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.9.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.11.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.11.A
 |  0.001 | -0.101 |  0.101 |  0.059 | torch.Size([64, 1, 1, 3, 3]) || model.11.F
 |  0.542 |  0.121 |  0.998 |  0.261 | torch.Size([64]) || model.12.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.12.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.14.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.14.A
 | -0.006 | -0.101 |  0.100 |  0.060 | torch.Size([64, 1, 1, 3, 3]) || model.14.F
 |  0.548 |  0.109 |  0.999 |  0.284 | torch.Size([64]) || model.15.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.15.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.17.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.17.A
 | -0.001 | -0.101 |  0.101 |  0.059 | torch.Size([64, 1, 1, 3, 3]) || model.17.F
 |  0.546 |  0.104 |  0.994 |  0.271 | torch.Size([64]) || model.18.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.18.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.20.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.20.A
 |  0.004 | -0.101 |  0.101 |  0.059 | torch.Size([64, 1, 1, 3, 3]) || model.20.F
 |  0.611 |  0.130 |  0.984 |  0.251 | torch.Size([64]) || model.21.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.21.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.23.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.23.A
 |  0.002 | -0.101 |  0.101 |  0.058 | torch.Size([64, 1, 1, 3, 3]) || model.23.F
 |  0.557 |  0.113 |  0.973 |  0.254 | torch.Size([64]) || model.24.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.24.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.26.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.26.A
 | -0.001 | -0.101 |  0.101 |  0.058 | torch.Size([64, 1, 1, 3, 3]) || model.26.F
 |  0.544 |  0.104 |  0.973 |  0.270 | torch.Size([64]) || model.27.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.27.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.29.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.29.A
 | -0.003 | -0.101 |  0.101 |  0.059 | torch.Size([64, 1, 1, 3, 3]) || model.29.F
 |  0.575 |  0.116 |  0.985 |  0.235 | torch.Size([64]) || model.30.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.30.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.32.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.32.A
 |  0.003 | -0.101 |  0.101 |  0.058 | torch.Size([64, 1, 1, 3, 3]) || model.32.F
 |  0.540 |  0.106 |  0.957 |  0.243 | torch.Size([64]) || model.33.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.33.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.35.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.35.A
 |  0.002 | -0.101 |  0.100 |  0.060 | torch.Size([64, 1, 1, 3, 3]) || model.35.F
 |  0.582 |  0.156 |  0.998 |  0.251 | torch.Size([64]) || model.36.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.36.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.38.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.38.A
 | -0.001 | -0.101 |  0.101 |  0.058 | torch.Size([64, 1, 1, 3, 3]) || model.38.F
 |  0.499 |  0.109 |  0.983 |  0.249 | torch.Size([64]) || model.39.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.39.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.41.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.41.A
 |  0.001 | -0.101 |  0.101 |  0.059 | torch.Size([64, 1, 1, 3, 3]) || model.41.F
 |  0.514 |  0.101 |  0.997 |  0.248 | torch.Size([64]) || model.42.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.42.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.44.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.44.A
 |  0.000 | -0.101 |  0.101 |  0.059 | torch.Size([64, 1, 1, 3, 3]) || model.44.F
 |  0.497 |  0.108 |  0.986 |  0.246 | torch.Size([64]) || model.45.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.45.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.47.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.47.A
 | -0.000 | -0.101 |  0.100 |  0.059 | torch.Size([64, 1, 1, 3, 3]) || model.47.F

23-04-10 14:15:31.877 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 14:15:31.877 : Random seed: 2336
23-04-10 14:15:31.884 : Number of train images: 200, iters: 4
23-04-10 14:15:32.238 : 
Networks name: DnCNN
Params number: 205886
Net structure:
DnCNN(
  (model): Sequential(
    (0): PHConv2d(in_features=64, out_features=64, bias=True)
    (1): ReLU(inplace=True)
    (2): PHConv2d(in_features=64, out_features=64, bias=True)
    (3): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): PHConv2d(in_features=64, out_features=64, bias=True)
    (6): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): PHConv2d(in_features=64, out_features=64, bias=True)
    (9): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): PHConv2d(in_features=64, out_features=64, bias=True)
    (12): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): PHConv2d(in_features=64, out_features=64, bias=True)
    (15): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): PHConv2d(in_features=64, out_features=64, bias=True)
    (18): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): PHConv2d(in_features=64, out_features=64, bias=True)
    (21): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): PHConv2d(in_features=64, out_features=64, bias=True)
    (24): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): PHConv2d(in_features=64, out_features=64, bias=True)
    (27): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): PHConv2d(in_features=64, out_features=64, bias=True)
    (30): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): PHConv2d(in_features=64, out_features=64, bias=True)
    (33): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): PHConv2d(in_features=64, out_features=64, bias=True)
    (36): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): PHConv2d(in_features=64, out_features=64, bias=True)
    (39): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): PHConv2d(in_features=64, out_features=64, bias=True)
    (42): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): PHConv2d(in_features=64, out_features=64, bias=True)
    (45): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): PHConv2d(in_features=64, out_features=64, bias=True)
  )
)

23-04-10 14:15:32.273 : 
 |  mean  |  min   |  max   |  std   || shape               
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.0.bias
 | -0.082 | -0.556 |  0.544 |  0.317 | torch.Size([3, 3, 3]) || model.0.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.0.F
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.2.bias
 | -0.106 | -0.523 |  0.444 |  0.317 | torch.Size([3, 3, 3]) || model.2.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.2.F
 |  0.561 |  0.104 |  0.989 |  0.261 | torch.Size([64]) || model.3.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.3.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.5.bias
 | -0.109 | -0.575 |  0.529 |  0.284 | torch.Size([3, 3, 3]) || model.5.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.5.F
 |  0.628 |  0.144 |  0.984 |  0.275 | torch.Size([64]) || model.6.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.6.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.8.bias
 |  0.081 | -0.521 |  0.498 |  0.292 | torch.Size([3, 3, 3]) || model.8.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.8.F
 |  0.532 |  0.107 |  0.997 |  0.265 | torch.Size([64]) || model.9.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.9.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.11.bias
 |  0.069 | -0.524 |  0.550 |  0.352 | torch.Size([3, 3, 3]) || model.11.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.11.F
 |  0.539 |  0.107 |  0.999 |  0.271 | torch.Size([64]) || model.12.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.12.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.14.bias
 | -0.050 | -0.552 |  0.565 |  0.343 | torch.Size([3, 3, 3]) || model.14.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.14.F
 |  0.579 |  0.104 |  1.000 |  0.274 | torch.Size([64]) || model.15.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.15.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.17.bias
 | -0.089 | -0.526 |  0.459 |  0.312 | torch.Size([3, 3, 3]) || model.17.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.17.F
 |  0.540 |  0.107 |  0.993 |  0.249 | torch.Size([64]) || model.18.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.18.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.20.bias
 | -0.048 | -0.520 |  0.542 |  0.321 | torch.Size([3, 3, 3]) || model.20.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.20.F
 |  0.547 |  0.127 |  0.974 |  0.252 | torch.Size([64]) || model.21.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.21.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.23.bias
 |  0.012 | -0.558 |  0.551 |  0.366 | torch.Size([3, 3, 3]) || model.23.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.23.F
 |  0.524 |  0.130 |  0.993 |  0.256 | torch.Size([64]) || model.24.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.24.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.26.bias
 |  0.093 | -0.520 |  0.545 |  0.316 | torch.Size([3, 3, 3]) || model.26.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.26.F
 |  0.596 |  0.126 |  0.990 |  0.250 | torch.Size([64]) || model.27.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.27.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.29.bias
 |  0.049 | -0.574 |  0.543 |  0.348 | torch.Size([3, 3, 3]) || model.29.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.29.F
 |  0.534 |  0.106 |  0.994 |  0.260 | torch.Size([64]) || model.30.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.30.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.32.bias
 |  0.042 | -0.502 |  0.575 |  0.318 | torch.Size([3, 3, 3]) || model.32.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.32.F
 |  0.570 |  0.112 |  0.993 |  0.250 | torch.Size([64]) || model.33.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.33.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.35.bias
 |  0.086 | -0.468 |  0.568 |  0.318 | torch.Size([3, 3, 3]) || model.35.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.35.F
 |  0.576 |  0.101 |  0.990 |  0.278 | torch.Size([64]) || model.36.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.36.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.38.bias
 | -0.124 | -0.574 |  0.555 |  0.326 | torch.Size([3, 3, 3]) || model.38.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.38.F
 |  0.528 |  0.104 |  0.976 |  0.270 | torch.Size([64]) || model.39.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.39.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.41.bias
 | -0.136 | -0.568 |  0.509 |  0.343 | torch.Size([3, 3, 3]) || model.41.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.41.F
 |  0.593 |  0.120 |  0.997 |  0.265 | torch.Size([64]) || model.42.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.42.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.44.bias
 | -0.106 | -0.547 |  0.573 |  0.297 | torch.Size([3, 3, 3]) || model.44.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.44.F
 |  0.555 |  0.124 |  0.989 |  0.243 | torch.Size([64]) || model.45.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.45.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.47.bias
 | -0.026 | -0.543 |  0.416 |  0.302 | torch.Size([3, 3, 3]) || model.47.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.47.F

23-04-10 14:18:31.963 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 14:18:31.964 : Random seed: 7746
23-04-10 14:18:31.971 : Number of train images: 200, iters: 4
23-04-10 14:18:32.353 : 
Networks name: DnCNN
Params number: 4458419
Net structure:
DnCNN(
  (model): Sequential(
    (0): PHConv2d(in_features=64, out_features=3, bias=True)
    (1): ReLU(inplace=True)
    (2): PHConv2d(in_features=64, out_features=3, bias=True)
    (3): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): PHConv2d(in_features=64, out_features=3, bias=True)
    (6): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): PHConv2d(in_features=64, out_features=3, bias=True)
    (9): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): PHConv2d(in_features=64, out_features=3, bias=True)
    (12): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): PHConv2d(in_features=64, out_features=3, bias=True)
    (15): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): PHConv2d(in_features=64, out_features=3, bias=True)
    (18): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): PHConv2d(in_features=64, out_features=3, bias=True)
    (21): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): PHConv2d(in_features=64, out_features=3, bias=True)
    (24): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): PHConv2d(in_features=64, out_features=3, bias=True)
    (27): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): PHConv2d(in_features=64, out_features=3, bias=True)
    (30): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): PHConv2d(in_features=64, out_features=3, bias=True)
    (33): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): PHConv2d(in_features=64, out_features=3, bias=True)
    (36): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): PHConv2d(in_features=64, out_features=3, bias=True)
    (39): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): PHConv2d(in_features=64, out_features=3, bias=True)
    (42): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): PHConv2d(in_features=64, out_features=3, bias=True)
    (45): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): PHConv2d(in_features=64, out_features=3, bias=True)
  )
)

23-04-10 14:18:59.035 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 14:18:59.035 : Random seed: 9499
23-04-10 14:18:59.042 : Number of train images: 200, iters: 4
23-04-10 14:18:59.424 : 
Networks name: DnCNN
Params number: 4469248
Net structure:
DnCNN(
  (model): Sequential(
    (0): PHConv2d(in_features=64, out_features=64, bias=True)
    (1): ReLU(inplace=True)
    (2): PHConv2d(in_features=64, out_features=64, bias=True)
    (3): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): PHConv2d(in_features=64, out_features=64, bias=True)
    (6): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): PHConv2d(in_features=64, out_features=64, bias=True)
    (9): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): PHConv2d(in_features=64, out_features=64, bias=True)
    (12): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): PHConv2d(in_features=64, out_features=64, bias=True)
    (15): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): PHConv2d(in_features=64, out_features=64, bias=True)
    (18): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): PHConv2d(in_features=64, out_features=64, bias=True)
    (21): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): PHConv2d(in_features=64, out_features=64, bias=True)
    (24): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): PHConv2d(in_features=64, out_features=64, bias=True)
    (27): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): PHConv2d(in_features=64, out_features=64, bias=True)
    (30): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): PHConv2d(in_features=64, out_features=64, bias=True)
    (33): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): PHConv2d(in_features=64, out_features=64, bias=True)
    (36): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): PHConv2d(in_features=64, out_features=64, bias=True)
    (39): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): PHConv2d(in_features=64, out_features=64, bias=True)
    (42): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): PHConv2d(in_features=64, out_features=64, bias=True)
    (45): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): PHConv2d(in_features=64, out_features=64, bias=True)
  )
)

23-04-10 14:18:59.460 : 
 |  mean  |  min   |  max   |  std   || shape               
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.0.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.0.A
 | -0.002 | -0.101 |  0.101 |  0.058 | torch.Size([64, 1, 1, 3, 3]) || model.0.F
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.2.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.2.A
 |  0.002 | -0.101 |  0.101 |  0.059 | torch.Size([64, 1, 1, 3, 3]) || model.2.F
 |  0.556 |  0.149 |  0.996 |  0.239 | torch.Size([64]) || model.3.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.3.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.5.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.5.A
 |  0.006 | -0.100 |  0.101 |  0.059 | torch.Size([64, 1, 1, 3, 3]) || model.5.F
 |  0.506 |  0.106 |  0.967 |  0.253 | torch.Size([64]) || model.6.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.6.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.8.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.8.A
 | -0.004 | -0.101 |  0.101 |  0.057 | torch.Size([64, 1, 1, 3, 3]) || model.8.F
 |  0.627 |  0.138 |  0.997 |  0.246 | torch.Size([64]) || model.9.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.9.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.11.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.11.A
 |  0.002 | -0.101 |  0.101 |  0.060 | torch.Size([64, 1, 1, 3, 3]) || model.11.F
 |  0.537 |  0.106 |  0.972 |  0.269 | torch.Size([64]) || model.12.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.12.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.14.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.14.A
 | -0.000 | -0.101 |  0.101 |  0.056 | torch.Size([64, 1, 1, 3, 3]) || model.14.F
 |  0.537 |  0.120 |  1.000 |  0.281 | torch.Size([64]) || model.15.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.15.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.17.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.17.A
 | -0.005 | -0.101 |  0.101 |  0.058 | torch.Size([64, 1, 1, 3, 3]) || model.17.F
 |  0.652 |  0.116 |  0.997 |  0.242 | torch.Size([64]) || model.18.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.18.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.20.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.20.A
 |  0.002 | -0.101 |  0.101 |  0.059 | torch.Size([64, 1, 1, 3, 3]) || model.20.F
 |  0.550 |  0.106 |  0.981 |  0.245 | torch.Size([64]) || model.21.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.21.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.23.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.23.A
 |  0.003 | -0.101 |  0.101 |  0.059 | torch.Size([64, 1, 1, 3, 3]) || model.23.F
 |  0.582 |  0.105 |  0.994 |  0.226 | torch.Size([64]) || model.24.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.24.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.26.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.26.A
 | -0.003 | -0.101 |  0.101 |  0.058 | torch.Size([64, 1, 1, 3, 3]) || model.26.F
 |  0.531 |  0.124 |  0.964 |  0.265 | torch.Size([64]) || model.27.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.27.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.29.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.29.A
 | -0.001 | -0.101 |  0.101 |  0.060 | torch.Size([64, 1, 1, 3, 3]) || model.29.F
 |  0.526 |  0.104 |  1.000 |  0.243 | torch.Size([64]) || model.30.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.30.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.32.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.32.A
 |  0.004 | -0.101 |  0.101 |  0.059 | torch.Size([64, 1, 1, 3, 3]) || model.32.F
 |  0.535 |  0.106 |  0.993 |  0.255 | torch.Size([64]) || model.33.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.33.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.35.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.35.A
 | -0.002 | -0.101 |  0.101 |  0.058 | torch.Size([64, 1, 1, 3, 3]) || model.35.F
 |  0.503 |  0.129 |  0.984 |  0.264 | torch.Size([64]) || model.36.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.36.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.38.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.38.A
 | -0.003 | -0.101 |  0.101 |  0.059 | torch.Size([64, 1, 1, 3, 3]) || model.38.F
 |  0.508 |  0.101 |  1.000 |  0.270 | torch.Size([64]) || model.39.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.39.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.41.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.41.A
 |  0.005 | -0.101 |  0.101 |  0.060 | torch.Size([64, 1, 1, 3, 3]) || model.41.F
 |  0.568 |  0.104 |  0.974 |  0.271 | torch.Size([64]) || model.42.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.42.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.44.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.44.A
 | -0.004 | -0.101 |  0.101 |  0.058 | torch.Size([64, 1, 1, 3, 3]) || model.44.F
 |  0.608 |  0.113 |  0.991 |  0.255 | torch.Size([64]) || model.45.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.45.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.47.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.47.A
 |  0.003 | -0.101 |  0.101 |  0.057 | torch.Size([64, 1, 1, 3, 3]) || model.47.F

23-04-10 14:20:04.412 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 14:20:04.412 : Random seed: 9165
23-04-10 14:20:04.419 : Number of train images: 200, iters: 4
23-04-10 14:22:01.793 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 14:22:01.793 : Random seed: 9132
23-04-10 14:22:01.800 : Number of train images: 200, iters: 4
23-04-10 16:20:11.837 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 16:20:12.586 : Random seed: 3132
23-04-10 16:20:14.284 : Number of train images: 200, iters: 4
23-04-10 16:20:21.293 : 
Networks name: DnCNN
Params number: 4469248
Net structure:
DnCNN(
  (model): Sequential(
    (0): PHConv2d(in_features=64, out_features=64, bias=True)
    (1): ReLU(inplace=True)
    (2): PHConv2d(in_features=64, out_features=64, bias=True)
    (3): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): PHConv2d(in_features=64, out_features=64, bias=True)
    (6): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): PHConv2d(in_features=64, out_features=64, bias=True)
    (9): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): PHConv2d(in_features=64, out_features=64, bias=True)
    (12): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): PHConv2d(in_features=64, out_features=64, bias=True)
    (15): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): PHConv2d(in_features=64, out_features=64, bias=True)
    (18): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): PHConv2d(in_features=64, out_features=64, bias=True)
    (21): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): PHConv2d(in_features=64, out_features=64, bias=True)
    (24): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): PHConv2d(in_features=64, out_features=64, bias=True)
    (27): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): PHConv2d(in_features=64, out_features=64, bias=True)
    (30): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): PHConv2d(in_features=64, out_features=64, bias=True)
    (33): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): PHConv2d(in_features=64, out_features=64, bias=True)
    (36): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): PHConv2d(in_features=64, out_features=64, bias=True)
    (39): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): PHConv2d(in_features=64, out_features=64, bias=True)
    (42): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): PHConv2d(in_features=64, out_features=64, bias=True)
    (45): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): PHConv2d(in_features=64, out_features=64, bias=True)
  )
)

23-04-10 16:20:21.410 : 
 |  mean  |  min   |  max   |  std   || shape               
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.0.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.0.A
 |  0.000 | -0.101 |  0.101 |  0.058 | torch.Size([64, 1, 1, 3, 3]) || model.0.F
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.2.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.2.A
 | -0.004 | -0.101 |  0.101 |  0.058 | torch.Size([64, 1, 1, 3, 3]) || model.2.F
 |  0.542 |  0.137 |  0.968 |  0.234 | torch.Size([64]) || model.3.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.3.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.5.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.5.A
 | -0.004 | -0.101 |  0.101 |  0.059 | torch.Size([64, 1, 1, 3, 3]) || model.5.F
 |  0.517 |  0.108 |  0.983 |  0.282 | torch.Size([64]) || model.6.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.6.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.8.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.8.A
 | -0.002 | -0.101 |  0.101 |  0.059 | torch.Size([64, 1, 1, 3, 3]) || model.8.F
 |  0.562 |  0.103 |  0.972 |  0.248 | torch.Size([64]) || model.9.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.9.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.11.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.11.A
 | -0.004 | -0.101 |  0.101 |  0.060 | torch.Size([64, 1, 1, 3, 3]) || model.11.F
 |  0.542 |  0.114 |  0.972 |  0.247 | torch.Size([64]) || model.12.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.12.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.14.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.14.A
 |  0.005 | -0.101 |  0.101 |  0.060 | torch.Size([64, 1, 1, 3, 3]) || model.14.F
 |  0.597 |  0.105 |  0.988 |  0.250 | torch.Size([64]) || model.15.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.15.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.17.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.17.A
 | -0.003 | -0.101 |  0.101 |  0.060 | torch.Size([64, 1, 1, 3, 3]) || model.17.F
 |  0.542 |  0.115 |  0.997 |  0.236 | torch.Size([64]) || model.18.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.18.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.20.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.20.A
 | -0.000 | -0.101 |  0.101 |  0.056 | torch.Size([64, 1, 1, 3, 3]) || model.20.F
 |  0.556 |  0.113 |  0.983 |  0.287 | torch.Size([64]) || model.21.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.21.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.23.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.23.A
 | -0.003 | -0.101 |  0.101 |  0.056 | torch.Size([64, 1, 1, 3, 3]) || model.23.F
 |  0.545 |  0.113 |  0.998 |  0.256 | torch.Size([64]) || model.24.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.24.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.26.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.26.A
 |  0.003 | -0.100 |  0.100 |  0.056 | torch.Size([64, 1, 1, 3, 3]) || model.26.F
 |  0.534 |  0.103 |  0.954 |  0.265 | torch.Size([64]) || model.27.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.27.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.29.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.29.A
 | -0.001 | -0.101 |  0.101 |  0.059 | torch.Size([64, 1, 1, 3, 3]) || model.29.F
 |  0.523 |  0.138 |  0.981 |  0.257 | torch.Size([64]) || model.30.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.30.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.32.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.32.A
 | -0.001 | -0.101 |  0.101 |  0.058 | torch.Size([64, 1, 1, 3, 3]) || model.32.F
 |  0.523 |  0.103 |  0.998 |  0.271 | torch.Size([64]) || model.33.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.33.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.35.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.35.A
 |  0.001 | -0.101 |  0.100 |  0.058 | torch.Size([64, 1, 1, 3, 3]) || model.35.F
 |  0.536 |  0.103 |  0.992 |  0.234 | torch.Size([64]) || model.36.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.36.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.38.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.38.A
 | -0.002 | -0.101 |  0.101 |  0.057 | torch.Size([64, 1, 1, 3, 3]) || model.38.F
 |  0.560 |  0.108 |  0.995 |  0.281 | torch.Size([64]) || model.39.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.39.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.41.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.41.A
 | -0.006 | -0.101 |  0.101 |  0.057 | torch.Size([64, 1, 1, 3, 3]) || model.41.F
 |  0.554 |  0.121 |  0.994 |  0.273 | torch.Size([64]) || model.42.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.42.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.44.bias
 | -0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.44.A
 | -0.001 | -0.101 |  0.101 |  0.058 | torch.Size([64, 1, 1, 3, 3]) || model.44.F
 |  0.630 |  0.105 |  0.994 |  0.241 | torch.Size([64]) || model.45.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.45.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.47.bias
 |  0.000 | -0.027 |  0.027 |  0.016 | torch.Size([64, 64, 64]) || model.47.A
 | -0.000 | -0.101 |  0.101 |  0.058 | torch.Size([64, 1, 1, 3, 3]) || model.47.F

23-04-10 16:22:56.702 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 16:22:56.703 : Random seed: 2289
23-04-10 16:22:56.712 : Number of train images: 200, iters: 4
23-04-10 16:28:29.258 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 16:28:29.259 : Random seed: 6206
23-04-10 16:28:29.267 : Number of train images: 200, iters: 4
23-04-10 16:29:03.151 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 16:29:03.152 : Random seed: 9981
23-04-10 16:29:03.160 : Number of train images: 200, iters: 4
23-04-10 16:29:32.529 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 16:29:32.530 : Random seed: 4262
23-04-10 16:29:32.538 : Number of train images: 200, iters: 4
23-04-10 16:29:57.305 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 16:29:57.305 : Random seed: 3397
23-04-10 16:29:57.313 : Number of train images: 200, iters: 4
23-04-10 16:31:31.583 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 16:31:31.584 : Random seed: 4960
23-04-10 16:31:31.592 : Number of train images: 200, iters: 4
23-04-10 16:35:01.547 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 1
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 1
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 1
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 3
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 16:35:01.547 : Random seed: 6105
23-04-10 16:35:01.555 : Number of train images: 200, iters: 4
23-04-10 16:35:56.569 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 16:35:56.570 : Random seed: 5709
23-04-10 16:35:56.579 : Number of train images: 200, iters: 4
23-04-10 16:36:27.098 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 3
    out_nc: 3
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 16:36:27.099 : Random seed: 4273
23-04-10 16:36:27.107 : Number of train images: 200, iters: 4
23-04-10 16:38:56.127 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 16:38:56.128 : Random seed: 5625
23-04-10 16:38:56.135 : Number of train images: 200, iters: 4
23-04-10 16:39:51.731 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 16:39:51.732 : Random seed: 2464
23-04-10 16:39:51.740 : Number of train images: 200, iters: 4
23-04-10 16:41:06.829 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 16:41:06.829 : Random seed: 7917
23-04-10 16:41:06.837 : Number of train images: 200, iters: 4
23-04-10 16:41:23.690 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 16:41:23.691 : Random seed: 437
23-04-10 16:41:23.702 : Number of train images: 200, iters: 4
23-04-10 16:41:40.274 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 16:41:40.275 : Random seed: 512
23-04-10 16:41:40.283 : Number of train images: 200, iters: 4
23-04-10 16:42:01.028 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 16:42:01.029 : Random seed: 2411
23-04-10 16:42:01.038 : Number of train images: 200, iters: 4
23-04-10 16:42:13.700 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 16:42:13.701 : Random seed: 5421
23-04-10 16:42:13.709 : Number of train images: 200, iters: 4
23-04-10 16:42:14.056 : 
Networks name: DnCNN
Params number: 2889
Net structure:
DnCNN(
  (model): Sequential(
    (0): PHConv2d(in_features=3, out_features=3, bias=True)
    (1): ReLU(inplace=True)
    (2): PHConv2d(in_features=3, out_features=3, bias=True)
    (3): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): PHConv2d(in_features=3, out_features=3, bias=True)
    (6): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): PHConv2d(in_features=3, out_features=3, bias=True)
    (9): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): PHConv2d(in_features=3, out_features=3, bias=True)
    (12): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): PHConv2d(in_features=3, out_features=3, bias=True)
    (15): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): PHConv2d(in_features=3, out_features=3, bias=True)
    (18): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): PHConv2d(in_features=3, out_features=3, bias=True)
    (21): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): PHConv2d(in_features=3, out_features=3, bias=True)
    (24): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): PHConv2d(in_features=3, out_features=3, bias=True)
    (27): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): PHConv2d(in_features=3, out_features=3, bias=True)
    (30): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): PHConv2d(in_features=3, out_features=3, bias=True)
    (33): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): PHConv2d(in_features=3, out_features=3, bias=True)
    (36): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): PHConv2d(in_features=3, out_features=3, bias=True)
    (39): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): PHConv2d(in_features=3, out_features=3, bias=True)
    (42): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): PHConv2d(in_features=3, out_features=3, bias=True)
    (45): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): PHConv2d(in_features=3, out_features=3, bias=True)
  )
)

23-04-10 16:42:14.104 : 
 |  mean  |  min   |  max   |  std   || shape               
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([3]) || model.0.bias
 |  0.038 | -0.537 |  0.558 |  0.298 | torch.Size([3, 3, 3]) || model.0.A
 | -0.086 | -0.393 |  0.406 |  0.259 | torch.Size([3, 1, 1, 3, 3]) || model.0.F
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([3]) || model.2.bias
 |  0.027 | -0.549 |  0.559 |  0.365 | torch.Size([3, 3, 3]) || model.2.A
 | -0.043 | -0.379 |  0.379 |  0.231 | torch.Size([3, 1, 1, 3, 3]) || model.2.F
 |  0.559 |  0.129 |  0.984 |  0.260 | torch.Size([64]) || model.3.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.3.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([3]) || model.5.bias
 |  0.143 | -0.574 |  0.561 |  0.361 | torch.Size([3, 3, 3]) || model.5.A
 |  0.041 | -0.336 |  0.401 |  0.204 | torch.Size([3, 1, 1, 3, 3]) || model.5.F
 |  0.566 |  0.132 |  0.978 |  0.255 | torch.Size([64]) || model.6.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.6.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([3]) || model.8.bias
 |  0.108 | -0.566 |  0.515 |  0.317 | torch.Size([3, 3, 3]) || model.8.A
 | -0.063 | -0.400 |  0.317 |  0.229 | torch.Size([3, 1, 1, 3, 3]) || model.8.F
 |  0.567 |  0.124 |  0.995 |  0.263 | torch.Size([64]) || model.9.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.9.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([3]) || model.11.bias
 |  0.015 | -0.537 |  0.505 |  0.312 | torch.Size([3, 3, 3]) || model.11.A
 |  0.037 | -0.338 |  0.354 |  0.217 | torch.Size([3, 1, 1, 3, 3]) || model.11.F
 |  0.546 |  0.114 |  0.972 |  0.266 | torch.Size([64]) || model.12.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.12.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([3]) || model.14.bias
 |  0.068 | -0.560 |  0.567 |  0.331 | torch.Size([3, 3, 3]) || model.14.A
 | -0.004 | -0.396 |  0.373 |  0.242 | torch.Size([3, 1, 1, 3, 3]) || model.14.F
 |  0.600 |  0.109 |  0.986 |  0.256 | torch.Size([64]) || model.15.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.15.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([3]) || model.17.bias
 | -0.003 | -0.565 |  0.549 |  0.405 | torch.Size([3, 3, 3]) || model.17.A
 |  0.039 | -0.401 |  0.404 |  0.230 | torch.Size([3, 1, 1, 3, 3]) || model.17.F
 |  0.523 |  0.105 |  0.994 |  0.299 | torch.Size([64]) || model.18.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.18.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([3]) || model.20.bias
 | -0.081 | -0.550 |  0.396 |  0.308 | torch.Size([3, 3, 3]) || model.20.A
 |  0.028 | -0.385 |  0.405 |  0.231 | torch.Size([3, 1, 1, 3, 3]) || model.20.F
 |  0.558 |  0.101 |  0.994 |  0.251 | torch.Size([64]) || model.21.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.21.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([3]) || model.23.bias
 | -0.061 | -0.569 |  0.560 |  0.312 | torch.Size([3, 3, 3]) || model.23.A
 |  0.026 | -0.363 |  0.308 |  0.192 | torch.Size([3, 1, 1, 3, 3]) || model.23.F
 |  0.539 |  0.103 |  0.992 |  0.228 | torch.Size([64]) || model.24.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.24.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([3]) || model.26.bias
 |  0.026 | -0.548 |  0.567 |  0.319 | torch.Size([3, 3, 3]) || model.26.A
 | -0.044 | -0.337 |  0.393 |  0.221 | torch.Size([3, 1, 1, 3, 3]) || model.26.F
 |  0.573 |  0.108 |  0.979 |  0.246 | torch.Size([64]) || model.27.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.27.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([3]) || model.29.bias
 |  0.033 | -0.566 |  0.493 |  0.349 | torch.Size([3, 3, 3]) || model.29.A
 | -0.049 | -0.400 |  0.389 |  0.261 | torch.Size([3, 1, 1, 3, 3]) || model.29.F
 |  0.560 |  0.114 |  0.995 |  0.262 | torch.Size([64]) || model.30.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.30.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([3]) || model.32.bias
 |  0.065 | -0.548 |  0.522 |  0.348 | torch.Size([3, 3, 3]) || model.32.A
 | -0.115 | -0.406 |  0.388 |  0.250 | torch.Size([3, 1, 1, 3, 3]) || model.32.F
 |  0.564 |  0.104 |  0.997 |  0.266 | torch.Size([64]) || model.33.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.33.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([3]) || model.35.bias
 |  0.036 | -0.573 |  0.552 |  0.387 | torch.Size([3, 3, 3]) || model.35.A
 |  0.047 | -0.389 |  0.368 |  0.239 | torch.Size([3, 1, 1, 3, 3]) || model.35.F
 |  0.535 |  0.115 |  0.997 |  0.275 | torch.Size([64]) || model.36.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.36.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([3]) || model.38.bias
 | -0.016 | -0.505 |  0.559 |  0.346 | torch.Size([3, 3, 3]) || model.38.A
 | -0.013 | -0.395 |  0.383 |  0.224 | torch.Size([3, 1, 1, 3, 3]) || model.38.F
 |  0.557 |  0.129 |  0.993 |  0.252 | torch.Size([64]) || model.39.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.39.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([3]) || model.41.bias
 |  0.038 | -0.490 |  0.565 |  0.331 | torch.Size([3, 3, 3]) || model.41.A
 | -0.004 | -0.397 |  0.391 |  0.270 | torch.Size([3, 1, 1, 3, 3]) || model.41.F
 |  0.553 |  0.100 |  0.993 |  0.271 | torch.Size([64]) || model.42.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.42.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([3]) || model.44.bias
 | -0.061 | -0.558 |  0.479 |  0.322 | torch.Size([3, 3, 3]) || model.44.A
 | -0.062 | -0.377 |  0.337 |  0.193 | torch.Size([3, 1, 1, 3, 3]) || model.44.F
 |  0.582 |  0.127 |  0.980 |  0.230 | torch.Size([64]) || model.45.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.45.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([3]) || model.47.bias
 | -0.083 | -0.541 |  0.570 |  0.344 | torch.Size([3, 3, 3]) || model.47.A
 |  0.020 | -0.403 |  0.407 |  0.254 | torch.Size([3, 1, 1, 3, 3]) || model.47.F

23-04-10 16:42:43.860 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 16:42:43.861 : Random seed: 3869
23-04-10 16:42:43.869 : Number of train images: 200, iters: 4
23-04-10 16:43:06.418 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 16:43:06.419 : Random seed: 19
23-04-10 16:43:06.427 : Number of train images: 200, iters: 4
23-04-10 16:44:31.779 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 16:44:31.780 : Random seed: 1613
23-04-10 16:44:31.789 : Number of train images: 200, iters: 4
23-04-10 16:44:48.291 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 16:44:48.292 : Random seed: 5113
23-04-10 16:44:48.299 : Number of train images: 200, iters: 4
23-04-10 16:45:08.128 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 16:45:08.129 : Random seed: 2973
23-04-10 16:45:08.138 : Number of train images: 200, iters: 4
23-04-10 16:45:20.482 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 16:45:20.482 : Random seed: 7077
23-04-10 16:45:20.489 : Number of train images: 200, iters: 4
23-04-10 16:46:02.708 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 16:46:02.709 : Random seed: 3804
23-04-10 16:46:02.716 : Number of train images: 200, iters: 4
23-04-10 16:48:32.911 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-10 16:48:32.912 : Random seed: 936
23-04-10 16:48:32.920 : Number of train images: 200, iters: 4
23-04-11 07:15:21.403 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-11 07:15:21.628 : Random seed: 6488
23-04-11 07:15:22.952 : Number of train images: 200, iters: 4
23-04-11 07:15:58.023 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-11 07:15:58.024 : Random seed: 3004
23-04-11 07:15:58.031 : Number of train images: 200, iters: 4
23-04-11 07:21:58.359 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-11 07:21:58.362 : Random seed: 8759
23-04-11 07:21:58.370 : Number of train images: 200, iters: 4
23-04-11 07:22:40.421 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-11 07:22:40.421 : Random seed: 2905
23-04-11 07:22:40.429 : Number of train images: 200, iters: 4
23-04-11 07:24:05.658 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-11 07:24:05.659 : Random seed: 8270
23-04-11 07:24:05.666 : Number of train images: 200, iters: 4
23-04-11 07:24:06.250 : 
Networks name: DnCNN
Params number: 557074
Net structure:
DnCNN(
  (model): Sequential(
    (0): PHConv2d(in_features=1, out_features=64, bias=True)
    (1): ReLU(inplace=True)
    (2): PHConv2d(in_features=64, out_features=64, bias=True)
    (3): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): PHConv2d(in_features=64, out_features=64, bias=True)
    (6): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): PHConv2d(in_features=64, out_features=64, bias=True)
    (9): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): PHConv2d(in_features=64, out_features=64, bias=True)
    (12): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): PHConv2d(in_features=64, out_features=64, bias=True)
    (15): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): PHConv2d(in_features=64, out_features=64, bias=True)
    (18): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): PHConv2d(in_features=64, out_features=64, bias=True)
    (21): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): PHConv2d(in_features=64, out_features=64, bias=True)
    (24): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): PHConv2d(in_features=64, out_features=64, bias=True)
    (27): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): PHConv2d(in_features=64, out_features=64, bias=True)
    (30): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): PHConv2d(in_features=64, out_features=64, bias=True)
    (33): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): PHConv2d(in_features=64, out_features=64, bias=True)
    (36): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): PHConv2d(in_features=64, out_features=64, bias=True)
    (39): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): PHConv2d(in_features=64, out_features=64, bias=True)
    (42): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): PHConv2d(in_features=64, out_features=64, bias=True)
    (45): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): PHConv2d(in_features=64, out_features=1, bias=True)
  )
)

23-04-11 07:24:06.377 : 
 |  mean  |  min   |  max   |  std   || shape               
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.0.bias
 | -0.662 | -0.662 | -0.662 |    nan | torch.Size([1, 1, 1]) || model.0.A
 |  0.000 | -0.101 |  0.101 |  0.059 | torch.Size([1, 64, 1, 3, 3]) || model.0.F
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.2.bias
 |  0.057 |  0.057 |  0.057 |    nan | torch.Size([1, 1, 1]) || model.2.A
 |  0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.2.F
 |  0.552 |  0.105 |  0.979 |  0.264 | torch.Size([64]) || model.3.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.3.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.5.bias
 | -0.513 | -0.513 | -0.513 |    nan | torch.Size([1, 1, 1]) || model.5.A
 |  0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.5.F
 |  0.564 |  0.107 |  0.997 |  0.282 | torch.Size([64]) || model.6.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.6.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.8.bias
 | -1.226 | -1.226 | -1.226 |    nan | torch.Size([1, 1, 1]) || model.8.A
 | -0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.8.F
 |  0.548 |  0.109 |  0.992 |  0.276 | torch.Size([64]) || model.9.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.9.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.11.bias
 |  1.369 |  1.369 |  1.369 |    nan | torch.Size([1, 1, 1]) || model.11.A
 | -0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.11.F
 |  0.584 |  0.126 |  0.970 |  0.237 | torch.Size([64]) || model.12.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.12.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.14.bias
 | -0.073 | -0.073 | -0.073 |    nan | torch.Size([1, 1, 1]) || model.14.A
 | -0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.14.F
 |  0.546 |  0.114 |  0.987 |  0.284 | torch.Size([64]) || model.15.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.15.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.17.bias
 | -1.512 | -1.512 | -1.512 |    nan | torch.Size([1, 1, 1]) || model.17.A
 |  0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.17.F
 |  0.589 |  0.104 |  0.996 |  0.267 | torch.Size([64]) || model.18.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.18.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.20.bias
 | -0.535 | -0.535 | -0.535 |    nan | torch.Size([1, 1, 1]) || model.20.A
 |  0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.20.F
 |  0.553 |  0.104 |  0.966 |  0.271 | torch.Size([64]) || model.21.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.21.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.23.bias
 | -1.512 | -1.512 | -1.512 |    nan | torch.Size([1, 1, 1]) || model.23.A
 | -0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.23.F
 |  0.539 |  0.120 |  0.995 |  0.230 | torch.Size([64]) || model.24.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.24.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.26.bias
 | -0.934 | -0.934 | -0.934 |    nan | torch.Size([1, 1, 1]) || model.26.A
 |  0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.26.F
 |  0.570 |  0.101 |  0.987 |  0.228 | torch.Size([64]) || model.27.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.27.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.29.bias
 |  0.305 |  0.305 |  0.305 |    nan | torch.Size([1, 1, 1]) || model.29.A
 | -0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.29.F
 |  0.494 |  0.106 |  0.996 |  0.250 | torch.Size([64]) || model.30.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.30.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.32.bias
 |  0.743 |  0.743 |  0.743 |    nan | torch.Size([1, 1, 1]) || model.32.A
 | -0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.32.F
 |  0.477 |  0.108 |  0.976 |  0.253 | torch.Size([64]) || model.33.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.33.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.35.bias
 | -0.216 | -0.216 | -0.216 |    nan | torch.Size([1, 1, 1]) || model.35.A
 |  0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.35.F
 |  0.517 |  0.111 |  0.969 |  0.272 | torch.Size([64]) || model.36.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.36.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.38.bias
 |  1.289 |  1.289 |  1.289 |    nan | torch.Size([1, 1, 1]) || model.38.A
 | -0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.38.F
 |  0.580 |  0.108 |  0.996 |  0.269 | torch.Size([64]) || model.39.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.39.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.41.bias
 | -0.001 | -0.001 | -0.001 |    nan | torch.Size([1, 1, 1]) || model.41.A
 | -0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.41.F
 |  0.555 |  0.110 |  0.997 |  0.248 | torch.Size([64]) || model.42.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.42.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.44.bias
 |  0.966 |  0.966 |  0.966 |    nan | torch.Size([1, 1, 1]) || model.44.A
 | -0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.44.F
 |  0.565 |  0.126 |  0.998 |  0.257 | torch.Size([64]) || model.45.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.45.running_var
 |  0.000 |  0.000 |  0.000 |    nan | torch.Size([1]) || model.47.bias
 | -1.539 | -1.539 | -1.539 |    nan | torch.Size([1, 1, 1]) || model.47.A
 | -0.002 | -0.072 |  0.072 |  0.041 | torch.Size([1, 1, 64, 3, 3]) || model.47.F

23-04-11 07:24:39.837 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 1
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 1
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 1
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-11 07:24:39.837 : Random seed: 4774
23-04-11 07:24:39.845 : Number of train images: 200, iters: 4
23-04-11 07:24:40.256 : 
Networks name: DnCNN
Params number: 557074
Net structure:
DnCNN(
  (model): Sequential(
    (0): PHConv2d(in_features=1, out_features=64, bias=True)
    (1): ReLU(inplace=True)
    (2): PHConv2d(in_features=64, out_features=64, bias=True)
    (3): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): PHConv2d(in_features=64, out_features=64, bias=True)
    (6): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): PHConv2d(in_features=64, out_features=64, bias=True)
    (9): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): PHConv2d(in_features=64, out_features=64, bias=True)
    (12): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): PHConv2d(in_features=64, out_features=64, bias=True)
    (15): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): PHConv2d(in_features=64, out_features=64, bias=True)
    (18): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): PHConv2d(in_features=64, out_features=64, bias=True)
    (21): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): PHConv2d(in_features=64, out_features=64, bias=True)
    (24): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): PHConv2d(in_features=64, out_features=64, bias=True)
    (27): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): PHConv2d(in_features=64, out_features=64, bias=True)
    (30): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): PHConv2d(in_features=64, out_features=64, bias=True)
    (33): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): PHConv2d(in_features=64, out_features=64, bias=True)
    (36): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): PHConv2d(in_features=64, out_features=64, bias=True)
    (39): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): PHConv2d(in_features=64, out_features=64, bias=True)
    (42): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): PHConv2d(in_features=64, out_features=64, bias=True)
    (45): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): PHConv2d(in_features=64, out_features=1, bias=True)
  )
)

23-04-11 07:24:40.300 : 
 |  mean  |  min   |  max   |  std   || shape               
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.0.bias
 | -1.583 | -1.583 | -1.583 |    nan | torch.Size([1, 1, 1]) || model.0.A
 | -0.001 | -0.101 |  0.101 |  0.059 | torch.Size([1, 64, 1, 3, 3]) || model.0.F
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.2.bias
 | -0.682 | -0.682 | -0.682 |    nan | torch.Size([1, 1, 1]) || model.2.A
 |  0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.2.F
 |  0.554 |  0.115 |  0.980 |  0.270 | torch.Size([64]) || model.3.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.3.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.5.bias
 | -0.663 | -0.663 | -0.663 |    nan | torch.Size([1, 1, 1]) || model.5.A
 |  0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.5.F
 |  0.515 |  0.117 |  0.961 |  0.254 | torch.Size([64]) || model.6.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.6.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.8.bias
 | -0.190 | -0.190 | -0.190 |    nan | torch.Size([1, 1, 1]) || model.8.A
 | -0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.8.F
 |  0.543 |  0.103 |  0.995 |  0.268 | torch.Size([64]) || model.9.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.9.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.11.bias
 | -0.555 | -0.555 | -0.555 |    nan | torch.Size([1, 1, 1]) || model.11.A
 |  0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.11.F
 |  0.572 |  0.104 |  0.999 |  0.276 | torch.Size([64]) || model.12.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.12.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.14.bias
 | -0.174 | -0.174 | -0.174 |    nan | torch.Size([1, 1, 1]) || model.14.A
 |  0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.14.F
 |  0.543 |  0.109 |  0.979 |  0.267 | torch.Size([64]) || model.15.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.15.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.17.bias
 | -0.006 | -0.006 | -0.006 |    nan | torch.Size([1, 1, 1]) || model.17.A
 | -0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.17.F
 |  0.554 |  0.124 |  0.937 |  0.238 | torch.Size([64]) || model.18.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.18.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.20.bias
 | -0.654 | -0.654 | -0.654 |    nan | torch.Size([1, 1, 1]) || model.20.A
 |  0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.20.F
 |  0.555 |  0.117 |  0.993 |  0.270 | torch.Size([64]) || model.21.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.21.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.23.bias
 | -1.647 | -1.647 | -1.647 |    nan | torch.Size([1, 1, 1]) || model.23.A
 |  0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.23.F
 |  0.579 |  0.104 |  0.998 |  0.279 | torch.Size([64]) || model.24.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.24.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.26.bias
 |  0.947 |  0.947 |  0.947 |    nan | torch.Size([1, 1, 1]) || model.26.A
 |  0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.26.F
 |  0.559 |  0.156 |  0.962 |  0.250 | torch.Size([64]) || model.27.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.27.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.29.bias
 |  1.435 |  1.435 |  1.435 |    nan | torch.Size([1, 1, 1]) || model.29.A
 |  0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.29.F
 |  0.590 |  0.112 |  0.999 |  0.249 | torch.Size([64]) || model.30.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.30.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.32.bias
 |  0.118 |  0.118 |  0.118 |    nan | torch.Size([1, 1, 1]) || model.32.A
 |  0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.32.F
 |  0.577 |  0.101 |  1.000 |  0.239 | torch.Size([64]) || model.33.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.33.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.35.bias
 | -0.620 | -0.620 | -0.620 |    nan | torch.Size([1, 1, 1]) || model.35.A
 | -0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.35.F
 |  0.515 |  0.115 |  0.990 |  0.274 | torch.Size([64]) || model.36.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.36.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.38.bias
 |  0.290 |  0.290 |  0.290 |    nan | torch.Size([1, 1, 1]) || model.38.A
 |  0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.38.F
 |  0.561 |  0.107 |  0.986 |  0.243 | torch.Size([64]) || model.39.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.39.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.41.bias
 | -0.417 | -0.417 | -0.417 |    nan | torch.Size([1, 1, 1]) || model.41.A
 |  0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.41.F
 |  0.549 |  0.104 |  0.982 |  0.250 | torch.Size([64]) || model.42.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.42.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.44.bias
 |  0.673 |  0.673 |  0.673 |    nan | torch.Size([1, 1, 1]) || model.44.A
 |  0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.44.F
 |  0.557 |  0.112 |  0.999 |  0.272 | torch.Size([64]) || model.45.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.45.running_var
 |  0.000 |  0.000 |  0.000 |    nan | torch.Size([1]) || model.47.bias
 | -0.881 | -0.881 | -0.881 |    nan | torch.Size([1, 1, 1]) || model.47.A
 |  0.001 | -0.072 |  0.072 |  0.042 | torch.Size([1, 1, 64, 3, 3]) || model.47.F

23-04-11 07:25:48.654 : <epoch: 66, iter:     200, lr:1.000e-04> G_loss: 3.997e-02 
23-04-11 07:26:55.250 : <epoch:133, iter:     400, lr:1.000e-04> G_loss: 3.453e-02 
23-04-11 07:28:02.089 : <epoch:199, iter:     600, lr:1.000e-04> G_loss: 2.976e-02 
23-04-11 07:29:09.653 : <epoch:266, iter:     800, lr:1.000e-04> G_loss: 3.204e-02 
23-04-11 07:30:17.446 : <epoch:333, iter:   1,000, lr:1.000e-04> G_loss: 2.793e-02 
23-04-11 07:31:24.345 : <epoch:399, iter:   1,200, lr:1.000e-04> G_loss: 2.919e-02 
23-04-11 07:32:31.315 : <epoch:466, iter:   1,400, lr:1.000e-04> G_loss: 2.729e-02 
23-04-11 07:33:37.884 : <epoch:533, iter:   1,600, lr:1.000e-04> G_loss: 2.908e-02 
23-04-11 07:34:44.818 : <epoch:599, iter:   1,800, lr:1.000e-04> G_loss: 2.926e-02 
23-04-11 07:35:52.356 : <epoch:666, iter:   2,000, lr:1.000e-04> G_loss: 3.001e-02 
23-04-11 07:37:00.118 : <epoch:733, iter:   2,200, lr:1.000e-04> G_loss: 2.861e-02 
23-04-11 07:38:07.126 : <epoch:799, iter:   2,400, lr:1.000e-04> G_loss: 2.924e-02 
23-04-11 07:39:14.600 : <epoch:866, iter:   2,600, lr:1.000e-04> G_loss: 2.593e-02 
23-04-11 07:40:22.242 : <epoch:933, iter:   2,800, lr:1.000e-04> G_loss: 2.772e-02 
23-04-11 07:41:27.859 : <epoch:999, iter:   3,000, lr:1.000e-04> G_loss: 2.754e-02 
23-04-11 07:42:35.415 : <epoch:1066, iter:   3,200, lr:1.000e-04> G_loss: 2.639e-02 
23-04-11 07:43:42.988 : <epoch:1133, iter:   3,400, lr:1.000e-04> G_loss: 2.548e-02 
23-04-11 07:44:49.814 : <epoch:1199, iter:   3,600, lr:1.000e-04> G_loss: 2.703e-02 
23-04-11 07:45:56.909 : <epoch:1266, iter:   3,800, lr:1.000e-04> G_loss: 2.736e-02 
23-04-11 07:47:04.210 : <epoch:1333, iter:   4,000, lr:1.000e-04> G_loss: 3.136e-02 
23-04-11 07:48:09.926 : <epoch:1399, iter:   4,200, lr:1.000e-04> G_loss: 2.431e-02 
23-04-11 07:49:16.824 : <epoch:1466, iter:   4,400, lr:1.000e-04> G_loss: 2.712e-02 
23-04-11 07:50:23.666 : <epoch:1533, iter:   4,600, lr:1.000e-04> G_loss: 2.654e-02 
23-04-11 07:51:29.948 : <epoch:1599, iter:   4,800, lr:1.000e-04> G_loss: 2.559e-02 
23-04-11 07:52:37.058 : <epoch:1666, iter:   5,000, lr:1.000e-04> G_loss: 2.655e-02 
23-04-11 07:52:37.058 : Saving the model.
23-04-11 07:52:37.912 : ---1--> 101085.png | 25.73dB
23-04-11 07:52:38.397 : ---2--> 101087.png | 29.63dB
23-04-11 07:52:38.796 : ---3--> 102061.png | 29.52dB
23-04-11 07:52:39.293 : ---4--> 103070.png | 30.14dB
23-04-11 07:52:39.749 : ---5--> 105025.png | 27.10dB
23-04-11 07:52:40.215 : ---6--> 106024.png | 32.19dB
23-04-11 07:52:40.702 : ---7--> 108005.png | 28.26dB
23-04-11 07:52:41.151 : ---8--> 108070.png | 26.02dB
23-04-11 07:52:41.589 : ---9--> 108082.png | 28.65dB
23-04-11 07:52:42.137 : --10--> 109053.png | 29.50dB
23-04-11 07:52:42.626 : --11--> 119082.png | 28.20dB
23-04-11 07:52:43.107 : --12-->  12084.png | 28.10dB
23-04-11 07:52:43.610 : --13--> 123074.png | 29.14dB
23-04-11 07:52:44.071 : --14--> 126007.png | 30.34dB
23-04-11 07:52:44.596 : --15--> 130026.png | 27.02dB
23-04-11 07:52:45.028 : --16--> 134035.png | 27.47dB
23-04-11 07:52:45.500 : --17-->  14037.png | 32.41dB
23-04-11 07:52:45.970 : --18--> 143090.png | 32.43dB
23-04-11 07:52:46.466 : --19--> 145086.png | 27.80dB
23-04-11 07:52:46.931 : --20--> 147091.png | 28.64dB
23-04-11 07:52:47.409 : --21--> 148026.png | 25.95dB
23-04-11 07:52:47.930 : --22--> 148089.png | 26.69dB
23-04-11 07:52:48.411 : --23--> 157055.png | 28.30dB
23-04-11 07:52:49.195 : --24--> 159008.png | 28.25dB
23-04-11 07:52:49.820 : --25--> 160068.png | 29.22dB
23-04-11 07:52:50.347 : --26-->  16077.png | 28.21dB
23-04-11 07:52:50.819 : --27--> 163085.png | 29.58dB
23-04-11 07:52:51.467 : --28--> 167062.png | 32.42dB
23-04-11 07:52:51.979 : --29--> 167083.png | 24.21dB
23-04-11 07:52:52.512 : --30--> 170057.png | 29.47dB
23-04-11 07:52:53.104 : --31--> 175032.png | 24.28dB
23-04-11 07:52:53.596 : --32--> 175043.png | 26.42dB
23-04-11 07:52:54.100 : --33--> 182053.png | 27.55dB
23-04-11 07:52:54.654 : --34--> 189080.png | 32.67dB
23-04-11 07:52:55.142 : --35-->  19021.png | 27.87dB
23-04-11 07:52:55.633 : --36--> 196073.png | 27.28dB
23-04-11 07:52:56.160 : --37--> 197017.png | 28.26dB
23-04-11 07:52:56.657 : --38--> 208001.png | 28.62dB
23-04-11 07:52:57.137 : --39--> 210088.png | 31.97dB
23-04-11 07:52:57.586 : --40-->  21077.png | 28.95dB
23-04-11 07:52:58.113 : --41--> 216081.png | 27.63dB
23-04-11 07:52:58.665 : --42--> 219090.png | 29.17dB
23-04-11 07:52:59.239 : --43--> 220075.png | 29.77dB
23-04-11 07:52:59.744 : --44--> 223061.png | 26.82dB
23-04-11 07:53:00.277 : --45--> 227092.png | 32.78dB
23-04-11 07:53:00.798 : --46--> 229036.png | 26.16dB
23-04-11 07:53:01.310 : --47--> 236037.png | 26.42dB
23-04-11 07:53:01.819 : --48-->  24077.png | 29.09dB
23-04-11 07:53:02.474 : --49--> 241004.png | 31.10dB
23-04-11 07:53:02.985 : --50--> 241048.png | 26.55dB
23-04-11 07:53:03.418 : --51--> 253027.png | 28.00dB
23-04-11 07:53:03.921 : --52--> 253055.png | 31.47dB
23-04-11 07:53:04.402 : --53--> 260058.png | 30.64dB
23-04-11 07:53:04.966 : --54--> 271035.png | 28.61dB
23-04-11 07:53:05.604 : --55--> 285079.png | 27.31dB
23-04-11 07:53:06.063 : --56--> 291000.png | 23.85dB
23-04-11 07:53:06.509 : --57--> 295087.png | 28.14dB
23-04-11 07:53:07.021 : --58--> 296007.png | 30.62dB
23-04-11 07:53:07.481 : --59--> 296059.png | 30.05dB
23-04-11 07:53:07.945 : --60--> 299086.png | 30.77dB
23-04-11 07:53:08.485 : --61--> 300091.png | 29.84dB
23-04-11 07:53:08.916 : --62--> 302008.png | 32.67dB
23-04-11 07:53:09.392 : --63--> 304034.png | 26.24dB
23-04-11 07:53:09.892 : --64--> 304074.png | 26.60dB
23-04-11 07:53:10.353 : --65--> 306005.png | 28.70dB
23-04-11 07:53:10.906 : --66-->   3096.png | 37.05dB
23-04-11 07:53:11.395 : --67-->  33039.png | 24.60dB
23-04-11 07:53:11.847 : --68--> 351093.png | 25.89dB
23-04-11 07:53:11.864 : <epoch:1666, iter:   5,000, Average PSNR : 28.69dB

23-04-11 07:54:18.753 : <epoch:1733, iter:   5,200, lr:1.000e-04> G_loss: 2.748e-02 
23-04-11 07:55:25.150 : <epoch:1799, iter:   5,400, lr:1.000e-04> G_loss: 3.035e-02 
23-04-11 07:56:32.045 : <epoch:1866, iter:   5,600, lr:1.000e-04> G_loss: 2.667e-02 
23-04-11 07:57:39.410 : <epoch:1933, iter:   5,800, lr:1.000e-04> G_loss: 2.645e-02 
23-04-11 07:58:46.084 : <epoch:1999, iter:   6,000, lr:1.000e-04> G_loss: 2.857e-02 
23-04-11 07:59:53.178 : <epoch:2066, iter:   6,200, lr:1.000e-04> G_loss: 2.862e-02 
23-04-11 08:01:00.500 : <epoch:2133, iter:   6,400, lr:1.000e-04> G_loss: 2.730e-02 
23-04-11 08:02:06.359 : <epoch:2199, iter:   6,600, lr:1.000e-04> G_loss: 2.796e-02 
23-04-11 08:03:13.760 : <epoch:2266, iter:   6,800, lr:1.000e-04> G_loss: 2.874e-02 
23-04-11 08:04:21.078 : <epoch:2333, iter:   7,000, lr:1.000e-04> G_loss: 2.363e-02 
23-04-11 08:05:28.036 : <epoch:2399, iter:   7,200, lr:1.000e-04> G_loss: 2.721e-02 
23-04-11 08:06:34.632 : <epoch:2466, iter:   7,400, lr:1.000e-04> G_loss: 2.889e-02 
23-04-11 08:07:41.714 : <epoch:2533, iter:   7,600, lr:1.000e-04> G_loss: 2.683e-02 
23-04-11 08:08:47.644 : <epoch:2599, iter:   7,800, lr:1.000e-04> G_loss: 2.568e-02 
23-04-11 08:09:53.960 : <epoch:2666, iter:   8,000, lr:1.000e-04> G_loss: 2.726e-02 
23-04-11 08:11:01.191 : <epoch:2733, iter:   8,200, lr:1.000e-04> G_loss: 2.611e-02 
23-04-11 08:12:07.277 : <epoch:2799, iter:   8,400, lr:1.000e-04> G_loss: 2.650e-02 
23-04-11 08:13:14.014 : <epoch:2866, iter:   8,600, lr:1.000e-04> G_loss: 2.898e-02 
23-04-11 08:14:20.541 : <epoch:2933, iter:   8,800, lr:1.000e-04> G_loss: 2.761e-02 
23-04-11 08:15:26.205 : <epoch:2999, iter:   9,000, lr:1.000e-04> G_loss: 2.891e-02 
23-04-11 08:16:32.659 : <epoch:3066, iter:   9,200, lr:1.000e-04> G_loss: 2.891e-02 
23-04-11 08:17:39.877 : <epoch:3133, iter:   9,400, lr:1.000e-04> G_loss: 2.409e-02 
23-04-11 08:18:46.108 : <epoch:3199, iter:   9,600, lr:1.000e-04> G_loss: 2.396e-02 
23-04-11 08:19:53.188 : <epoch:3266, iter:   9,800, lr:1.000e-04> G_loss: 2.947e-02 
23-04-11 08:21:00.499 : <epoch:3333, iter:  10,000, lr:1.000e-04> G_loss: 2.578e-02 
23-04-11 08:21:00.500 : Saving the model.
23-04-11 08:21:00.809 : ---1--> 101085.png | 25.79dB
23-04-11 08:21:01.078 : ---2--> 101087.png | 29.93dB
23-04-11 08:21:01.275 : ---3--> 102061.png | 29.66dB
23-04-11 08:21:01.456 : ---4--> 103070.png | 30.36dB
23-04-11 08:21:01.693 : ---5--> 105025.png | 27.32dB
23-04-11 08:21:01.903 : ---6--> 106024.png | 32.42dB
23-04-11 08:21:02.137 : ---7--> 108005.png | 28.44dB
23-04-11 08:21:02.341 : ---8--> 108070.png | 26.10dB
23-04-11 08:21:02.570 : ---9--> 108082.png | 28.79dB
23-04-11 08:21:02.768 : --10--> 109053.png | 29.62dB
23-04-11 08:21:02.993 : --11--> 119082.png | 28.48dB
23-04-11 08:21:03.189 : --12-->  12084.png | 28.20dB
23-04-11 08:21:03.428 : --13--> 123074.png | 29.32dB
23-04-11 08:21:03.694 : --14--> 126007.png | 30.47dB
23-04-11 08:21:03.926 : --15--> 130026.png | 27.11dB
23-04-11 08:21:04.153 : --16--> 134035.png | 27.66dB
23-04-11 08:21:04.432 : --17-->  14037.png | 32.56dB
23-04-11 08:21:04.665 : --18--> 143090.png | 32.63dB
23-04-11 08:21:04.956 : --19--> 145086.png | 27.90dB
23-04-11 08:21:05.213 : --20--> 147091.png | 28.70dB
23-04-11 08:21:05.445 : --21--> 148026.png | 26.07dB
23-04-11 08:21:05.668 : --22--> 148089.png | 26.81dB
23-04-11 08:21:05.909 : --23--> 157055.png | 28.57dB
23-04-11 08:21:06.167 : --24--> 159008.png | 28.41dB
23-04-11 08:21:06.376 : --25--> 160068.png | 29.32dB
23-04-11 08:21:06.575 : --26-->  16077.png | 28.34dB
23-04-11 08:21:06.831 : --27--> 163085.png | 29.76dB
23-04-11 08:21:07.117 : --28--> 167062.png | 32.73dB
23-04-11 08:21:07.308 : --29--> 167083.png | 24.30dB
23-04-11 08:21:07.649 : --30--> 170057.png | 29.63dB
23-04-11 08:21:07.869 : --31--> 175032.png | 24.41dB
23-04-11 08:21:08.120 : --32--> 175043.png | 26.52dB
23-04-11 08:21:08.349 : --33--> 182053.png | 27.69dB
23-04-11 08:21:08.580 : --34--> 189080.png | 32.82dB
23-04-11 08:21:08.848 : --35-->  19021.png | 27.91dB
23-04-11 08:21:09.132 : --36--> 196073.png | 27.23dB
23-04-11 08:21:09.355 : --37--> 197017.png | 28.30dB
23-04-11 08:21:09.593 : --38--> 208001.png | 28.83dB
23-04-11 08:21:09.808 : --39--> 210088.png | 32.41dB
23-04-11 08:21:10.025 : --40-->  21077.png | 29.08dB
23-04-11 08:21:10.235 : --41--> 216081.png | 27.73dB
23-04-11 08:21:10.451 : --42--> 219090.png | 29.26dB
23-04-11 08:21:10.879 : --43--> 220075.png | 30.02dB
23-04-11 08:21:11.094 : --44--> 223061.png | 27.04dB
23-04-11 08:21:11.405 : --45--> 227092.png | 32.97dB
23-04-11 08:21:11.678 : --46--> 229036.png | 26.24dB
23-04-11 08:21:11.901 : --47--> 236037.png | 26.52dB
23-04-11 08:21:12.347 : --48-->  24077.png | 29.39dB
23-04-11 08:21:12.672 : --49--> 241004.png | 31.28dB
23-04-11 08:21:12.942 : --50--> 241048.png | 26.72dB
23-04-11 08:21:13.134 : --51--> 253027.png | 28.20dB
23-04-11 08:21:13.407 : --52--> 253055.png | 31.62dB
23-04-11 08:21:13.628 : --53--> 260058.png | 30.78dB
23-04-11 08:21:13.856 : --54--> 271035.png | 28.83dB
23-04-11 08:21:14.075 : --55--> 285079.png | 27.41dB
23-04-11 08:21:14.343 : --56--> 291000.png | 23.94dB
23-04-11 08:21:14.633 : --57--> 295087.png | 28.16dB
23-04-11 08:21:14.911 : --58--> 296007.png | 30.74dB
23-04-11 08:21:15.353 : --59--> 296059.png | 30.11dB
23-04-11 08:21:15.718 : --60--> 299086.png | 30.80dB
23-04-11 08:21:15.934 : --61--> 300091.png | 29.87dB
23-04-11 08:21:16.140 : --62--> 302008.png | 33.12dB
23-04-11 08:21:16.393 : --63--> 304034.png | 26.38dB
23-04-11 08:21:16.687 : --64--> 304074.png | 26.63dB
23-04-11 08:21:17.001 : --65--> 306005.png | 28.78dB
23-04-11 08:21:17.241 : --66-->   3096.png | 37.49dB
23-04-11 08:21:17.505 : --67-->  33039.png | 24.67dB
23-04-11 08:21:17.769 : --68--> 351093.png | 25.99dB
23-04-11 08:21:17.781 : <epoch:3333, iter:  10,000, Average PSNR : 28.84dB

23-04-11 08:22:24.338 : <epoch:3399, iter:  10,200, lr:1.000e-04> G_loss: 2.658e-02 
23-04-11 08:23:31.312 : <epoch:3466, iter:  10,400, lr:1.000e-04> G_loss: 2.735e-02 
23-04-11 08:24:37.752 : <epoch:3533, iter:  10,600, lr:1.000e-04> G_loss: 2.931e-02 
23-04-11 08:25:43.480 : <epoch:3599, iter:  10,800, lr:1.000e-04> G_loss: 2.752e-02 
23-04-11 08:26:50.610 : <epoch:3666, iter:  11,000, lr:1.000e-04> G_loss: 2.549e-02 
23-04-11 08:27:57.562 : <epoch:3733, iter:  11,200, lr:1.000e-04> G_loss: 2.358e-02 
23-04-11 08:29:04.212 : <epoch:3799, iter:  11,400, lr:1.000e-04> G_loss: 2.558e-02 
23-04-11 08:30:11.403 : <epoch:3866, iter:  11,600, lr:1.000e-04> G_loss: 2.726e-02 
23-04-11 08:31:18.612 : <epoch:3933, iter:  11,800, lr:1.000e-04> G_loss: 2.381e-02 
23-04-11 08:32:24.058 : <epoch:3999, iter:  12,000, lr:1.000e-04> G_loss: 2.670e-02 
23-04-11 08:33:30.839 : <epoch:4066, iter:  12,200, lr:1.000e-04> G_loss: 3.027e-02 
23-04-11 08:34:37.828 : <epoch:4133, iter:  12,400, lr:1.000e-04> G_loss: 2.760e-02 
23-04-11 08:35:44.343 : <epoch:4199, iter:  12,600, lr:1.000e-04> G_loss: 2.422e-02 
23-04-11 08:36:51.566 : <epoch:4266, iter:  12,800, lr:1.000e-04> G_loss: 2.729e-02 
23-04-11 08:37:58.758 : <epoch:4333, iter:  13,000, lr:1.000e-04> G_loss: 2.516e-02 
23-04-11 08:39:04.242 : <epoch:4399, iter:  13,200, lr:1.000e-04> G_loss: 2.426e-02 
23-04-11 08:40:11.191 : <epoch:4466, iter:  13,400, lr:1.000e-04> G_loss: 2.732e-02 
23-04-11 08:41:18.134 : <epoch:4533, iter:  13,600, lr:1.000e-04> G_loss: 2.591e-02 
23-04-11 08:42:25.401 : <epoch:4599, iter:  13,800, lr:1.000e-04> G_loss: 2.628e-02 
23-04-11 08:43:32.233 : <epoch:4666, iter:  14,000, lr:1.000e-04> G_loss: 2.596e-02 
23-04-11 08:44:39.029 : <epoch:4733, iter:  14,200, lr:1.000e-04> G_loss: 2.766e-02 
23-04-11 08:45:44.553 : <epoch:4799, iter:  14,400, lr:1.000e-04> G_loss: 2.348e-02 
23-04-11 08:46:51.001 : <epoch:4866, iter:  14,600, lr:1.000e-04> G_loss: 2.306e-02 
23-04-11 08:47:57.668 : <epoch:4933, iter:  14,800, lr:1.000e-04> G_loss: 2.872e-02 
23-04-11 08:49:03.787 : <epoch:4999, iter:  15,000, lr:1.000e-04> G_loss: 2.450e-02 
23-04-11 08:49:03.788 : Saving the model.
23-04-11 08:49:04.072 : ---1--> 101085.png | 25.80dB
23-04-11 08:49:04.248 : ---2--> 101087.png | 29.83dB
23-04-11 08:49:04.449 : ---3--> 102061.png | 29.75dB
23-04-11 08:49:04.651 : ---4--> 103070.png | 30.40dB
23-04-11 08:49:04.822 : ---5--> 105025.png | 27.29dB
23-04-11 08:49:05.017 : ---6--> 106024.png | 32.61dB
23-04-11 08:49:05.237 : ---7--> 108005.png | 28.48dB
23-04-11 08:49:05.442 : ---8--> 108070.png | 26.12dB
23-04-11 08:49:05.630 : ---9--> 108082.png | 28.87dB
23-04-11 08:49:05.871 : --10--> 109053.png | 29.63dB
23-04-11 08:49:06.136 : --11--> 119082.png | 28.66dB
23-04-11 08:49:06.441 : --12-->  12084.png | 28.21dB
23-04-11 08:49:06.678 : --13--> 123074.png | 29.31dB
23-04-11 08:49:06.862 : --14--> 126007.png | 30.54dB
23-04-11 08:49:07.109 : --15--> 130026.png | 27.10dB
23-04-11 08:49:07.401 : --16--> 134035.png | 27.79dB
23-04-11 08:49:07.672 : --17-->  14037.png | 32.63dB
23-04-11 08:49:07.902 : --18--> 143090.png | 32.69dB
23-04-11 08:49:08.134 : --19--> 145086.png | 27.98dB
23-04-11 08:49:08.407 : --20--> 147091.png | 28.77dB
23-04-11 08:49:08.617 : --21--> 148026.png | 26.15dB
23-04-11 08:49:08.886 : --22--> 148089.png | 26.87dB
23-04-11 08:49:09.129 : --23--> 157055.png | 28.55dB
23-04-11 08:49:09.371 : --24--> 159008.png | 28.40dB
23-04-11 08:49:09.635 : --25--> 160068.png | 29.33dB
23-04-11 08:49:09.844 : --26-->  16077.png | 28.36dB
23-04-11 08:49:10.050 : --27--> 163085.png | 29.82dB
23-04-11 08:49:10.313 : --28--> 167062.png | 32.71dB
23-04-11 08:49:10.557 : --29--> 167083.png | 24.29dB
23-04-11 08:49:10.786 : --30--> 170057.png | 29.61dB
23-04-11 08:49:11.071 : --31--> 175032.png | 24.46dB
23-04-11 08:49:11.275 : --32--> 175043.png | 26.51dB
23-04-11 08:49:11.545 : --33--> 182053.png | 27.72dB
23-04-11 08:49:11.732 : --34--> 189080.png | 33.13dB
23-04-11 08:49:11.945 : --35-->  19021.png | 27.94dB
23-04-11 08:49:12.212 : --36--> 196073.png | 27.26dB
23-04-11 08:49:12.462 : --37--> 197017.png | 28.38dB
23-04-11 08:49:12.685 : --38--> 208001.png | 28.86dB
23-04-11 08:49:12.973 : --39--> 210088.png | 32.52dB
23-04-11 08:49:13.195 : --40-->  21077.png | 29.15dB
23-04-11 08:49:13.464 : --41--> 216081.png | 27.80dB
23-04-11 08:49:13.728 : --42--> 219090.png | 29.37dB
23-04-11 08:49:13.911 : --43--> 220075.png | 30.14dB
23-04-11 08:49:14.178 : --44--> 223061.png | 27.15dB
23-04-11 08:49:14.370 : --45--> 227092.png | 33.07dB
23-04-11 08:49:14.629 : --46--> 229036.png | 26.27dB
23-04-11 08:49:14.841 : --47--> 236037.png | 26.50dB
23-04-11 08:49:15.036 : --48-->  24077.png | 29.52dB
23-04-11 08:49:15.230 : --49--> 241004.png | 31.29dB
23-04-11 08:49:15.586 : --50--> 241048.png | 26.66dB
23-04-11 08:49:15.785 : --51--> 253027.png | 28.29dB
23-04-11 08:49:15.980 : --52--> 253055.png | 31.66dB
23-04-11 08:49:16.178 : --53--> 260058.png | 30.72dB
23-04-11 08:49:16.388 : --54--> 271035.png | 28.85dB
23-04-11 08:49:16.660 : --55--> 285079.png | 27.47dB
23-04-11 08:49:16.882 : --56--> 291000.png | 23.91dB
23-04-11 08:49:17.098 : --57--> 295087.png | 28.22dB
23-04-11 08:49:17.366 : --58--> 296007.png | 30.75dB
23-04-11 08:49:17.563 : --59--> 296059.png | 30.19dB
23-04-11 08:49:17.805 : --60--> 299086.png | 30.80dB
23-04-11 08:49:18.025 : --61--> 300091.png | 29.97dB
23-04-11 08:49:18.241 : --62--> 302008.png | 33.40dB
23-04-11 08:49:18.474 : --63--> 304034.png | 26.39dB
23-04-11 08:49:18.680 : --64--> 304074.png | 26.62dB
23-04-11 08:49:18.918 : --65--> 306005.png | 28.81dB
23-04-11 08:49:19.114 : --66-->   3096.png | 37.62dB
23-04-11 08:49:19.350 : --67-->  33039.png | 24.65dB
23-04-11 08:49:19.533 : --68--> 351093.png | 25.99dB
23-04-11 08:49:19.548 : <epoch:4999, iter:  15,000, Average PSNR : 28.89dB

23-04-11 08:50:26.529 : <epoch:5066, iter:  15,200, lr:1.000e-04> G_loss: 2.640e-02 
23-04-11 08:51:33.394 : <epoch:5133, iter:  15,400, lr:1.000e-04> G_loss: 2.937e-02 
23-04-11 08:52:39.675 : <epoch:5199, iter:  15,600, lr:1.000e-04> G_loss: 2.550e-02 
23-04-11 08:53:45.853 : <epoch:5266, iter:  15,800, lr:1.000e-04> G_loss: 2.742e-02 
23-04-11 08:54:52.032 : <epoch:5333, iter:  16,000, lr:1.000e-04> G_loss: 2.843e-02 
23-04-11 08:55:58.307 : <epoch:5399, iter:  16,200, lr:1.000e-04> G_loss: 2.654e-02 
23-04-11 08:57:05.254 : <epoch:5466, iter:  16,400, lr:1.000e-04> G_loss: 2.658e-02 
23-04-11 08:58:12.086 : <epoch:5533, iter:  16,600, lr:1.000e-04> G_loss: 2.408e-02 
23-04-11 08:59:18.320 : <epoch:5599, iter:  16,800, lr:1.000e-04> G_loss: 2.453e-02 
23-04-11 09:00:24.620 : <epoch:5666, iter:  17,000, lr:1.000e-04> G_loss: 2.849e-02 
23-04-11 09:01:31.040 : <epoch:5733, iter:  17,200, lr:1.000e-04> G_loss: 2.673e-02 
23-04-11 09:02:37.435 : <epoch:5799, iter:  17,400, lr:1.000e-04> G_loss: 2.538e-02 
23-04-11 09:03:44.087 : <epoch:5866, iter:  17,600, lr:1.000e-04> G_loss: 2.619e-02 
23-04-11 09:04:50.940 : <epoch:5933, iter:  17,800, lr:1.000e-04> G_loss: 2.786e-02 
23-04-11 09:05:57.138 : <epoch:5999, iter:  18,000, lr:1.000e-04> G_loss: 2.815e-02 
23-04-11 09:07:03.243 : <epoch:6066, iter:  18,200, lr:1.000e-04> G_loss: 2.648e-02 
23-04-11 09:08:09.219 : <epoch:6133, iter:  18,400, lr:1.000e-04> G_loss: 2.634e-02 
23-04-11 09:09:15.371 : <epoch:6199, iter:  18,600, lr:1.000e-04> G_loss: 2.617e-02 
23-04-11 09:10:21.867 : <epoch:6266, iter:  18,800, lr:1.000e-04> G_loss: 2.563e-02 
23-04-11 09:11:28.689 : <epoch:6333, iter:  19,000, lr:1.000e-04> G_loss: 2.481e-02 
23-04-11 09:12:34.011 : <epoch:6399, iter:  19,200, lr:1.000e-04> G_loss: 2.668e-02 
23-04-11 09:13:40.121 : <epoch:6466, iter:  19,400, lr:1.000e-04> G_loss: 2.627e-02 
23-04-11 09:14:47.001 : <epoch:6533, iter:  19,600, lr:1.000e-04> G_loss: 2.596e-02 
23-04-11 09:15:53.328 : <epoch:6599, iter:  19,800, lr:1.000e-04> G_loss: 2.631e-02 
23-04-11 09:17:00.267 : <epoch:6666, iter:  20,000, lr:1.000e-04> G_loss: 2.704e-02 
23-04-11 09:17:00.268 : Saving the model.
23-04-11 09:17:00.611 : ---1--> 101085.png | 25.79dB
23-04-11 09:17:00.805 : ---2--> 101087.png | 29.90dB
23-04-11 09:17:01.101 : ---3--> 102061.png | 29.75dB
23-04-11 09:17:01.373 : ---4--> 103070.png | 30.44dB
23-04-11 09:17:01.569 : ---5--> 105025.png | 27.05dB
23-04-11 09:17:01.780 : ---6--> 106024.png | 31.52dB
23-04-11 09:17:01.995 : ---7--> 108005.png | 28.51dB
23-04-11 09:17:02.199 : ---8--> 108070.png | 26.12dB
23-04-11 09:17:02.378 : ---9--> 108082.png | 28.88dB
23-04-11 09:17:02.574 : --10--> 109053.png | 29.68dB
23-04-11 09:17:02.753 : --11--> 119082.png | 28.72dB
23-04-11 09:17:02.940 : --12-->  12084.png | 28.25dB
23-04-11 09:17:03.137 : --13--> 123074.png | 29.36dB
23-04-11 09:17:03.360 : --14--> 126007.png | 30.49dB
23-04-11 09:17:03.648 : --15--> 130026.png | 27.07dB
23-04-11 09:17:03.898 : --16--> 134035.png | 27.82dB
23-04-11 09:17:04.151 : --17-->  14037.png | 32.69dB
23-04-11 09:17:04.401 : --18--> 143090.png | 32.74dB
23-04-11 09:17:04.635 : --19--> 145086.png | 27.89dB
23-04-11 09:17:04.858 : --20--> 147091.png | 28.76dB
23-04-11 09:17:05.065 : --21--> 148026.png | 26.15dB
23-04-11 09:17:05.342 : --22--> 148089.png | 26.92dB
23-04-11 09:17:05.599 : --23--> 157055.png | 28.59dB
23-04-11 09:17:05.831 : --24--> 159008.png | 28.46dB
23-04-11 09:17:06.059 : --25--> 160068.png | 29.37dB
23-04-11 09:17:06.274 : --26-->  16077.png | 28.28dB
23-04-11 09:17:06.495 : --27--> 163085.png | 29.81dB
23-04-11 09:17:06.709 : --28--> 167062.png | 32.48dB
23-04-11 09:17:06.924 : --29--> 167083.png | 24.31dB
23-04-11 09:17:07.140 : --30--> 170057.png | 29.68dB
23-04-11 09:17:07.386 : --31--> 175032.png | 24.49dB
23-04-11 09:17:07.606 : --32--> 175043.png | 26.55dB
23-04-11 09:17:07.845 : --33--> 182053.png | 27.76dB
23-04-11 09:17:08.086 : --34--> 189080.png | 32.24dB
23-04-11 09:17:08.339 : --35-->  19021.png | 27.96dB
23-04-11 09:17:08.583 : --36--> 196073.png | 27.17dB
23-04-11 09:17:08.809 : --37--> 197017.png | 28.39dB
23-04-11 09:17:09.067 : --38--> 208001.png | 28.83dB
23-04-11 09:17:09.303 : --39--> 210088.png | 32.66dB
23-04-11 09:17:09.545 : --40-->  21077.png | 28.94dB
23-04-11 09:17:09.760 : --41--> 216081.png | 27.80dB
23-04-11 09:17:09.946 : --42--> 219090.png | 29.40dB
23-04-11 09:17:10.145 : --43--> 220075.png | 30.19dB
23-04-11 09:17:10.365 : --44--> 223061.png | 27.24dB
23-04-11 09:17:10.611 : --45--> 227092.png | 33.16dB
23-04-11 09:17:10.834 : --46--> 229036.png | 26.25dB
23-04-11 09:17:11.023 : --47--> 236037.png | 26.52dB
23-04-11 09:17:11.221 : --48-->  24077.png | 29.18dB
23-04-11 09:17:11.465 : --49--> 241004.png | 31.30dB
23-04-11 09:17:11.730 : --50--> 241048.png | 26.66dB
23-04-11 09:17:11.931 : --51--> 253027.png | 28.33dB
23-04-11 09:17:12.176 : --52--> 253055.png | 31.03dB
23-04-11 09:17:12.516 : --53--> 260058.png | 30.71dB
23-04-11 09:17:12.727 : --54--> 271035.png | 28.83dB
23-04-11 09:17:12.946 : --55--> 285079.png | 27.48dB
23-04-11 09:17:13.183 : --56--> 291000.png | 23.97dB
23-04-11 09:17:13.379 : --57--> 295087.png | 28.25dB
23-04-11 09:17:13.595 : --58--> 296007.png | 30.74dB
23-04-11 09:17:13.835 : --59--> 296059.png | 30.21dB
23-04-11 09:17:14.162 : --60--> 299086.png | 30.79dB
23-04-11 09:17:14.460 : --61--> 300091.png | 29.91dB
23-04-11 09:17:14.753 : --62--> 302008.png | 33.52dB
23-04-11 09:17:15.042 : --63--> 304034.png | 26.44dB
23-04-11 09:17:15.262 : --64--> 304074.png | 26.65dB
23-04-11 09:17:15.476 : --65--> 306005.png | 28.77dB
23-04-11 09:17:15.705 : --66-->   3096.png | 37.88dB
23-04-11 09:17:15.896 : --67-->  33039.png | 24.65dB
23-04-11 09:17:16.171 : --68--> 351093.png | 25.78dB
23-04-11 09:17:16.185 : <epoch:6666, iter:  20,000, Average PSNR : 28.85dB

23-04-11 09:18:23.792 : <epoch:6733, iter:  20,200, lr:1.000e-04> G_loss: 2.368e-02 
23-04-11 09:19:30.526 : <epoch:6799, iter:  20,400, lr:1.000e-04> G_loss: 2.638e-02 
23-04-11 09:20:37.396 : <epoch:6866, iter:  20,600, lr:1.000e-04> G_loss: 2.906e-02 
23-04-11 09:21:44.278 : <epoch:6933, iter:  20,800, lr:1.000e-04> G_loss: 2.271e-02 
23-04-11 09:22:49.468 : <epoch:6999, iter:  21,000, lr:1.000e-04> G_loss: 2.680e-02 
23-04-11 09:23:56.002 : <epoch:7066, iter:  21,200, lr:1.000e-04> G_loss: 2.952e-02 
23-04-11 09:25:02.605 : <epoch:7133, iter:  21,400, lr:1.000e-04> G_loss: 2.595e-02 
23-04-11 09:26:08.971 : <epoch:7199, iter:  21,600, lr:1.000e-04> G_loss: 2.672e-02 
23-04-11 09:27:15.931 : <epoch:7266, iter:  21,800, lr:1.000e-04> G_loss: 2.553e-02 
23-04-11 09:28:22.153 : <epoch:7333, iter:  22,000, lr:1.000e-04> G_loss: 2.557e-02 
23-04-11 09:29:27.595 : <epoch:7399, iter:  22,200, lr:1.000e-04> G_loss: 3.004e-02 
23-04-11 09:30:33.309 : <epoch:7466, iter:  22,400, lr:1.000e-04> G_loss: 2.671e-02 
23-04-11 09:31:38.603 : <epoch:7533, iter:  22,600, lr:1.000e-04> G_loss: 2.655e-02 
23-04-11 09:32:43.439 : <epoch:7599, iter:  22,800, lr:1.000e-04> G_loss: 2.876e-02 
23-04-11 09:33:47.500 : <epoch:7666, iter:  23,000, lr:1.000e-04> G_loss: 2.434e-02 
23-04-11 09:34:53.004 : <epoch:7733, iter:  23,200, lr:1.000e-04> G_loss: 2.810e-02 
23-04-11 09:35:57.458 : <epoch:7799, iter:  23,400, lr:1.000e-04> G_loss: 2.258e-02 
23-04-11 09:37:02.676 : <epoch:7866, iter:  23,600, lr:1.000e-04> G_loss: 2.387e-02 
23-04-11 09:38:06.751 : <epoch:7933, iter:  23,800, lr:1.000e-04> G_loss: 2.545e-02 
23-04-11 09:39:11.456 : <epoch:7999, iter:  24,000, lr:1.000e-04> G_loss: 2.556e-02 
23-04-11 09:40:16.659 : <epoch:8066, iter:  24,200, lr:1.000e-04> G_loss: 2.792e-02 
23-04-11 09:41:21.656 : <epoch:8133, iter:  24,400, lr:1.000e-04> G_loss: 2.595e-02 
23-04-11 09:42:25.709 : <epoch:8199, iter:  24,600, lr:1.000e-04> G_loss: 2.855e-02 
23-04-11 09:43:30.794 : <epoch:8266, iter:  24,800, lr:1.000e-04> G_loss: 2.576e-02 
23-04-11 09:44:35.082 : <epoch:8333, iter:  25,000, lr:1.000e-04> G_loss: 2.573e-02 
23-04-11 09:44:35.083 : Saving the model.
23-04-11 09:44:35.491 : ---1--> 101085.png | 25.85dB
23-04-11 09:44:35.731 : ---2--> 101087.png | 30.02dB
23-04-11 09:44:35.937 : ---3--> 102061.png | 29.83dB
23-04-11 09:44:36.120 : ---4--> 103070.png | 30.44dB
23-04-11 09:44:36.329 : ---5--> 105025.png | 27.29dB
23-04-11 09:44:36.527 : ---6--> 106024.png | 32.14dB
23-04-11 09:44:36.716 : ---7--> 108005.png | 28.54dB
23-04-11 09:44:37.002 : ---8--> 108070.png | 26.15dB
23-04-11 09:44:37.220 : ---9--> 108082.png | 28.89dB
23-04-11 09:44:37.452 : --10--> 109053.png | 29.71dB
23-04-11 09:44:37.732 : --11--> 119082.png | 28.78dB
23-04-11 09:44:37.970 : --12-->  12084.png | 28.25dB
23-04-11 09:44:38.192 : --13--> 123074.png | 29.39dB
23-04-11 09:44:38.385 : --14--> 126007.png | 30.56dB
23-04-11 09:44:38.649 : --15--> 130026.png | 27.12dB
23-04-11 09:44:38.859 : --16--> 134035.png | 27.86dB
23-04-11 09:44:39.056 : --17-->  14037.png | 32.69dB
23-04-11 09:44:39.287 : --18--> 143090.png | 32.76dB
23-04-11 09:44:39.541 : --19--> 145086.png | 28.05dB
23-04-11 09:44:39.781 : --20--> 147091.png | 28.81dB
23-04-11 09:44:40.005 : --21--> 148026.png | 26.22dB
23-04-11 09:44:40.214 : --22--> 148089.png | 26.97dB
23-04-11 09:44:40.411 : --23--> 157055.png | 28.69dB
23-04-11 09:44:40.641 : --24--> 159008.png | 28.53dB
23-04-11 09:44:40.875 : --25--> 160068.png | 29.41dB
23-04-11 09:44:41.076 : --26-->  16077.png | 28.39dB
23-04-11 09:44:41.267 : --27--> 163085.png | 29.87dB
23-04-11 09:44:41.461 : --28--> 167062.png | 32.58dB
23-04-11 09:44:41.664 : --29--> 167083.png | 24.36dB
23-04-11 09:44:41.935 : --30--> 170057.png | 29.72dB
23-04-11 09:44:42.158 : --31--> 175032.png | 24.52dB
23-04-11 09:44:42.378 : --32--> 175043.png | 26.59dB
23-04-11 09:44:42.572 : --33--> 182053.png | 27.83dB
23-04-11 09:44:42.916 : --34--> 189080.png | 32.96dB
23-04-11 09:44:43.142 : --35-->  19021.png | 28.01dB
23-04-11 09:44:43.332 : --36--> 196073.png | 27.43dB
23-04-11 09:44:43.526 : --37--> 197017.png | 28.47dB
23-04-11 09:44:43.830 : --38--> 208001.png | 28.88dB
23-04-11 09:44:44.043 : --39--> 210088.png | 32.63dB
23-04-11 09:44:44.250 : --40-->  21077.png | 29.09dB
23-04-11 09:44:44.460 : --41--> 216081.png | 27.88dB
23-04-11 09:44:44.659 : --42--> 219090.png | 29.46dB
23-04-11 09:44:44.846 : --43--> 220075.png | 30.23dB
23-04-11 09:44:45.035 : --44--> 223061.png | 27.28dB
23-04-11 09:44:45.256 : --45--> 227092.png | 33.26dB
23-04-11 09:44:45.507 : --46--> 229036.png | 26.31dB
23-04-11 09:44:46.068 : --47--> 236037.png | 26.57dB
23-04-11 09:44:46.337 : --48-->  24077.png | 29.43dB
23-04-11 09:44:46.579 : --49--> 241004.png | 31.39dB
23-04-11 09:44:46.815 : --50--> 241048.png | 26.82dB
23-04-11 09:44:47.032 : --51--> 253027.png | 28.36dB
23-04-11 09:44:47.253 : --52--> 253055.png | 31.46dB
23-04-11 09:44:48.119 : --53--> 260058.png | 30.93dB
23-04-11 09:44:48.459 : --54--> 271035.png | 28.98dB
23-04-11 09:44:48.655 : --55--> 285079.png | 27.51dB
23-04-11 09:44:48.877 : --56--> 291000.png | 24.01dB
23-04-11 09:44:49.190 : --57--> 295087.png | 28.28dB
23-04-11 09:44:49.466 : --58--> 296007.png | 30.83dB
23-04-11 09:44:49.747 : --59--> 296059.png | 30.28dB
23-04-11 09:44:50.009 : --60--> 299086.png | 30.88dB
23-04-11 09:44:50.285 : --61--> 300091.png | 29.99dB
23-04-11 09:44:50.495 : --62--> 302008.png | 33.57dB
23-04-11 09:44:50.722 : --63--> 304034.png | 26.47dB
23-04-11 09:44:50.988 : --64--> 304074.png | 26.70dB
23-04-11 09:44:51.236 : --65--> 306005.png | 28.86dB
23-04-11 09:44:51.451 : --66-->   3096.png | 37.83dB
23-04-11 09:44:51.672 : --67-->  33039.png | 24.70dB
23-04-11 09:44:51.872 : --68--> 351093.png | 25.92dB
23-04-11 09:44:51.883 : <epoch:8333, iter:  25,000, Average PSNR : 28.95dB

23-04-11 09:45:55.326 : <epoch:8399, iter:  25,200, lr:1.000e-04> G_loss: 2.476e-02 
23-04-11 09:46:59.256 : <epoch:8466, iter:  25,400, lr:1.000e-04> G_loss: 2.436e-02 
23-04-11 09:48:03.565 : <epoch:8533, iter:  25,600, lr:1.000e-04> G_loss: 2.708e-02 
23-04-11 09:49:07.281 : <epoch:8599, iter:  25,800, lr:1.000e-04> G_loss: 2.527e-02 
23-04-11 09:50:11.166 : <epoch:8666, iter:  26,000, lr:1.000e-04> G_loss: 2.749e-02 
23-04-11 09:51:15.372 : <epoch:8733, iter:  26,200, lr:1.000e-04> G_loss: 2.736e-02 
23-04-11 09:52:19.070 : <epoch:8799, iter:  26,400, lr:1.000e-04> G_loss: 2.430e-02 
23-04-11 09:53:23.449 : <epoch:8866, iter:  26,600, lr:1.000e-04> G_loss: 2.715e-02 
23-04-11 09:54:27.334 : <epoch:8933, iter:  26,800, lr:1.000e-04> G_loss: 2.565e-02 
23-04-11 09:55:30.739 : <epoch:8999, iter:  27,000, lr:1.000e-04> G_loss: 2.398e-02 
23-04-11 09:56:34.805 : <epoch:9066, iter:  27,200, lr:1.000e-04> G_loss: 2.674e-02 
23-04-11 09:57:39.037 : <epoch:9133, iter:  27,400, lr:1.000e-04> G_loss: 2.727e-02 
23-04-11 09:58:41.914 : <epoch:9199, iter:  27,600, lr:1.000e-04> G_loss: 2.602e-02 
23-04-11 09:59:45.338 : <epoch:9266, iter:  27,800, lr:1.000e-04> G_loss: 2.505e-02 
23-04-11 10:00:49.158 : <epoch:9333, iter:  28,000, lr:1.000e-04> G_loss: 2.642e-02 
23-04-11 10:01:52.596 : <epoch:9399, iter:  28,200, lr:1.000e-04> G_loss: 2.732e-02 
23-04-11 10:02:56.895 : <epoch:9466, iter:  28,400, lr:1.000e-04> G_loss: 2.375e-02 
23-04-11 10:04:00.827 : <epoch:9533, iter:  28,600, lr:1.000e-04> G_loss: 2.685e-02 
23-04-11 10:05:04.134 : <epoch:9599, iter:  28,800, lr:1.000e-04> G_loss: 2.676e-02 
23-04-11 10:06:08.246 : <epoch:9666, iter:  29,000, lr:1.000e-04> G_loss: 2.566e-02 
23-04-11 10:07:12.442 : <epoch:9733, iter:  29,200, lr:1.000e-04> G_loss: 2.703e-02 
23-04-11 10:08:15.839 : <epoch:9799, iter:  29,400, lr:1.000e-04> G_loss: 2.909e-02 
23-04-11 10:09:19.954 : <epoch:9866, iter:  29,600, lr:1.000e-04> G_loss: 2.497e-02 
23-04-11 10:10:23.767 : <epoch:9933, iter:  29,800, lr:1.000e-04> G_loss: 2.594e-02 
23-04-11 10:11:27.290 : <epoch:9999, iter:  30,000, lr:1.000e-04> G_loss: 2.774e-02 
23-04-11 10:11:27.290 : Saving the model.
23-04-11 10:11:27.639 : ---1--> 101085.png | 25.72dB
23-04-11 10:11:27.814 : ---2--> 101087.png | 27.58dB
23-04-11 10:11:28.006 : ---3--> 102061.png | 29.51dB
23-04-11 10:11:28.254 : ---4--> 103070.png | 30.38dB
23-04-11 10:11:28.439 : ---5--> 105025.png | 26.00dB
23-04-11 10:11:28.629 : ---6--> 106024.png | 30.71dB
23-04-11 10:11:28.816 : ---7--> 108005.png | 28.45dB
23-04-11 10:11:28.994 : ---8--> 108070.png | 26.04dB
23-04-11 10:11:29.212 : ---9--> 108082.png | 28.76dB
23-04-11 10:11:29.394 : --10--> 109053.png | 29.65dB
23-04-11 10:11:29.596 : --11--> 119082.png | 28.74dB
23-04-11 10:11:29.804 : --12-->  12084.png | 28.25dB
23-04-11 10:11:29.986 : --13--> 123074.png | 29.33dB
23-04-11 10:11:30.164 : --14--> 126007.png | 30.34dB
23-04-11 10:11:30.394 : --15--> 130026.png | 26.94dB
23-04-11 10:11:30.597 : --16--> 134035.png | 27.84dB
23-04-11 10:11:30.799 : --17-->  14037.png | 32.68dB
23-04-11 10:11:30.975 : --18--> 143090.png | 32.73dB
23-04-11 10:11:31.156 : --19--> 145086.png | 27.87dB
23-04-11 10:11:31.360 : --20--> 147091.png | 28.75dB
23-04-11 10:11:31.550 : --21--> 148026.png | 26.06dB
23-04-11 10:11:31.741 : --22--> 148089.png | 26.98dB
23-04-11 10:11:31.972 : --23--> 157055.png | 28.28dB
23-04-11 10:11:32.212 : --24--> 159008.png | 28.48dB
23-04-11 10:11:32.433 : --25--> 160068.png | 29.35dB
23-04-11 10:11:32.625 : --26-->  16077.png | 28.14dB
23-04-11 10:11:32.838 : --27--> 163085.png | 29.85dB
23-04-11 10:11:33.028 : --28--> 167062.png | 28.70dB
23-04-11 10:11:33.261 : --29--> 167083.png | 24.17dB
23-04-11 10:11:33.472 : --30--> 170057.png | 29.67dB
23-04-11 10:11:33.682 : --31--> 175032.png | 24.54dB
23-04-11 10:11:33.949 : --32--> 175043.png | 26.58dB
23-04-11 10:11:34.168 : --33--> 182053.png | 27.68dB
23-04-11 10:11:34.364 : --34--> 189080.png | 32.36dB
23-04-11 10:11:34.578 : --35-->  19021.png | 27.92dB
23-04-11 10:11:34.784 : --36--> 196073.png | 27.47dB
23-04-11 10:11:35.025 : --37--> 197017.png | 28.45dB
23-04-11 10:11:35.281 : --38--> 208001.png | 28.72dB
23-04-11 10:11:35.478 : --39--> 210088.png | 32.55dB
23-04-11 10:11:35.732 : --40-->  21077.png | 28.65dB
23-04-11 10:11:35.958 : --41--> 216081.png | 27.79dB
23-04-11 10:11:36.188 : --42--> 219090.png | 29.42dB
23-04-11 10:11:36.402 : --43--> 220075.png | 30.02dB
23-04-11 10:11:36.670 : --44--> 223061.png | 27.34dB
23-04-11 10:11:36.899 : --45--> 227092.png | 33.25dB
23-04-11 10:11:37.129 : --46--> 229036.png | 26.07dB
23-04-11 10:11:37.344 : --47--> 236037.png | 26.54dB
23-04-11 10:11:37.574 : --48-->  24077.png | 27.98dB
23-04-11 10:11:37.920 : --49--> 241004.png | 29.45dB
23-04-11 10:11:38.151 : --50--> 241048.png | 26.26dB
23-04-11 10:11:38.401 : --51--> 253027.png | 28.06dB
23-04-11 10:11:38.616 : --52--> 253055.png | 29.36dB
23-04-11 10:11:38.940 : --53--> 260058.png | 30.93dB
23-04-11 10:11:39.156 : --54--> 271035.png | 28.79dB
23-04-11 10:11:39.621 : --55--> 285079.png | 27.38dB
23-04-11 10:11:39.865 : --56--> 291000.png | 23.88dB
23-04-11 10:11:40.091 : --57--> 295087.png | 28.28dB
23-04-11 10:11:40.329 : --58--> 296007.png | 30.83dB
23-04-11 10:11:40.565 : --59--> 296059.png | 30.29dB
23-04-11 10:11:40.777 : --60--> 299086.png | 30.91dB
23-04-11 10:11:41.124 : --61--> 300091.png | 29.84dB
23-04-11 10:11:41.358 : --62--> 302008.png | 33.41dB
23-04-11 10:11:41.571 : --63--> 304034.png | 26.46dB
23-04-11 10:11:41.773 : --64--> 304074.png | 26.68dB
23-04-11 10:11:41.989 : --65--> 306005.png | 28.72dB
23-04-11 10:11:42.252 : --66-->   3096.png | 37.55dB
23-04-11 10:11:42.468 : --67-->  33039.png | 24.62dB
23-04-11 10:11:42.689 : --68--> 351093.png | 25.08dB
23-04-11 10:11:42.702 : <epoch:9999, iter:  30,000, Average PSNR : 28.62dB

23-04-11 10:11:42.749 : Saving the final model.
23-04-11 10:11:42.768 : End of training.
23-04-14 15:31:56.853 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 1
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 1
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 1
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-14 15:31:57.176 : Random seed: 2918
23-04-14 15:31:58.762 : Number of train images: 200, iters: 4
23-04-14 15:33:59.741 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 1
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 1
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 1
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-14 15:33:59.742 : Random seed: 415
23-04-14 15:33:59.750 : Number of train images: 200, iters: 4
23-04-15 13:25:45.284 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 1
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 1
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 1
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-15 13:25:46.060 : Random seed: 107
23-04-15 13:25:47.970 : Number of train images: 200, iters: 4
23-04-15 13:26:29.182 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 1
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 1
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 1
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-15 13:26:29.183 : Random seed: 2146
23-04-15 13:26:29.190 : Number of train images: 200, iters: 4
23-04-15 13:26:29.667 : 
Networks name: DnCNN
Params number: 557074
Net structure:
DnCNN(
  (model): Sequential(
    (0): PHConv2d(in_features=1, out_features=64, bias=True)
    (1): ReLU(inplace=True)
    (2): PHConv2d(in_features=64, out_features=64, bias=True)
    (3): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): PHConv2d(in_features=64, out_features=64, bias=True)
    (6): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): PHConv2d(in_features=64, out_features=64, bias=True)
    (9): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): PHConv2d(in_features=64, out_features=64, bias=True)
    (12): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): PHConv2d(in_features=64, out_features=64, bias=True)
    (15): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): PHConv2d(in_features=64, out_features=64, bias=True)
    (18): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): PHConv2d(in_features=64, out_features=64, bias=True)
    (21): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): PHConv2d(in_features=64, out_features=64, bias=True)
    (24): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): PHConv2d(in_features=64, out_features=64, bias=True)
    (27): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): PHConv2d(in_features=64, out_features=64, bias=True)
    (30): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): PHConv2d(in_features=64, out_features=64, bias=True)
    (33): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): PHConv2d(in_features=64, out_features=64, bias=True)
    (36): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): PHConv2d(in_features=64, out_features=64, bias=True)
    (39): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): PHConv2d(in_features=64, out_features=64, bias=True)
    (42): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): PHConv2d(in_features=64, out_features=64, bias=True)
    (45): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): PHConv2d(in_features=64, out_features=1, bias=True)
  )
)

23-04-15 13:26:29.784 : 
 |  mean  |  min   |  max   |  std   || shape               
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.0.bias
 | -0.449 | -0.449 | -0.449 |    nan | torch.Size([1, 1, 1]) || model.0.A
 |  0.003 | -0.101 |  0.101 |  0.058 | torch.Size([1, 64, 1, 3, 3]) || model.0.F
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.2.bias
 |  1.233 |  1.233 |  1.233 |    nan | torch.Size([1, 1, 1]) || model.2.A
 |  0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.2.F
 |  0.478 |  0.107 |  0.963 |  0.254 | torch.Size([64]) || model.3.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.3.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.5.bias
 | -0.069 | -0.069 | -0.069 |    nan | torch.Size([1, 1, 1]) || model.5.A
 |  0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.5.F
 |  0.484 |  0.102 |  0.978 |  0.263 | torch.Size([64]) || model.6.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.6.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.8.bias
 |  1.242 |  1.242 |  1.242 |    nan | torch.Size([1, 1, 1]) || model.8.A
 |  0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.8.F
 |  0.566 |  0.119 |  0.983 |  0.236 | torch.Size([64]) || model.9.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.9.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.11.bias
 | -0.730 | -0.730 | -0.730 |    nan | torch.Size([1, 1, 1]) || model.11.A
 |  0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.11.F
 |  0.489 |  0.104 |  0.993 |  0.246 | torch.Size([64]) || model.12.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.12.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.14.bias
 |  1.676 |  1.676 |  1.676 |    nan | torch.Size([1, 1, 1]) || model.14.A
 |  0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.14.F
 |  0.579 |  0.107 |  0.952 |  0.231 | torch.Size([64]) || model.15.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.15.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.17.bias
 | -1.193 | -1.193 | -1.193 |    nan | torch.Size([1, 1, 1]) || model.17.A
 |  0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.17.F
 |  0.570 |  0.121 |  0.989 |  0.245 | torch.Size([64]) || model.18.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.18.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.20.bias
 | -1.216 | -1.216 | -1.216 |    nan | torch.Size([1, 1, 1]) || model.20.A
 |  0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.20.F
 |  0.532 |  0.122 |  0.996 |  0.250 | torch.Size([64]) || model.21.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.21.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.23.bias
 |  0.436 |  0.436 |  0.436 |    nan | torch.Size([1, 1, 1]) || model.23.A
 | -0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.23.F
 |  0.582 |  0.102 |  0.991 |  0.276 | torch.Size([64]) || model.24.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.24.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.26.bias
 | -0.124 | -0.124 | -0.124 |    nan | torch.Size([1, 1, 1]) || model.26.A
 |  0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.26.F
 |  0.590 |  0.105 |  0.992 |  0.252 | torch.Size([64]) || model.27.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.27.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.29.bias
 |  0.401 |  0.401 |  0.401 |    nan | torch.Size([1, 1, 1]) || model.29.A
 |  0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.29.F
 |  0.539 |  0.104 |  0.996 |  0.260 | torch.Size([64]) || model.30.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.30.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.32.bias
 | -0.035 | -0.035 | -0.035 |    nan | torch.Size([1, 1, 1]) || model.32.A
 |  0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.32.F
 |  0.574 |  0.110 |  0.999 |  0.270 | torch.Size([64]) || model.33.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.33.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.35.bias
 | -1.378 | -1.378 | -1.378 |    nan | torch.Size([1, 1, 1]) || model.35.A
 | -0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.35.F
 |  0.515 |  0.102 |  0.972 |  0.269 | torch.Size([64]) || model.36.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.36.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.38.bias
 |  0.471 |  0.471 |  0.471 |    nan | torch.Size([1, 1, 1]) || model.38.A
 |  0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.38.F
 |  0.553 |  0.150 |  0.996 |  0.236 | torch.Size([64]) || model.39.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.39.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.41.bias
 | -1.261 | -1.261 | -1.261 |    nan | torch.Size([1, 1, 1]) || model.41.A
 | -0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.41.F
 |  0.570 |  0.108 |  0.991 |  0.266 | torch.Size([64]) || model.42.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.42.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.44.bias
 | -0.758 | -0.758 | -0.758 |    nan | torch.Size([1, 1, 1]) || model.44.A
 |  0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.44.F
 |  0.532 |  0.105 |  0.973 |  0.241 | torch.Size([64]) || model.45.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.45.running_var
 |  0.000 |  0.000 |  0.000 |    nan | torch.Size([1]) || model.47.bias
 |  1.168 |  1.168 |  1.168 |    nan | torch.Size([1, 1, 1]) || model.47.A
 | -0.000 | -0.072 |  0.072 |  0.041 | torch.Size([1, 1, 64, 3, 3]) || model.47.F

23-04-15 13:28:01.772 : <epoch: 66, iter:     200, lr:1.000e-04> G_loss: 3.955e-02 
23-04-15 13:29:07.041 : <epoch:133, iter:     400, lr:1.000e-04> G_loss: 3.159e-02 
23-04-15 13:30:11.942 : <epoch:199, iter:     600, lr:1.000e-04> G_loss: 3.103e-02 
23-04-15 13:31:17.595 : <epoch:266, iter:     800, lr:1.000e-04> G_loss: 3.149e-02 
23-04-15 13:32:22.538 : <epoch:333, iter:   1,000, lr:1.000e-04> G_loss: 3.144e-02 
23-04-15 13:33:27.445 : <epoch:399, iter:   1,200, lr:1.000e-04> G_loss: 3.100e-02 
23-04-15 13:34:32.810 : <epoch:466, iter:   1,400, lr:1.000e-04> G_loss: 3.209e-02 
23-04-15 13:35:38.315 : <epoch:533, iter:   1,600, lr:1.000e-04> G_loss: 2.795e-02 
23-04-15 13:36:42.477 : <epoch:599, iter:   1,800, lr:1.000e-04> G_loss: 2.772e-02 
23-04-15 13:37:48.284 : <epoch:666, iter:   2,000, lr:1.000e-04> G_loss: 2.912e-02 
23-04-15 13:38:53.785 : <epoch:733, iter:   2,200, lr:1.000e-04> G_loss: 2.726e-02 
23-04-15 13:39:58.796 : <epoch:799, iter:   2,400, lr:1.000e-04> G_loss: 2.681e-02 
23-04-15 13:41:03.471 : <epoch:866, iter:   2,600, lr:1.000e-04> G_loss: 3.061e-02 
23-04-15 13:42:08.847 : <epoch:933, iter:   2,800, lr:1.000e-04> G_loss: 2.636e-02 
23-04-15 13:43:13.506 : <epoch:999, iter:   3,000, lr:1.000e-04> G_loss: 2.708e-02 
23-04-15 13:43:13.548 : Saving the final model.
23-04-15 13:43:13.569 : End of training.
23-04-16 20:44:58.827 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 1
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 1
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 1
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-16 20:44:59.024 : Random seed: 1566
23-04-16 20:45:00.247 : Number of train images: 200, iters: 4
23-04-16 20:46:26.906 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 1
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 1
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 1
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 3
    out_nc: 3
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-16 20:46:26.906 : Random seed: 7523
23-04-16 20:46:26.912 : Number of train images: 200, iters: 4
23-04-16 20:47:46.088 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 1
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 1
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 1
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 3
    out_nc: 3
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-16 20:47:46.849 : Random seed: 563
23-04-16 20:47:48.611 : Number of train images: 200, iters: 4
23-04-16 20:47:58.194 : 
Networks name: DnCNN
Params number: 183145
Net structure:
DnCNN(
  (model): Sequential(
    (0): PHConv2d(in_features=3, out_features=64, bias=True)
    (1): ReLU(inplace=True)
    (2): PHConv2d(in_features=64, out_features=64, bias=True)
    (3): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): PHConv2d(in_features=64, out_features=64, bias=True)
    (6): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): PHConv2d(in_features=64, out_features=64, bias=True)
    (9): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): PHConv2d(in_features=64, out_features=64, bias=True)
    (12): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): PHConv2d(in_features=64, out_features=64, bias=True)
    (15): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): PHConv2d(in_features=64, out_features=64, bias=True)
    (18): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): PHConv2d(in_features=64, out_features=64, bias=True)
    (21): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): PHConv2d(in_features=64, out_features=64, bias=True)
    (24): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): PHConv2d(in_features=64, out_features=64, bias=True)
    (27): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): PHConv2d(in_features=64, out_features=64, bias=True)
    (30): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): PHConv2d(in_features=64, out_features=64, bias=True)
    (33): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): PHConv2d(in_features=64, out_features=64, bias=True)
    (36): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): PHConv2d(in_features=64, out_features=64, bias=True)
    (39): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): PHConv2d(in_features=64, out_features=64, bias=True)
    (42): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): PHConv2d(in_features=64, out_features=64, bias=True)
    (45): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): PHConv2d(in_features=64, out_features=3, bias=True)
  )
)

23-04-16 20:47:58.320 : 
 |  mean  |  min   |  max   |  std   || shape               
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.0.bias
 | -0.007 | -0.572 |  0.567 |  0.324 | torch.Size([3, 3, 3]) || model.0.A
 | -0.000 | -0.166 |  0.165 |  0.094 | torch.Size([3, 21, 1, 3, 3]) || model.0.F
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.2.bias
 | -0.105 | -0.575 |  0.546 |  0.327 | torch.Size([3, 3, 3]) || model.2.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.2.F
 |  0.510 |  0.102 |  0.999 |  0.262 | torch.Size([64]) || model.3.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.3.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.5.bias
 | -0.003 | -0.514 |  0.576 |  0.355 | torch.Size([3, 3, 3]) || model.5.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.5.F
 |  0.554 |  0.104 |  0.967 |  0.245 | torch.Size([64]) || model.6.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.6.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.8.bias
 |  0.047 | -0.577 |  0.575 |  0.371 | torch.Size([3, 3, 3]) || model.8.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.8.F
 |  0.522 |  0.107 |  0.998 |  0.272 | torch.Size([64]) || model.9.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.9.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.11.bias
 | -0.081 | -0.536 |  0.492 |  0.316 | torch.Size([3, 3, 3]) || model.11.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.11.F
 |  0.566 |  0.128 |  0.982 |  0.267 | torch.Size([64]) || model.12.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.12.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.14.bias
 | -0.021 | -0.538 |  0.577 |  0.348 | torch.Size([3, 3, 3]) || model.14.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.14.F
 |  0.559 |  0.108 |  0.945 |  0.242 | torch.Size([64]) || model.15.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.15.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.17.bias
 | -0.049 | -0.522 |  0.576 |  0.312 | torch.Size([3, 3, 3]) || model.17.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.17.F
 |  0.542 |  0.102 |  1.000 |  0.272 | torch.Size([64]) || model.18.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.18.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.20.bias
 |  0.073 | -0.546 |  0.522 |  0.312 | torch.Size([3, 3, 3]) || model.20.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.20.F
 |  0.553 |  0.109 |  0.993 |  0.264 | torch.Size([64]) || model.21.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.21.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.23.bias
 |  0.025 | -0.549 |  0.503 |  0.333 | torch.Size([3, 3, 3]) || model.23.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.23.F
 |  0.540 |  0.111 |  0.977 |  0.234 | torch.Size([64]) || model.24.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.24.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.26.bias
 |  0.121 | -0.538 |  0.565 |  0.346 | torch.Size([3, 3, 3]) || model.26.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.26.F
 |  0.569 |  0.127 |  0.998 |  0.268 | torch.Size([64]) || model.27.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.27.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.29.bias
 |  0.012 | -0.575 |  0.567 |  0.362 | torch.Size([3, 3, 3]) || model.29.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.29.F
 |  0.517 |  0.106 |  0.989 |  0.262 | torch.Size([64]) || model.30.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.30.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.32.bias
 | -0.028 | -0.560 |  0.540 |  0.352 | torch.Size([3, 3, 3]) || model.32.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.32.F
 |  0.556 |  0.105 |  0.996 |  0.299 | torch.Size([64]) || model.33.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.33.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.35.bias
 | -0.006 | -0.528 |  0.567 |  0.375 | torch.Size([3, 3, 3]) || model.35.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.35.F
 |  0.494 |  0.101 |  0.988 |  0.244 | torch.Size([64]) || model.36.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.36.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.38.bias
 |  0.063 | -0.513 |  0.572 |  0.371 | torch.Size([3, 3, 3]) || model.38.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.38.F
 |  0.524 |  0.139 |  0.985 |  0.227 | torch.Size([64]) || model.39.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.39.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.41.bias
 | -0.037 | -0.504 |  0.521 |  0.315 | torch.Size([3, 3, 3]) || model.41.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.41.F
 |  0.564 |  0.101 |  0.994 |  0.270 | torch.Size([64]) || model.42.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.42.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.44.bias
 | -0.011 | -0.575 |  0.551 |  0.368 | torch.Size([3, 3, 3]) || model.44.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.44.F
 |  0.599 |  0.101 |  0.961 |  0.259 | torch.Size([64]) || model.45.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.45.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([3]) || model.47.bias
 | -0.046 | -0.555 |  0.571 |  0.349 | torch.Size([3, 3, 3]) || model.47.A
 |  0.003 | -0.089 |  0.089 |  0.052 | torch.Size([3, 1, 21, 3, 3]) || model.47.F

23-04-16 20:54:21.992 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 1
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 1
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 1
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 1
    out_nc: 1
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-16 20:54:21.992 : Random seed: 2163
23-04-16 20:54:22.002 : Number of train images: 200, iters: 4
23-04-16 20:54:22.344 : 
Networks name: DnCNN
Params number: 557074
Net structure:
DnCNN(
  (model): Sequential(
    (0): PHConv2d(in_features=1, out_features=64, bias=True)
    (1): ReLU(inplace=True)
    (2): PHConv2d(in_features=64, out_features=64, bias=True)
    (3): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): PHConv2d(in_features=64, out_features=64, bias=True)
    (6): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): PHConv2d(in_features=64, out_features=64, bias=True)
    (9): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): PHConv2d(in_features=64, out_features=64, bias=True)
    (12): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): PHConv2d(in_features=64, out_features=64, bias=True)
    (15): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): PHConv2d(in_features=64, out_features=64, bias=True)
    (18): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): PHConv2d(in_features=64, out_features=64, bias=True)
    (21): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): PHConv2d(in_features=64, out_features=64, bias=True)
    (24): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): PHConv2d(in_features=64, out_features=64, bias=True)
    (27): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): PHConv2d(in_features=64, out_features=64, bias=True)
    (30): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): PHConv2d(in_features=64, out_features=64, bias=True)
    (33): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): PHConv2d(in_features=64, out_features=64, bias=True)
    (36): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): PHConv2d(in_features=64, out_features=64, bias=True)
    (39): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): PHConv2d(in_features=64, out_features=64, bias=True)
    (42): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): PHConv2d(in_features=64, out_features=64, bias=True)
    (45): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): PHConv2d(in_features=64, out_features=1, bias=True)
  )
)

23-04-16 20:54:22.390 : 
 |  mean  |  min   |  max   |  std   || shape               
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.0.bias
 |  1.633 |  1.633 |  1.633 |    nan | torch.Size([1, 1, 1]) || model.0.A
 |  0.000 | -0.101 |  0.101 |  0.059 | torch.Size([1, 64, 1, 3, 3]) || model.0.F
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.2.bias
 |  1.292 |  1.292 |  1.292 |    nan | torch.Size([1, 1, 1]) || model.2.A
 | -0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.2.F
 |  0.525 |  0.104 |  0.993 |  0.252 | torch.Size([64]) || model.3.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.3.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.5.bias
 | -0.403 | -0.403 | -0.403 |    nan | torch.Size([1, 1, 1]) || model.5.A
 |  0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.5.F
 |  0.553 |  0.108 |  0.960 |  0.258 | torch.Size([64]) || model.6.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.6.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.8.bias
 |  1.706 |  1.706 |  1.706 |    nan | torch.Size([1, 1, 1]) || model.8.A
 | -0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.8.F
 |  0.530 |  0.120 |  0.968 |  0.237 | torch.Size([64]) || model.9.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.9.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.11.bias
 | -0.678 | -0.678 | -0.678 |    nan | torch.Size([1, 1, 1]) || model.11.A
 | -0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.11.F
 |  0.520 |  0.104 |  0.968 |  0.262 | torch.Size([64]) || model.12.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.12.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.14.bias
 |  1.398 |  1.398 |  1.398 |    nan | torch.Size([1, 1, 1]) || model.14.A
 | -0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.14.F
 |  0.508 |  0.102 |  0.981 |  0.247 | torch.Size([64]) || model.15.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.15.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.17.bias
 |  0.242 |  0.242 |  0.242 |    nan | torch.Size([1, 1, 1]) || model.17.A
 | -0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.17.F
 |  0.572 |  0.100 |  0.982 |  0.241 | torch.Size([64]) || model.18.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.18.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.20.bias
 | -1.621 | -1.621 | -1.621 |    nan | torch.Size([1, 1, 1]) || model.20.A
 |  0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.20.F
 |  0.484 |  0.100 |  0.996 |  0.262 | torch.Size([64]) || model.21.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.21.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.23.bias
 |  0.947 |  0.947 |  0.947 |    nan | torch.Size([1, 1, 1]) || model.23.A
 | -0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.23.F
 |  0.485 |  0.103 |  0.998 |  0.262 | torch.Size([64]) || model.24.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.24.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.26.bias
 |  0.919 |  0.919 |  0.919 |    nan | torch.Size([1, 1, 1]) || model.26.A
 |  0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.26.F
 |  0.566 |  0.106 |  0.998 |  0.242 | torch.Size([64]) || model.27.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.27.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.29.bias
 | -1.421 | -1.421 | -1.421 |    nan | torch.Size([1, 1, 1]) || model.29.A
 |  0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.29.F
 |  0.576 |  0.100 |  0.977 |  0.264 | torch.Size([64]) || model.30.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.30.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.32.bias
 | -1.723 | -1.723 | -1.723 |    nan | torch.Size([1, 1, 1]) || model.32.A
 | -0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.32.F
 |  0.552 |  0.121 |  0.999 |  0.237 | torch.Size([64]) || model.33.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.33.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.35.bias
 |  0.353 |  0.353 |  0.353 |    nan | torch.Size([1, 1, 1]) || model.35.A
 | -0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.35.F
 |  0.567 |  0.118 |  0.987 |  0.242 | torch.Size([64]) || model.36.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.36.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.38.bias
 |  1.377 |  1.377 |  1.377 |    nan | torch.Size([1, 1, 1]) || model.38.A
 |  0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.38.F
 |  0.473 |  0.105 |  0.982 |  0.269 | torch.Size([64]) || model.39.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.39.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.41.bias
 |  0.464 |  0.464 |  0.464 |    nan | torch.Size([1, 1, 1]) || model.41.A
 | -0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.41.F
 |  0.555 |  0.100 |  0.999 |  0.260 | torch.Size([64]) || model.42.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.42.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.44.bias
 |  0.212 |  0.212 |  0.212 |    nan | torch.Size([1, 1, 1]) || model.44.A
 | -0.000 | -0.013 |  0.013 |  0.007 | torch.Size([1, 64, 64, 3, 3]) || model.44.F
 |  0.625 |  0.106 |  0.983 |  0.257 | torch.Size([64]) || model.45.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.45.running_var
 |  0.000 |  0.000 |  0.000 |    nan | torch.Size([1]) || model.47.bias
 | -1.289 | -1.289 | -1.289 |    nan | torch.Size([1, 1, 1]) || model.47.A
 | -0.001 | -0.072 |  0.072 |  0.042 | torch.Size([1, 1, 64, 3, 3]) || model.47.F

23-04-17 09:24:19.619 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 3
    out_nc: 3
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-17 09:24:20.160 : Random seed: 7781
23-04-17 09:24:21.913 : Number of train images: 200, iters: 4
23-04-17 09:24:26.492 : 
Networks name: DnCNN
Params number: 183145
Net structure:
DnCNN(
  (model): Sequential(
    (0): PHConv2d(in_features=3, out_features=64, bias=True)
    (1): ReLU(inplace=True)
    (2): PHConv2d(in_features=64, out_features=64, bias=True)
    (3): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): PHConv2d(in_features=64, out_features=64, bias=True)
    (6): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): PHConv2d(in_features=64, out_features=64, bias=True)
    (9): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): PHConv2d(in_features=64, out_features=64, bias=True)
    (12): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): PHConv2d(in_features=64, out_features=64, bias=True)
    (15): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): PHConv2d(in_features=64, out_features=64, bias=True)
    (18): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): PHConv2d(in_features=64, out_features=64, bias=True)
    (21): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): PHConv2d(in_features=64, out_features=64, bias=True)
    (24): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): PHConv2d(in_features=64, out_features=64, bias=True)
    (27): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): PHConv2d(in_features=64, out_features=64, bias=True)
    (30): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): PHConv2d(in_features=64, out_features=64, bias=True)
    (33): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): PHConv2d(in_features=64, out_features=64, bias=True)
    (36): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): PHConv2d(in_features=64, out_features=64, bias=True)
    (39): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): PHConv2d(in_features=64, out_features=64, bias=True)
    (42): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): PHConv2d(in_features=64, out_features=64, bias=True)
    (45): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): PHConv2d(in_features=64, out_features=3, bias=True)
  )
)

23-04-17 09:24:26.614 : 
 |  mean  |  min   |  max   |  std   || shape               
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.0.bias
 | -0.016 | -0.521 |  0.535 |  0.315 | torch.Size([3, 3, 3]) || model.0.A
 | -0.000 | -0.166 |  0.166 |  0.097 | torch.Size([3, 21, 1, 3, 3]) || model.0.F
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.2.bias
 | -0.005 | -0.567 |  0.564 |  0.359 | torch.Size([3, 3, 3]) || model.2.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.2.F
 |  0.557 |  0.106 |  0.999 |  0.295 | torch.Size([64]) || model.3.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.3.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.5.bias
 |  0.020 | -0.576 |  0.553 |  0.329 | torch.Size([3, 3, 3]) || model.5.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.5.F
 |  0.578 |  0.104 |  0.976 |  0.275 | torch.Size([64]) || model.6.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.6.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.8.bias
 |  0.048 | -0.447 |  0.573 |  0.302 | torch.Size([3, 3, 3]) || model.8.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.8.F
 |  0.469 |  0.105 |  0.991 |  0.238 | torch.Size([64]) || model.9.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.9.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.11.bias
 | -0.056 | -0.552 |  0.480 |  0.280 | torch.Size([3, 3, 3]) || model.11.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.11.F
 |  0.488 |  0.117 |  0.998 |  0.263 | torch.Size([64]) || model.12.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.12.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.14.bias
 |  0.081 | -0.543 |  0.574 |  0.397 | torch.Size([3, 3, 3]) || model.14.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.14.F
 |  0.530 |  0.100 |  0.999 |  0.264 | torch.Size([64]) || model.15.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.15.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.17.bias
 | -0.020 | -0.526 |  0.423 |  0.313 | torch.Size([3, 3, 3]) || model.17.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.17.F
 |  0.607 |  0.132 |  0.999 |  0.270 | torch.Size([64]) || model.18.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.18.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.20.bias
 |  0.057 | -0.547 |  0.521 |  0.334 | torch.Size([3, 3, 3]) || model.20.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.20.F
 |  0.535 |  0.118 |  0.990 |  0.257 | torch.Size([64]) || model.21.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.21.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.23.bias
 | -0.118 | -0.574 |  0.564 |  0.353 | torch.Size([3, 3, 3]) || model.23.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.23.F
 |  0.558 |  0.114 |  0.986 |  0.267 | torch.Size([64]) || model.24.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.24.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.26.bias
 | -0.019 | -0.509 |  0.526 |  0.339 | torch.Size([3, 3, 3]) || model.26.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.26.F
 |  0.599 |  0.134 |  0.999 |  0.257 | torch.Size([64]) || model.27.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.27.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.29.bias
 | -0.146 | -0.561 |  0.577 |  0.320 | torch.Size([3, 3, 3]) || model.29.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.29.F
 |  0.549 |  0.103 |  0.977 |  0.237 | torch.Size([64]) || model.30.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.30.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.32.bias
 | -0.009 | -0.551 |  0.566 |  0.324 | torch.Size([3, 3, 3]) || model.32.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.32.F
 |  0.597 |  0.132 |  0.997 |  0.268 | torch.Size([64]) || model.33.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.33.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.35.bias
 |  0.143 | -0.576 |  0.572 |  0.343 | torch.Size([3, 3, 3]) || model.35.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.35.F
 |  0.498 |  0.115 |  0.989 |  0.260 | torch.Size([64]) || model.36.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.36.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.38.bias
 |  0.011 | -0.475 |  0.551 |  0.329 | torch.Size([3, 3, 3]) || model.38.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.38.F
 |  0.572 |  0.128 |  0.965 |  0.261 | torch.Size([64]) || model.39.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.39.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.41.bias
 | -0.018 | -0.564 |  0.432 |  0.252 | torch.Size([3, 3, 3]) || model.41.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.41.F
 |  0.496 |  0.117 |  0.986 |  0.263 | torch.Size([64]) || model.42.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.42.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.44.bias
 | -0.085 | -0.535 |  0.539 |  0.359 | torch.Size([3, 3, 3]) || model.44.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.44.F
 |  0.537 |  0.101 |  0.997 |  0.241 | torch.Size([64]) || model.45.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.45.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([3]) || model.47.bias
 |  0.067 | -0.561 |  0.573 |  0.360 | torch.Size([3, 3, 3]) || model.47.A
 |  0.000 | -0.089 |  0.089 |  0.051 | torch.Size([3, 1, 21, 3, 3]) || model.47.F

23-04-17 09:29:35.308 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 3
    out_nc: 3
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-17 09:29:35.308 : Random seed: 4087
23-04-17 09:29:35.316 : Number of train images: 200, iters: 4
23-04-17 09:29:35.577 : 
Networks name: DnCNN
Params number: 183145
Net structure:
DnCNN(
  (model): Sequential(
    (0): PHConv2d(in_features=3, out_features=64, bias=True)
    (1): ReLU(inplace=True)
    (2): PHConv2d(in_features=64, out_features=64, bias=True)
    (3): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): PHConv2d(in_features=64, out_features=64, bias=True)
    (6): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): PHConv2d(in_features=64, out_features=64, bias=True)
    (9): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): PHConv2d(in_features=64, out_features=64, bias=True)
    (12): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): PHConv2d(in_features=64, out_features=64, bias=True)
    (15): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): PHConv2d(in_features=64, out_features=64, bias=True)
    (18): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): PHConv2d(in_features=64, out_features=64, bias=True)
    (21): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): PHConv2d(in_features=64, out_features=64, bias=True)
    (24): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): PHConv2d(in_features=64, out_features=64, bias=True)
    (27): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): PHConv2d(in_features=64, out_features=64, bias=True)
    (30): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): PHConv2d(in_features=64, out_features=64, bias=True)
    (33): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): PHConv2d(in_features=64, out_features=64, bias=True)
    (36): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): PHConv2d(in_features=64, out_features=64, bias=True)
    (39): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): PHConv2d(in_features=64, out_features=64, bias=True)
    (42): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): PHConv2d(in_features=64, out_features=64, bias=True)
    (45): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): PHConv2d(in_features=64, out_features=3, bias=True)
  )
)

23-04-17 09:29:35.616 : 
 |  mean  |  min   |  max   |  std   || shape               
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.0.bias
 |  0.062 | -0.482 |  0.574 |  0.335 | torch.Size([3, 3, 3]) || model.0.A
 | -0.004 | -0.166 |  0.166 |  0.097 | torch.Size([3, 21, 1, 3, 3]) || model.0.F
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.2.bias
 |  0.061 | -0.574 |  0.551 |  0.337 | torch.Size([3, 3, 3]) || model.2.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.2.F
 |  0.529 |  0.114 |  0.999 |  0.262 | torch.Size([64]) || model.3.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.3.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.5.bias
 | -0.032 | -0.575 |  0.548 |  0.331 | torch.Size([3, 3, 3]) || model.5.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.5.F
 |  0.591 |  0.113 |  0.991 |  0.272 | torch.Size([64]) || model.6.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.6.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.8.bias
 |  0.083 | -0.575 |  0.560 |  0.338 | torch.Size([3, 3, 3]) || model.8.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.8.F
 |  0.561 |  0.110 |  0.993 |  0.252 | torch.Size([64]) || model.9.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.9.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.11.bias
 |  0.034 | -0.540 |  0.577 |  0.362 | torch.Size([3, 3, 3]) || model.11.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.11.F
 |  0.572 |  0.116 |  0.968 |  0.217 | torch.Size([64]) || model.12.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.12.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.14.bias
 |  0.057 | -0.516 |  0.574 |  0.372 | torch.Size([3, 3, 3]) || model.14.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.14.F
 |  0.549 |  0.119 |  0.996 |  0.244 | torch.Size([64]) || model.15.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.15.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.17.bias
 | -0.161 | -0.527 |  0.353 |  0.274 | torch.Size([3, 3, 3]) || model.17.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.17.F
 |  0.549 |  0.111 |  0.964 |  0.227 | torch.Size([64]) || model.18.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.18.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.20.bias
 | -0.014 | -0.577 |  0.547 |  0.331 | torch.Size([3, 3, 3]) || model.20.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.20.F
 |  0.537 |  0.119 |  0.988 |  0.258 | torch.Size([64]) || model.21.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.21.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.23.bias
 | -0.071 | -0.531 |  0.501 |  0.387 | torch.Size([3, 3, 3]) || model.23.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.23.F
 |  0.525 |  0.104 |  0.951 |  0.245 | torch.Size([64]) || model.24.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.24.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.26.bias
 | -0.012 | -0.561 |  0.572 |  0.375 | torch.Size([3, 3, 3]) || model.26.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.26.F
 |  0.505 |  0.116 |  0.994 |  0.260 | torch.Size([64]) || model.27.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.27.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.29.bias
 |  0.019 | -0.508 |  0.560 |  0.333 | torch.Size([3, 3, 3]) || model.29.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.29.F
 |  0.522 |  0.107 |  0.996 |  0.260 | torch.Size([64]) || model.30.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.30.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.32.bias
 |  0.106 | -0.564 |  0.549 |  0.308 | torch.Size([3, 3, 3]) || model.32.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.32.F
 |  0.537 |  0.109 |  0.992 |  0.248 | torch.Size([64]) || model.33.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.33.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.35.bias
 | -0.061 | -0.540 |  0.562 |  0.364 | torch.Size([3, 3, 3]) || model.35.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.35.F
 |  0.489 |  0.121 |  0.985 |  0.258 | torch.Size([64]) || model.36.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.36.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.38.bias
 |  0.049 | -0.530 |  0.549 |  0.330 | torch.Size([3, 3, 3]) || model.38.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.38.F
 |  0.499 |  0.128 |  0.989 |  0.248 | torch.Size([64]) || model.39.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.39.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.41.bias
 |  0.063 | -0.480 |  0.555 |  0.339 | torch.Size([3, 3, 3]) || model.41.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.41.F
 |  0.566 |  0.108 |  0.999 |  0.284 | torch.Size([64]) || model.42.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.42.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.44.bias
 |  0.119 | -0.553 |  0.577 |  0.352 | torch.Size([3, 3, 3]) || model.44.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.44.F
 |  0.562 |  0.100 |  0.998 |  0.270 | torch.Size([64]) || model.45.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.45.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([3]) || model.47.bias
 |  0.011 | -0.541 |  0.562 |  0.373 | torch.Size([3, 3, 3]) || model.47.A
 | -0.004 | -0.088 |  0.089 |  0.051 | torch.Size([3, 1, 21, 3, 3]) || model.47.F

23-04-17 16:16:01.378 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 1
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 1
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 1
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 3
    out_nc: 3
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-17 16:16:01.674 : Random seed: 3152
23-04-17 16:16:03.106 : Number of train images: 200, iters: 4
23-04-17 16:16:07.348 : 
Networks name: DnCNN
Params number: 183145
Net structure:
DnCNN(
  (model): Sequential(
    (0): PHConv2d(in_features=3, out_features=64, bias=True)
    (1): ReLU(inplace=True)
    (2): PHConv2d(in_features=64, out_features=64, bias=True)
    (3): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): PHConv2d(in_features=64, out_features=64, bias=True)
    (6): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): PHConv2d(in_features=64, out_features=64, bias=True)
    (9): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): PHConv2d(in_features=64, out_features=64, bias=True)
    (12): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): PHConv2d(in_features=64, out_features=64, bias=True)
    (15): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): PHConv2d(in_features=64, out_features=64, bias=True)
    (18): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): PHConv2d(in_features=64, out_features=64, bias=True)
    (21): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): PHConv2d(in_features=64, out_features=64, bias=True)
    (24): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): PHConv2d(in_features=64, out_features=64, bias=True)
    (27): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): PHConv2d(in_features=64, out_features=64, bias=True)
    (30): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): PHConv2d(in_features=64, out_features=64, bias=True)
    (33): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): PHConv2d(in_features=64, out_features=64, bias=True)
    (36): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): PHConv2d(in_features=64, out_features=64, bias=True)
    (39): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): PHConv2d(in_features=64, out_features=64, bias=True)
    (42): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): PHConv2d(in_features=64, out_features=64, bias=True)
    (45): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): PHConv2d(in_features=64, out_features=3, bias=True)
  )
)

23-04-17 16:16:07.462 : 
 |  mean  |  min   |  max   |  std   || shape               
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.0.bias
 | -0.022 | -0.550 |  0.517 |  0.297 | torch.Size([3, 3, 3]) || model.0.A
 | -0.004 | -0.166 |  0.166 |  0.096 | torch.Size([3, 21, 1, 3, 3]) || model.0.F
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.2.bias
 |  0.025 | -0.575 |  0.497 |  0.379 | torch.Size([3, 3, 3]) || model.2.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.2.F
 |  0.556 |  0.114 |  0.996 |  0.262 | torch.Size([64]) || model.3.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.3.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.5.bias
 | -0.014 | -0.575 |  0.488 |  0.376 | torch.Size([3, 3, 3]) || model.5.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.5.F
 |  0.547 |  0.115 |  0.985 |  0.266 | torch.Size([64]) || model.6.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.6.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.8.bias
 | -0.051 | -0.520 |  0.565 |  0.335 | torch.Size([3, 3, 3]) || model.8.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.8.F
 |  0.550 |  0.102 |  0.952 |  0.225 | torch.Size([64]) || model.9.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.9.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.11.bias
 |  0.004 | -0.518 |  0.548 |  0.300 | torch.Size([3, 3, 3]) || model.11.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.11.F
 |  0.583 |  0.119 |  0.992 |  0.282 | torch.Size([64]) || model.12.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.12.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.14.bias
 |  0.108 | -0.569 |  0.574 |  0.339 | torch.Size([3, 3, 3]) || model.14.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.14.F
 |  0.518 |  0.150 |  0.985 |  0.215 | torch.Size([64]) || model.15.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.15.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.17.bias
 |  0.019 | -0.577 |  0.568 |  0.378 | torch.Size([3, 3, 3]) || model.17.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.17.F
 |  0.497 |  0.103 |  0.993 |  0.265 | torch.Size([64]) || model.18.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.18.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.20.bias
 |  0.072 | -0.553 |  0.541 |  0.378 | torch.Size([3, 3, 3]) || model.20.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.20.F
 |  0.509 |  0.103 |  0.992 |  0.244 | torch.Size([64]) || model.21.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.21.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.23.bias
 | -0.047 | -0.554 |  0.533 |  0.341 | torch.Size([3, 3, 3]) || model.23.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.23.F
 |  0.504 |  0.170 |  0.982 |  0.248 | torch.Size([64]) || model.24.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.24.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.26.bias
 | -0.075 | -0.568 |  0.529 |  0.360 | torch.Size([3, 3, 3]) || model.26.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.26.F
 |  0.551 |  0.134 |  0.998 |  0.253 | torch.Size([64]) || model.27.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.27.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.29.bias
 |  0.022 | -0.486 |  0.576 |  0.314 | torch.Size([3, 3, 3]) || model.29.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.29.F
 |  0.573 |  0.107 |  0.981 |  0.272 | torch.Size([64]) || model.30.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.30.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.32.bias
 | -0.011 | -0.532 |  0.526 |  0.329 | torch.Size([3, 3, 3]) || model.32.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.32.F
 |  0.494 |  0.102 |  0.967 |  0.275 | torch.Size([64]) || model.33.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.33.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.35.bias
 | -0.034 | -0.568 |  0.577 |  0.323 | torch.Size([3, 3, 3]) || model.35.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.35.F
 |  0.573 |  0.102 |  0.976 |  0.261 | torch.Size([64]) || model.36.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.36.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.38.bias
 | -0.092 | -0.557 |  0.569 |  0.364 | torch.Size([3, 3, 3]) || model.38.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.38.F
 |  0.666 |  0.106 |  0.997 |  0.247 | torch.Size([64]) || model.39.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.39.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.41.bias
 |  0.065 | -0.552 |  0.543 |  0.346 | torch.Size([3, 3, 3]) || model.41.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.41.F
 |  0.559 |  0.103 |  0.964 |  0.269 | torch.Size([64]) || model.42.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.42.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.44.bias
 | -0.031 | -0.577 |  0.529 |  0.364 | torch.Size([3, 3, 3]) || model.44.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.44.F
 |  0.521 |  0.107 |  0.991 |  0.241 | torch.Size([64]) || model.45.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.45.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([3]) || model.47.bias
 |  0.060 | -0.474 |  0.502 |  0.320 | torch.Size([3, 3, 3]) || model.47.A
 | -0.002 | -0.089 |  0.089 |  0.052 | torch.Size([3, 1, 21, 3, 3]) || model.47.F

23-04-17 17:09:46.628 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 3
    out_nc: 3
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-17 17:09:46.829 : Random seed: 9437
23-04-17 17:09:48.191 : Number of train images: 200, iters: 4
23-04-17 17:09:51.886 : 
Networks name: DnCNN
Params number: 183145
Net structure:
DnCNN(
  (model): Sequential(
    (0): PHConv2d(in_features=3, out_features=64, bias=True)
    (1): ReLU(inplace=True)
    (2): PHConv2d(in_features=64, out_features=64, bias=True)
    (3): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): PHConv2d(in_features=64, out_features=64, bias=True)
    (6): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): PHConv2d(in_features=64, out_features=64, bias=True)
    (9): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): PHConv2d(in_features=64, out_features=64, bias=True)
    (12): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): PHConv2d(in_features=64, out_features=64, bias=True)
    (15): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): PHConv2d(in_features=64, out_features=64, bias=True)
    (18): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): PHConv2d(in_features=64, out_features=64, bias=True)
    (21): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): PHConv2d(in_features=64, out_features=64, bias=True)
    (24): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): PHConv2d(in_features=64, out_features=64, bias=True)
    (27): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): PHConv2d(in_features=64, out_features=64, bias=True)
    (30): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): PHConv2d(in_features=64, out_features=64, bias=True)
    (33): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): PHConv2d(in_features=64, out_features=64, bias=True)
    (36): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): PHConv2d(in_features=64, out_features=64, bias=True)
    (39): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): PHConv2d(in_features=64, out_features=64, bias=True)
    (42): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): PHConv2d(in_features=64, out_features=64, bias=True)
    (45): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): PHConv2d(in_features=64, out_features=3, bias=True)
  )
)

23-04-17 17:09:51.993 : 
 |  mean  |  min   |  max   |  std   || shape               
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.0.bias
 |  0.118 | -0.577 |  0.569 |  0.364 | torch.Size([3, 3, 3]) || model.0.A
 |  0.004 | -0.166 |  0.166 |  0.099 | torch.Size([3, 21, 1, 3, 3]) || model.0.F
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.2.bias
 |  0.048 | -0.480 |  0.493 |  0.322 | torch.Size([3, 3, 3]) || model.2.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.2.F
 |  0.590 |  0.107 |  0.995 |  0.263 | torch.Size([64]) || model.3.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.3.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.5.bias
 | -0.040 | -0.575 |  0.478 |  0.363 | torch.Size([3, 3, 3]) || model.5.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.5.F
 |  0.535 |  0.101 |  0.992 |  0.278 | torch.Size([64]) || model.6.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.6.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.8.bias
 |  0.118 | -0.562 |  0.572 |  0.346 | torch.Size([3, 3, 3]) || model.8.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.8.F
 |  0.604 |  0.106 |  0.992 |  0.278 | torch.Size([64]) || model.9.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.9.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.11.bias
 |  0.004 | -0.568 |  0.550 |  0.324 | torch.Size([3, 3, 3]) || model.11.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.11.F
 |  0.536 |  0.107 |  0.964 |  0.241 | torch.Size([64]) || model.12.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.12.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.14.bias
 | -0.044 | -0.573 |  0.487 |  0.342 | torch.Size([3, 3, 3]) || model.14.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.14.F
 |  0.521 |  0.101 |  0.965 |  0.245 | torch.Size([64]) || model.15.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.15.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.17.bias
 |  0.105 | -0.534 |  0.501 |  0.305 | torch.Size([3, 3, 3]) || model.17.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.17.F
 |  0.612 |  0.126 |  0.995 |  0.273 | torch.Size([64]) || model.18.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.18.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.20.bias
 | -0.056 | -0.542 |  0.577 |  0.324 | torch.Size([3, 3, 3]) || model.20.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.20.F
 |  0.541 |  0.121 |  0.994 |  0.265 | torch.Size([64]) || model.21.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.21.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.23.bias
 | -0.052 | -0.552 |  0.554 |  0.315 | torch.Size([3, 3, 3]) || model.23.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.23.F
 |  0.607 |  0.129 |  0.999 |  0.272 | torch.Size([64]) || model.24.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.24.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.26.bias
 |  0.041 | -0.486 |  0.531 |  0.297 | torch.Size([3, 3, 3]) || model.26.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.26.F
 |  0.523 |  0.103 |  0.980 |  0.269 | torch.Size([64]) || model.27.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.27.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.29.bias
 |  0.040 | -0.550 |  0.505 |  0.330 | torch.Size([3, 3, 3]) || model.29.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.29.F
 |  0.534 |  0.115 |  0.999 |  0.267 | torch.Size([64]) || model.30.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.30.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.32.bias
 |  0.037 | -0.522 |  0.364 |  0.257 | torch.Size([3, 3, 3]) || model.32.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.32.F
 |  0.602 |  0.130 |  0.986 |  0.263 | torch.Size([64]) || model.33.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.33.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.35.bias
 |  0.002 | -0.563 |  0.527 |  0.406 | torch.Size([3, 3, 3]) || model.35.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.35.F
 |  0.546 |  0.107 |  0.977 |  0.282 | torch.Size([64]) || model.36.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.36.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.38.bias
 | -0.030 | -0.521 |  0.569 |  0.375 | torch.Size([3, 3, 3]) || model.38.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.38.F
 |  0.561 |  0.128 |  0.988 |  0.265 | torch.Size([64]) || model.39.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.39.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.41.bias
 | -0.115 | -0.571 |  0.417 |  0.342 | torch.Size([3, 3, 3]) || model.41.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.41.F
 |  0.534 |  0.109 |  0.999 |  0.257 | torch.Size([64]) || model.42.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.42.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.44.bias
 | -0.002 | -0.549 |  0.574 |  0.390 | torch.Size([3, 3, 3]) || model.44.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.44.F
 |  0.583 |  0.120 |  0.997 |  0.261 | torch.Size([64]) || model.45.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.45.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([3]) || model.47.bias
 | -0.003 | -0.569 |  0.577 |  0.353 | torch.Size([3, 3, 3]) || model.47.A
 | -0.000 | -0.089 |  0.089 |  0.052 | torch.Size([3, 1, 21, 3, 3]) || model.47.F

23-04-27 11:06:33.248 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 3
    out_nc: 3
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-27 11:06:33.546 : Random seed: 8206
23-04-27 11:06:35.042 : Number of train images: 200, iters: 4
23-04-27 11:06:59.934 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 3
    out_nc: 3
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-27 11:07:00.142 : Random seed: 6984
23-04-27 11:07:01.330 : Number of train images: 200, iters: 4
23-04-27 11:07:05.834 : 
Networks name: DnCNN
Params number: 183145
Net structure:
DnCNN(
  (model): Sequential(
    (0): PHConv2d(in_features=3, out_features=64, bias=True)
    (1): ReLU(inplace=True)
    (2): PHConv2d(in_features=64, out_features=64, bias=True)
    (3): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): PHConv2d(in_features=64, out_features=64, bias=True)
    (6): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): PHConv2d(in_features=64, out_features=64, bias=True)
    (9): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): PHConv2d(in_features=64, out_features=64, bias=True)
    (12): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): PHConv2d(in_features=64, out_features=64, bias=True)
    (15): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): PHConv2d(in_features=64, out_features=64, bias=True)
    (18): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): PHConv2d(in_features=64, out_features=64, bias=True)
    (21): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): PHConv2d(in_features=64, out_features=64, bias=True)
    (24): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): PHConv2d(in_features=64, out_features=64, bias=True)
    (27): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): PHConv2d(in_features=64, out_features=64, bias=True)
    (30): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): PHConv2d(in_features=64, out_features=64, bias=True)
    (33): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): PHConv2d(in_features=64, out_features=64, bias=True)
    (36): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): PHConv2d(in_features=64, out_features=64, bias=True)
    (39): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): PHConv2d(in_features=64, out_features=64, bias=True)
    (42): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): PHConv2d(in_features=64, out_features=64, bias=True)
    (45): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): PHConv2d(in_features=64, out_features=3, bias=True)
  )
)

23-04-27 11:07:05.995 : 
 |  mean  |  min   |  max   |  std   || shape               
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.0.bias
 |  0.042 | -0.549 |  0.557 |  0.363 | torch.Size([3, 3, 3]) || model.0.A
 | -0.000 | -0.166 |  0.166 |  0.095 | torch.Size([3, 21, 1, 3, 3]) || model.0.F
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.2.bias
 |  0.032 | -0.534 |  0.575 |  0.355 | torch.Size([3, 3, 3]) || model.2.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.2.F
 |  0.605 |  0.104 |  0.997 |  0.272 | torch.Size([64]) || model.3.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.3.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.5.bias
 | -0.054 | -0.563 |  0.468 |  0.318 | torch.Size([3, 3, 3]) || model.5.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.5.F
 |  0.567 |  0.100 |  0.983 |  0.289 | torch.Size([64]) || model.6.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.6.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.8.bias
 | -0.059 | -0.560 |  0.577 |  0.337 | torch.Size([3, 3, 3]) || model.8.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.8.F
 |  0.574 |  0.114 |  0.976 |  0.263 | torch.Size([64]) || model.9.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.9.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.11.bias
 |  0.030 | -0.528 |  0.520 |  0.379 | torch.Size([3, 3, 3]) || model.11.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.11.F
 |  0.565 |  0.123 |  0.978 |  0.271 | torch.Size([64]) || model.12.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.12.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.14.bias
 | -0.006 | -0.468 |  0.573 |  0.299 | torch.Size([3, 3, 3]) || model.14.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.14.F
 |  0.562 |  0.161 |  1.000 |  0.247 | torch.Size([64]) || model.15.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.15.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.17.bias
 |  0.013 | -0.526 |  0.495 |  0.328 | torch.Size([3, 3, 3]) || model.17.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.17.F
 |  0.613 |  0.122 |  0.992 |  0.252 | torch.Size([64]) || model.18.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.18.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.20.bias
 | -0.057 | -0.543 |  0.535 |  0.322 | torch.Size([3, 3, 3]) || model.20.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.20.F
 |  0.535 |  0.121 |  0.967 |  0.231 | torch.Size([64]) || model.21.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.21.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.23.bias
 |  0.013 | -0.527 |  0.567 |  0.362 | torch.Size([3, 3, 3]) || model.23.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.23.F
 |  0.569 |  0.102 |  0.993 |  0.276 | torch.Size([64]) || model.24.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.24.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.26.bias
 | -0.075 | -0.558 |  0.502 |  0.328 | torch.Size([3, 3, 3]) || model.26.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.26.F
 |  0.630 |  0.121 |  0.997 |  0.269 | torch.Size([64]) || model.27.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.27.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.29.bias
 | -0.019 | -0.548 |  0.569 |  0.360 | torch.Size([3, 3, 3]) || model.29.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.29.F
 |  0.581 |  0.105 |  0.979 |  0.261 | torch.Size([64]) || model.30.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.30.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.32.bias
 |  0.016 | -0.554 |  0.470 |  0.326 | torch.Size([3, 3, 3]) || model.32.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.32.F
 |  0.560 |  0.118 |  0.969 |  0.278 | torch.Size([64]) || model.33.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.33.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.35.bias
 |  0.023 | -0.543 |  0.540 |  0.330 | torch.Size([3, 3, 3]) || model.35.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.35.F
 |  0.584 |  0.135 |  0.992 |  0.243 | torch.Size([64]) || model.36.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.36.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.38.bias
 |  0.120 | -0.397 |  0.576 |  0.291 | torch.Size([3, 3, 3]) || model.38.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.38.F
 |  0.588 |  0.129 |  0.997 |  0.274 | torch.Size([64]) || model.39.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.39.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.41.bias
 | -0.065 | -0.520 |  0.564 |  0.313 | torch.Size([3, 3, 3]) || model.41.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.41.F
 |  0.602 |  0.104 |  0.976 |  0.249 | torch.Size([64]) || model.42.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.42.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.44.bias
 |  0.010 | -0.534 |  0.547 |  0.333 | torch.Size([3, 3, 3]) || model.44.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.44.F
 |  0.529 |  0.104 |  0.998 |  0.261 | torch.Size([64]) || model.45.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.45.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([3]) || model.47.bias
 |  0.016 | -0.406 |  0.539 |  0.279 | torch.Size([3, 3, 3]) || model.47.A
 |  0.002 | -0.089 |  0.089 |  0.051 | torch.Size([3, 1, 21, 3, 3]) || model.47.F

23-04-27 11:08:10.426 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 3
    out_nc: 3
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-27 11:08:10.426 : Random seed: 2302
23-04-27 11:08:10.433 : Number of train images: 200, iters: 4
23-04-27 11:08:38.215 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 64
    out_nc: 64
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-27 11:08:38.216 : Random seed: 4434
23-04-27 11:08:38.223 : Number of train images: 200, iters: 4
23-04-27 11:08:38.538 : 
Networks name: DnCNN
Params number: 160768
Net structure:
DnCNN(
  (model): Sequential(
    (0): PHConv2d(in_features=64, out_features=64, bias=True)
    (1): ReLU(inplace=True)
    (2): PHConv2d(in_features=64, out_features=64, bias=True)
    (3): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): PHConv2d(in_features=64, out_features=64, bias=True)
    (6): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): PHConv2d(in_features=64, out_features=64, bias=True)
    (9): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): PHConv2d(in_features=64, out_features=64, bias=True)
    (12): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): PHConv2d(in_features=64, out_features=64, bias=True)
    (15): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): PHConv2d(in_features=64, out_features=64, bias=True)
    (18): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): PHConv2d(in_features=64, out_features=64, bias=True)
    (21): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): PHConv2d(in_features=64, out_features=64, bias=True)
    (24): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): PHConv2d(in_features=64, out_features=64, bias=True)
    (27): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): PHConv2d(in_features=64, out_features=64, bias=True)
    (30): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): PHConv2d(in_features=64, out_features=64, bias=True)
    (33): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): PHConv2d(in_features=64, out_features=64, bias=True)
    (36): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): PHConv2d(in_features=64, out_features=64, bias=True)
    (39): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): PHConv2d(in_features=64, out_features=64, bias=True)
    (42): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): PHConv2d(in_features=64, out_features=64, bias=True)
    (45): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): PHConv2d(in_features=64, out_features=64, bias=True)
  )
)

23-04-27 11:08:38.571 : 
 |  mean  |  min   |  max   |  std   || shape               
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.0.bias
 |  0.042 | -0.433 |  0.429 |  0.262 | torch.Size([4, 4, 4]) || model.0.A
 |  0.001 | -0.046 |  0.046 |  0.027 | torch.Size([4, 16, 16, 3, 3]) || model.0.F
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.2.bias
 |  0.063 | -0.431 |  0.428 |  0.256 | torch.Size([4, 4, 4]) || model.2.A
 |  0.001 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.2.F
 |  0.580 |  0.114 |  0.997 |  0.261 | torch.Size([64]) || model.3.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.3.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.5.bias
 | -0.032 | -0.430 |  0.416 |  0.263 | torch.Size([4, 4, 4]) || model.5.A
 |  0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.5.F
 |  0.581 |  0.100 |  0.998 |  0.250 | torch.Size([64]) || model.6.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.6.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.8.bias
 |  0.044 | -0.422 |  0.419 |  0.252 | torch.Size([4, 4, 4]) || model.8.A
 |  0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.8.F
 |  0.550 |  0.101 |  1.000 |  0.282 | torch.Size([64]) || model.9.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.9.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.11.bias
 |  0.018 | -0.400 |  0.428 |  0.236 | torch.Size([4, 4, 4]) || model.11.A
 | -0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.11.F
 |  0.579 |  0.108 |  0.994 |  0.275 | torch.Size([64]) || model.12.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.12.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.14.bias
 | -0.003 | -0.427 |  0.395 |  0.268 | torch.Size([4, 4, 4]) || model.14.A
 |  0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.14.F
 |  0.531 |  0.128 |  0.973 |  0.248 | torch.Size([64]) || model.15.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.15.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.17.bias
 | -0.029 | -0.421 |  0.383 |  0.259 | torch.Size([4, 4, 4]) || model.17.A
 |  0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.17.F
 |  0.529 |  0.101 |  0.941 |  0.252 | torch.Size([64]) || model.18.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.18.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.20.bias
 | -0.049 | -0.426 |  0.383 |  0.232 | torch.Size([4, 4, 4]) || model.20.A
 | -0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.20.F
 |  0.587 |  0.117 |  0.981 |  0.228 | torch.Size([64]) || model.21.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.21.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.23.bias
 | -0.041 | -0.429 |  0.417 |  0.258 | torch.Size([4, 4, 4]) || model.23.A
 | -0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.23.F
 |  0.562 |  0.102 |  0.957 |  0.255 | torch.Size([64]) || model.24.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.24.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.26.bias
 |  0.002 | -0.420 |  0.429 |  0.233 | torch.Size([4, 4, 4]) || model.26.A
 |  0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.26.F
 |  0.488 |  0.107 |  0.993 |  0.263 | torch.Size([64]) || model.27.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.27.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.29.bias
 | -0.023 | -0.429 |  0.409 |  0.250 | torch.Size([4, 4, 4]) || model.29.A
 |  0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.29.F
 |  0.517 |  0.102 |  0.937 |  0.253 | torch.Size([64]) || model.30.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.30.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.32.bias
 | -0.055 | -0.432 |  0.413 |  0.266 | torch.Size([4, 4, 4]) || model.32.A
 | -0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.32.F
 |  0.565 |  0.124 |  1.000 |  0.283 | torch.Size([64]) || model.33.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.33.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.35.bias
 |  0.002 | -0.432 |  0.425 |  0.271 | torch.Size([4, 4, 4]) || model.35.A
 | -0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.35.F
 |  0.541 |  0.102 |  0.958 |  0.261 | torch.Size([64]) || model.36.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.36.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.38.bias
 | -0.042 | -0.431 |  0.432 |  0.258 | torch.Size([4, 4, 4]) || model.38.A
 | -0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.38.F
 |  0.534 |  0.101 |  0.966 |  0.263 | torch.Size([64]) || model.39.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.39.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.41.bias
 | -0.001 | -0.412 |  0.408 |  0.243 | torch.Size([4, 4, 4]) || model.41.A
 |  0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.41.F
 |  0.519 |  0.101 |  0.990 |  0.264 | torch.Size([64]) || model.42.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.42.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.44.bias
 | -0.009 | -0.422 |  0.422 |  0.244 | torch.Size([4, 4, 4]) || model.44.A
 |  0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.44.F
 |  0.496 |  0.108 |  0.983 |  0.279 | torch.Size([64]) || model.45.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.45.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.47.bias
 | -0.014 | -0.432 |  0.428 |  0.249 | torch.Size([4, 4, 4]) || model.47.A
 | -0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.47.F

23-04-27 11:10:12.528 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 3
    out_nc: 3
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-27 11:10:12.529 : Random seed: 7056
23-04-27 11:10:12.537 : Number of train images: 200, iters: 4
23-04-27 11:10:12.878 : 
Networks name: DnCNN
Params number: 183145
Net structure:
DnCNN(
  (model): Sequential(
    (0): PHConv2d(in_features=3, out_features=64, bias=True)
    (1): ReLU(inplace=True)
    (2): PHConv2d(in_features=64, out_features=64, bias=True)
    (3): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): PHConv2d(in_features=64, out_features=64, bias=True)
    (6): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): PHConv2d(in_features=64, out_features=64, bias=True)
    (9): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): PHConv2d(in_features=64, out_features=64, bias=True)
    (12): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): PHConv2d(in_features=64, out_features=64, bias=True)
    (15): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): PHConv2d(in_features=64, out_features=64, bias=True)
    (18): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): PHConv2d(in_features=64, out_features=64, bias=True)
    (21): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): PHConv2d(in_features=64, out_features=64, bias=True)
    (24): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): PHConv2d(in_features=64, out_features=64, bias=True)
    (27): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): PHConv2d(in_features=64, out_features=64, bias=True)
    (30): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): PHConv2d(in_features=64, out_features=64, bias=True)
    (33): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): PHConv2d(in_features=64, out_features=64, bias=True)
    (36): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): PHConv2d(in_features=64, out_features=64, bias=True)
    (39): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): PHConv2d(in_features=64, out_features=64, bias=True)
    (42): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): PHConv2d(in_features=64, out_features=64, bias=True)
    (45): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): PHConv2d(in_features=64, out_features=3, bias=True)
  )
)

23-04-27 11:10:12.920 : 
 |  mean  |  min   |  max   |  std   || shape               
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.0.bias
 |  0.034 | -0.487 |  0.556 |  0.315 | torch.Size([3, 3, 3]) || model.0.A
 | -0.001 | -0.167 |  0.163 |  0.096 | torch.Size([3, 21, 1, 3, 3]) || model.0.F
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.2.bias
 | -0.021 | -0.521 |  0.544 |  0.365 | torch.Size([3, 3, 3]) || model.2.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.2.F
 |  0.505 |  0.135 |  0.979 |  0.238 | torch.Size([64]) || model.3.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.3.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.5.bias
 | -0.023 | -0.561 |  0.436 |  0.316 | torch.Size([3, 3, 3]) || model.5.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.5.F
 |  0.512 |  0.110 |  0.981 |  0.241 | torch.Size([64]) || model.6.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.6.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.8.bias
 | -0.004 | -0.543 |  0.529 |  0.351 | torch.Size([3, 3, 3]) || model.8.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.8.F
 |  0.556 |  0.114 |  0.995 |  0.264 | torch.Size([64]) || model.9.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.9.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.11.bias
 |  0.063 | -0.562 |  0.552 |  0.344 | torch.Size([3, 3, 3]) || model.11.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.11.F
 |  0.496 |  0.109 |  0.985 |  0.263 | torch.Size([64]) || model.12.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.12.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.14.bias
 |  0.071 | -0.535 |  0.569 |  0.389 | torch.Size([3, 3, 3]) || model.14.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.14.F
 |  0.564 |  0.105 |  0.980 |  0.270 | torch.Size([64]) || model.15.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.15.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.17.bias
 | -0.033 | -0.572 |  0.558 |  0.336 | torch.Size([3, 3, 3]) || model.17.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.17.F
 |  0.512 |  0.111 |  0.982 |  0.279 | torch.Size([64]) || model.18.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.18.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.20.bias
 | -0.016 | -0.559 |  0.560 |  0.421 | torch.Size([3, 3, 3]) || model.20.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.20.F
 |  0.539 |  0.105 |  0.992 |  0.249 | torch.Size([64]) || model.21.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.21.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.23.bias
 | -0.032 | -0.575 |  0.577 |  0.288 | torch.Size([3, 3, 3]) || model.23.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.23.F
 |  0.556 |  0.115 |  0.972 |  0.254 | torch.Size([64]) || model.24.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.24.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.26.bias
 |  0.016 | -0.573 |  0.567 |  0.382 | torch.Size([3, 3, 3]) || model.26.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.26.F
 |  0.515 |  0.115 |  0.967 |  0.263 | torch.Size([64]) || model.27.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.27.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.29.bias
 |  0.094 | -0.534 |  0.537 |  0.299 | torch.Size([3, 3, 3]) || model.29.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.29.F
 |  0.581 |  0.113 |  0.994 |  0.287 | torch.Size([64]) || model.30.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.30.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.32.bias
 |  0.041 | -0.575 |  0.571 |  0.378 | torch.Size([3, 3, 3]) || model.32.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.32.F
 |  0.546 |  0.131 |  0.974 |  0.248 | torch.Size([64]) || model.33.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.33.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.35.bias
 | -0.086 | -0.509 |  0.494 |  0.319 | torch.Size([3, 3, 3]) || model.35.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.35.F
 |  0.526 |  0.121 |  0.984 |  0.269 | torch.Size([64]) || model.36.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.36.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.38.bias
 |  0.099 | -0.562 |  0.568 |  0.335 | torch.Size([3, 3, 3]) || model.38.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.38.F
 |  0.524 |  0.102 |  0.975 |  0.254 | torch.Size([64]) || model.39.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.39.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.41.bias
 |  0.063 | -0.537 |  0.555 |  0.291 | torch.Size([3, 3, 3]) || model.41.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.41.F
 |  0.563 |  0.106 |  0.994 |  0.248 | torch.Size([64]) || model.42.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.42.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.44.bias
 | -0.023 | -0.544 |  0.559 |  0.352 | torch.Size([3, 3, 3]) || model.44.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.44.F
 |  0.509 |  0.114 |  0.985 |  0.269 | torch.Size([64]) || model.45.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.45.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([3]) || model.47.bias
 |  0.102 | -0.572 |  0.573 |  0.324 | torch.Size([3, 3, 3]) || model.47.A
 | -0.004 | -0.089 |  0.089 |  0.050 | torch.Size([3, 1, 21, 3, 3]) || model.47.F

23-04-27 11:49:20.717 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 3
    out_nc: 3
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-27 11:49:20.943 : Random seed: 4965
23-04-27 11:49:22.177 : Number of train images: 200, iters: 4
23-04-27 11:49:26.232 : 
Networks name: DnCNN
Params number: 183145
Net structure:
DnCNN(
  (model): Sequential(
    (0): PHConv2d(in_features=3, out_features=64, bias=True)
    (1): ReLU(inplace=True)
    (2): PHConv2d(in_features=64, out_features=64, bias=True)
    (3): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): PHConv2d(in_features=64, out_features=64, bias=True)
    (6): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): PHConv2d(in_features=64, out_features=64, bias=True)
    (9): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): PHConv2d(in_features=64, out_features=64, bias=True)
    (12): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): PHConv2d(in_features=64, out_features=64, bias=True)
    (15): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): PHConv2d(in_features=64, out_features=64, bias=True)
    (18): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): PHConv2d(in_features=64, out_features=64, bias=True)
    (21): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): PHConv2d(in_features=64, out_features=64, bias=True)
    (24): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): PHConv2d(in_features=64, out_features=64, bias=True)
    (27): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): PHConv2d(in_features=64, out_features=64, bias=True)
    (30): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): PHConv2d(in_features=64, out_features=64, bias=True)
    (33): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): PHConv2d(in_features=64, out_features=64, bias=True)
    (36): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): PHConv2d(in_features=64, out_features=64, bias=True)
    (39): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): PHConv2d(in_features=64, out_features=64, bias=True)
    (42): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): PHConv2d(in_features=64, out_features=64, bias=True)
    (45): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): PHConv2d(in_features=64, out_features=3, bias=True)
  )
)

23-04-27 11:49:26.371 : 
 |  mean  |  min   |  max   |  std   || shape               
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.0.bias
 | -0.104 | -0.555 |  0.570 |  0.347 | torch.Size([3, 3, 3]) || model.0.A
 | -0.002 | -0.166 |  0.166 |  0.096 | torch.Size([3, 21, 1, 3, 3]) || model.0.F
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.2.bias
 |  0.059 | -0.571 |  0.546 |  0.347 | torch.Size([3, 3, 3]) || model.2.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.2.F
 |  0.488 |  0.115 |  0.999 |  0.254 | torch.Size([64]) || model.3.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.3.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.5.bias
 |  0.110 | -0.487 |  0.535 |  0.277 | torch.Size([3, 3, 3]) || model.5.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.5.F
 |  0.573 |  0.118 |  0.981 |  0.270 | torch.Size([64]) || model.6.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.6.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.8.bias
 | -0.020 | -0.459 |  0.557 |  0.322 | torch.Size([3, 3, 3]) || model.8.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.8.F
 |  0.483 |  0.100 |  0.980 |  0.260 | torch.Size([64]) || model.9.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.9.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.11.bias
 |  0.057 | -0.530 |  0.553 |  0.362 | torch.Size([3, 3, 3]) || model.11.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.11.F
 |  0.571 |  0.123 |  0.994 |  0.267 | torch.Size([64]) || model.12.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.12.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.14.bias
 |  0.131 | -0.431 |  0.535 |  0.299 | torch.Size([3, 3, 3]) || model.14.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.14.F
 |  0.537 |  0.127 |  0.992 |  0.240 | torch.Size([64]) || model.15.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.15.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.17.bias
 |  0.043 | -0.521 |  0.546 |  0.361 | torch.Size([3, 3, 3]) || model.17.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.17.F
 |  0.593 |  0.104 |  0.987 |  0.258 | torch.Size([64]) || model.18.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.18.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.20.bias
 |  0.096 | -0.513 |  0.563 |  0.359 | torch.Size([3, 3, 3]) || model.20.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.20.F
 |  0.610 |  0.126 |  1.000 |  0.278 | torch.Size([64]) || model.21.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.21.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.23.bias
 | -0.027 | -0.564 |  0.557 |  0.349 | torch.Size([3, 3, 3]) || model.23.A
 |  0.001 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.23.F
 |  0.533 |  0.104 |  0.987 |  0.263 | torch.Size([64]) || model.24.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.24.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.26.bias
 | -0.044 | -0.557 |  0.548 |  0.372 | torch.Size([3, 3, 3]) || model.26.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.26.F
 |  0.573 |  0.114 |  0.998 |  0.270 | torch.Size([64]) || model.27.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.27.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.29.bias
 |  0.100 | -0.510 |  0.550 |  0.345 | torch.Size([3, 3, 3]) || model.29.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.29.F
 |  0.522 |  0.109 |  0.935 |  0.267 | torch.Size([64]) || model.30.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.30.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.32.bias
 | -0.055 | -0.487 |  0.554 |  0.311 | torch.Size([3, 3, 3]) || model.32.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.32.F
 |  0.627 |  0.121 |  0.994 |  0.258 | torch.Size([64]) || model.33.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.33.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.35.bias
 |  0.028 | -0.425 |  0.495 |  0.301 | torch.Size([3, 3, 3]) || model.35.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.35.F
 |  0.528 |  0.135 |  0.998 |  0.255 | torch.Size([64]) || model.36.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.36.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.38.bias
 | -0.147 | -0.569 |  0.499 |  0.343 | torch.Size([3, 3, 3]) || model.38.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.38.F
 |  0.512 |  0.117 |  0.983 |  0.228 | torch.Size([64]) || model.39.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.39.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.41.bias
 | -0.068 | -0.528 |  0.543 |  0.352 | torch.Size([3, 3, 3]) || model.41.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.41.F
 |  0.544 |  0.104 |  0.969 |  0.268 | torch.Size([64]) || model.42.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.42.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.44.bias
 |  0.074 | -0.571 |  0.542 |  0.335 | torch.Size([3, 3, 3]) || model.44.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.44.F
 |  0.522 |  0.102 |  0.957 |  0.230 | torch.Size([64]) || model.45.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.45.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([3]) || model.47.bias
 | -0.082 | -0.526 |  0.536 |  0.317 | torch.Size([3, 3, 3]) || model.47.A
 |  0.001 | -0.089 |  0.089 |  0.051 | torch.Size([3, 1, 21, 3, 3]) || model.47.F

23-04-29 10:23:50.484 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 3
    out_nc: 3
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-29 10:23:50.969 : Random seed: 2978
23-04-29 10:23:52.539 : Number of train images: 200, iters: 4
23-04-29 10:25:44.679 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 64
    out_nc: 64
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-29 10:25:44.680 : Random seed: 1092
23-04-29 10:25:44.686 : Number of train images: 200, iters: 4
23-04-29 10:25:45.111 : 
Networks name: DnCNN
Params number: 160768
Net structure:
DnCNN(
  (model): Sequential(
    (0): PHConv2d(in_features=64, out_features=64, bias=True)
    (1): ReLU(inplace=True)
    (2): PHConv2d(in_features=64, out_features=64, bias=True)
    (3): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): PHConv2d(in_features=64, out_features=64, bias=True)
    (6): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): PHConv2d(in_features=64, out_features=64, bias=True)
    (9): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): PHConv2d(in_features=64, out_features=64, bias=True)
    (12): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): PHConv2d(in_features=64, out_features=64, bias=True)
    (15): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): PHConv2d(in_features=64, out_features=64, bias=True)
    (18): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): PHConv2d(in_features=64, out_features=64, bias=True)
    (21): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): PHConv2d(in_features=64, out_features=64, bias=True)
    (24): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): PHConv2d(in_features=64, out_features=64, bias=True)
    (27): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): PHConv2d(in_features=64, out_features=64, bias=True)
    (30): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): PHConv2d(in_features=64, out_features=64, bias=True)
    (33): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): PHConv2d(in_features=64, out_features=64, bias=True)
    (36): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): PHConv2d(in_features=64, out_features=64, bias=True)
    (39): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): PHConv2d(in_features=64, out_features=64, bias=True)
    (42): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): PHConv2d(in_features=64, out_features=64, bias=True)
    (45): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): PHConv2d(in_features=64, out_features=64, bias=True)
  )
)

23-04-29 10:25:45.227 : 
 |  mean  |  min   |  max   |  std   || shape               
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.0.bias
 | -0.029 | -0.418 |  0.427 |  0.243 | torch.Size([4, 4, 4]) || model.0.A
 | -0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.0.F
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.2.bias
 |  0.023 | -0.427 |  0.433 |  0.272 | torch.Size([4, 4, 4]) || model.2.A
 |  0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.2.F
 |  0.584 |  0.116 |  0.988 |  0.272 | torch.Size([64]) || model.3.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.3.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.5.bias
 | -0.026 | -0.425 |  0.397 |  0.245 | torch.Size([4, 4, 4]) || model.5.A
 | -0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.5.F
 |  0.554 |  0.117 |  0.995 |  0.271 | torch.Size([64]) || model.6.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.6.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.8.bias
 | -0.029 | -0.417 |  0.418 |  0.261 | torch.Size([4, 4, 4]) || model.8.A
 | -0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.8.F
 |  0.519 |  0.122 |  0.975 |  0.243 | torch.Size([64]) || model.9.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.9.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.11.bias
 | -0.013 | -0.426 |  0.424 |  0.258 | torch.Size([4, 4, 4]) || model.11.A
 |  0.000 | -0.046 |  0.046 |  0.027 | torch.Size([4, 16, 16, 3, 3]) || model.11.F
 |  0.587 |  0.105 |  0.996 |  0.248 | torch.Size([64]) || model.12.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.12.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.14.bias
 | -0.029 | -0.426 |  0.418 |  0.241 | torch.Size([4, 4, 4]) || model.14.A
 |  0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.14.F
 |  0.593 |  0.101 |  0.995 |  0.275 | torch.Size([64]) || model.15.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.15.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.17.bias
 |  0.029 | -0.427 |  0.419 |  0.247 | torch.Size([4, 4, 4]) || model.17.A
 |  0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.17.F
 |  0.579 |  0.104 |  1.000 |  0.240 | torch.Size([64]) || model.18.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.18.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.20.bias
 |  0.023 | -0.432 |  0.420 |  0.235 | torch.Size([4, 4, 4]) || model.20.A
 |  0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.20.F
 |  0.537 |  0.102 |  0.987 |  0.267 | torch.Size([64]) || model.21.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.21.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.23.bias
 | -0.024 | -0.422 |  0.424 |  0.224 | torch.Size([4, 4, 4]) || model.23.A
 |  0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.23.F
 |  0.512 |  0.102 |  0.957 |  0.240 | torch.Size([64]) || model.24.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.24.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.26.bias
 | -0.010 | -0.430 |  0.424 |  0.254 | torch.Size([4, 4, 4]) || model.26.A
 |  0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.26.F
 |  0.588 |  0.101 |  0.996 |  0.268 | torch.Size([64]) || model.27.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.27.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.29.bias
 | -0.074 | -0.427 |  0.418 |  0.258 | torch.Size([4, 4, 4]) || model.29.A
 |  0.000 | -0.046 |  0.046 |  0.027 | torch.Size([4, 16, 16, 3, 3]) || model.29.F
 |  0.575 |  0.161 |  0.997 |  0.218 | torch.Size([64]) || model.30.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.30.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.32.bias
 | -0.010 | -0.431 |  0.403 |  0.248 | torch.Size([4, 4, 4]) || model.32.A
 |  0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.32.F
 |  0.517 |  0.105 |  0.982 |  0.237 | torch.Size([64]) || model.33.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.33.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.35.bias
 | -0.013 | -0.388 |  0.427 |  0.223 | torch.Size([4, 4, 4]) || model.35.A
 |  0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.35.F
 |  0.496 |  0.120 |  0.976 |  0.262 | torch.Size([64]) || model.36.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.36.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.38.bias
 |  0.041 | -0.418 |  0.428 |  0.249 | torch.Size([4, 4, 4]) || model.38.A
 |  0.001 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.38.F
 |  0.515 |  0.110 |  0.969 |  0.261 | torch.Size([64]) || model.39.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.39.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.41.bias
 | -0.011 | -0.429 |  0.409 |  0.248 | torch.Size([4, 4, 4]) || model.41.A
 | -0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.41.F
 |  0.552 |  0.120 |  0.982 |  0.246 | torch.Size([64]) || model.42.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.42.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.44.bias
 | -0.035 | -0.424 |  0.381 |  0.251 | torch.Size([4, 4, 4]) || model.44.A
 |  0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.44.F
 |  0.548 |  0.108 |  0.999 |  0.245 | torch.Size([64]) || model.45.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.45.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.47.bias
 |  0.016 | -0.411 |  0.432 |  0.253 | torch.Size([4, 4, 4]) || model.47.A
 |  0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.47.F

23-04-29 10:26:50.031 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 64
    out_nc: 64
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-29 10:26:50.032 : Random seed: 5900
23-04-29 10:26:50.043 : Number of train images: 200, iters: 4
23-04-29 10:26:50.349 : 
Networks name: DnCNN
Params number: 160768
Net structure:
DnCNN(
  (model): Sequential(
    (0): PHConv2d(in_features=64, out_features=64, bias=True)
    (1): ReLU(inplace=True)
    (2): PHConv2d(in_features=64, out_features=64, bias=True)
    (3): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): PHConv2d(in_features=64, out_features=64, bias=True)
    (6): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): PHConv2d(in_features=64, out_features=64, bias=True)
    (9): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): PHConv2d(in_features=64, out_features=64, bias=True)
    (12): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): PHConv2d(in_features=64, out_features=64, bias=True)
    (15): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): PHConv2d(in_features=64, out_features=64, bias=True)
    (18): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): PHConv2d(in_features=64, out_features=64, bias=True)
    (21): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): PHConv2d(in_features=64, out_features=64, bias=True)
    (24): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): PHConv2d(in_features=64, out_features=64, bias=True)
    (27): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): PHConv2d(in_features=64, out_features=64, bias=True)
    (30): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): PHConv2d(in_features=64, out_features=64, bias=True)
    (33): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): PHConv2d(in_features=64, out_features=64, bias=True)
    (36): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): PHConv2d(in_features=64, out_features=64, bias=True)
    (39): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): PHConv2d(in_features=64, out_features=64, bias=True)
    (42): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): PHConv2d(in_features=64, out_features=64, bias=True)
    (45): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): PHConv2d(in_features=64, out_features=64, bias=True)
  )
)

23-04-29 10:26:50.397 : 
 |  mean  |  min   |  max   |  std   || shape               
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.0.bias
 | -0.023 | -0.432 |  0.414 |  0.251 | torch.Size([4, 4, 4]) || model.0.A
 | -0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.0.F
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.2.bias
 |  0.084 | -0.417 |  0.431 |  0.215 | torch.Size([4, 4, 4]) || model.2.A
 |  0.001 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.2.F
 |  0.577 |  0.125 |  0.995 |  0.264 | torch.Size([64]) || model.3.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.3.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.5.bias
 |  0.084 | -0.428 |  0.428 |  0.237 | torch.Size([4, 4, 4]) || model.5.A
 |  0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.5.F
 |  0.553 |  0.100 |  0.994 |  0.265 | torch.Size([64]) || model.6.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.6.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.8.bias
 | -0.050 | -0.429 |  0.375 |  0.238 | torch.Size([4, 4, 4]) || model.8.A
 | -0.000 | -0.046 |  0.046 |  0.027 | torch.Size([4, 16, 16, 3, 3]) || model.8.F
 |  0.525 |  0.111 |  0.995 |  0.251 | torch.Size([64]) || model.9.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.9.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.11.bias
 | -0.051 | -0.432 |  0.432 |  0.251 | torch.Size([4, 4, 4]) || model.11.A
 | -0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.11.F
 |  0.525 |  0.126 |  0.994 |  0.264 | torch.Size([64]) || model.12.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.12.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.14.bias
 |  0.005 | -0.418 |  0.377 |  0.219 | torch.Size([4, 4, 4]) || model.14.A
 |  0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.14.F
 |  0.552 |  0.111 |  0.984 |  0.266 | torch.Size([64]) || model.15.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.15.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.17.bias
 |  0.044 | -0.427 |  0.428 |  0.226 | torch.Size([4, 4, 4]) || model.17.A
 | -0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.17.F
 |  0.486 |  0.103 |  0.992 |  0.251 | torch.Size([64]) || model.18.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.18.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.20.bias
 | -0.001 | -0.431 |  0.432 |  0.266 | torch.Size([4, 4, 4]) || model.20.A
 | -0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.20.F
 |  0.537 |  0.122 |  0.994 |  0.276 | torch.Size([64]) || model.21.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.21.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.23.bias
 |  0.023 | -0.424 |  0.418 |  0.275 | torch.Size([4, 4, 4]) || model.23.A
 |  0.001 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.23.F
 |  0.539 |  0.105 |  0.987 |  0.238 | torch.Size([64]) || model.24.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.24.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.26.bias
 |  0.005 | -0.399 |  0.424 |  0.251 | torch.Size([4, 4, 4]) || model.26.A
 |  0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.26.F
 |  0.531 |  0.106 |  0.937 |  0.268 | torch.Size([64]) || model.27.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.27.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.29.bias
 |  0.004 | -0.432 |  0.424 |  0.274 | torch.Size([4, 4, 4]) || model.29.A
 | -0.000 | -0.046 |  0.046 |  0.027 | torch.Size([4, 16, 16, 3, 3]) || model.29.F
 |  0.623 |  0.104 |  0.999 |  0.272 | torch.Size([64]) || model.30.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.30.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.32.bias
 |  0.057 | -0.426 |  0.425 |  0.245 | torch.Size([4, 4, 4]) || model.32.A
 | -0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.32.F
 |  0.568 |  0.105 |  0.998 |  0.283 | torch.Size([64]) || model.33.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.33.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.35.bias
 | -0.019 | -0.431 |  0.424 |  0.238 | torch.Size([4, 4, 4]) || model.35.A
 | -0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.35.F
 |  0.557 |  0.105 |  0.990 |  0.268 | torch.Size([64]) || model.36.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.36.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.38.bias
 | -0.004 | -0.429 |  0.423 |  0.249 | torch.Size([4, 4, 4]) || model.38.A
 |  0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.38.F
 |  0.569 |  0.110 |  0.984 |  0.261 | torch.Size([64]) || model.39.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.39.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.41.bias
 |  0.008 | -0.410 |  0.420 |  0.268 | torch.Size([4, 4, 4]) || model.41.A
 | -0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.41.F
 |  0.568 |  0.114 |  0.996 |  0.269 | torch.Size([64]) || model.42.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.42.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.44.bias
 | -0.026 | -0.418 |  0.422 |  0.256 | torch.Size([4, 4, 4]) || model.44.A
 |  0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.44.F
 |  0.555 |  0.114 |  1.000 |  0.278 | torch.Size([64]) || model.45.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.45.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.47.bias
 | -0.001 | -0.425 |  0.428 |  0.247 | torch.Size([4, 4, 4]) || model.47.A
 | -0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.47.F

23-04-29 10:28:01.720 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 4
    out_nc: 4
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-29 10:28:01.721 : Random seed: 3963
23-04-29 10:28:01.730 : Number of train images: 200, iters: 4
23-04-29 10:28:01.973 : 
Networks name: DnCNN
Params number: 143428
Net structure:
DnCNN(
  (model): Sequential(
    (0): PHConv2d(in_features=4, out_features=64, bias=True)
    (1): ReLU(inplace=True)
    (2): PHConv2d(in_features=64, out_features=64, bias=True)
    (3): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): PHConv2d(in_features=64, out_features=64, bias=True)
    (6): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): PHConv2d(in_features=64, out_features=64, bias=True)
    (9): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): PHConv2d(in_features=64, out_features=64, bias=True)
    (12): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): PHConv2d(in_features=64, out_features=64, bias=True)
    (15): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): PHConv2d(in_features=64, out_features=64, bias=True)
    (18): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): PHConv2d(in_features=64, out_features=64, bias=True)
    (21): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): PHConv2d(in_features=64, out_features=64, bias=True)
    (24): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): PHConv2d(in_features=64, out_features=64, bias=True)
    (27): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): PHConv2d(in_features=64, out_features=64, bias=True)
    (30): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): PHConv2d(in_features=64, out_features=64, bias=True)
    (33): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): PHConv2d(in_features=64, out_features=64, bias=True)
    (36): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): PHConv2d(in_features=64, out_features=64, bias=True)
    (39): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): PHConv2d(in_features=64, out_features=64, bias=True)
    (42): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): PHConv2d(in_features=64, out_features=64, bias=True)
    (45): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): PHConv2d(in_features=64, out_features=4, bias=True)
  )
)

23-04-29 10:28:02.011 : 
 |  mean  |  min   |  max   |  std   || shape               
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.0.bias
 | -0.018 | -0.415 |  0.406 |  0.233 | torch.Size([4, 4, 4]) || model.0.A
 | -0.002 | -0.182 |  0.181 |  0.107 | torch.Size([4, 16, 1, 3, 3]) || model.0.F
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.2.bias
 | -0.008 | -0.409 |  0.427 |  0.243 | torch.Size([4, 4, 4]) || model.2.A
 |  0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.2.F
 |  0.545 |  0.102 |  0.965 |  0.247 | torch.Size([64]) || model.3.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.3.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.5.bias
 |  0.040 | -0.416 |  0.432 |  0.247 | torch.Size([4, 4, 4]) || model.5.A
 | -0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.5.F
 |  0.608 |  0.141 |  0.998 |  0.261 | torch.Size([64]) || model.6.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.6.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.8.bias
 |  0.001 | -0.433 |  0.426 |  0.235 | torch.Size([4, 4, 4]) || model.8.A
 | -0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.8.F
 |  0.524 |  0.113 |  0.997 |  0.254 | torch.Size([64]) || model.9.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.9.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.11.bias
 | -0.036 | -0.430 |  0.427 |  0.261 | torch.Size([4, 4, 4]) || model.11.A
 |  0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.11.F
 |  0.520 |  0.100 |  0.981 |  0.263 | torch.Size([64]) || model.12.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.12.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.14.bias
 | -0.003 | -0.422 |  0.395 |  0.242 | torch.Size([4, 4, 4]) || model.14.A
 |  0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.14.F
 |  0.514 |  0.112 |  0.971 |  0.275 | torch.Size([64]) || model.15.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.15.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.17.bias
 |  0.006 | -0.433 |  0.418 |  0.237 | torch.Size([4, 4, 4]) || model.17.A
 | -0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.17.F
 |  0.468 |  0.103 |  0.933 |  0.237 | torch.Size([64]) || model.18.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.18.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.20.bias
 |  0.017 | -0.397 |  0.423 |  0.218 | torch.Size([4, 4, 4]) || model.20.A
 |  0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.20.F
 |  0.543 |  0.104 |  1.000 |  0.240 | torch.Size([64]) || model.21.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.21.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.23.bias
 | -0.026 | -0.420 |  0.397 |  0.229 | torch.Size([4, 4, 4]) || model.23.A
 |  0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.23.F
 |  0.523 |  0.122 |  0.997 |  0.266 | torch.Size([64]) || model.24.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.24.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.26.bias
 |  0.022 | -0.429 |  0.422 |  0.235 | torch.Size([4, 4, 4]) || model.26.A
 | -0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.26.F
 |  0.526 |  0.109 |  0.980 |  0.260 | torch.Size([64]) || model.27.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.27.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.29.bias
 | -0.037 | -0.431 |  0.429 |  0.244 | torch.Size([4, 4, 4]) || model.29.A
 | -0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.29.F
 |  0.517 |  0.108 |  0.955 |  0.238 | torch.Size([64]) || model.30.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.30.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.32.bias
 |  0.019 | -0.431 |  0.430 |  0.249 | torch.Size([4, 4, 4]) || model.32.A
 |  0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.32.F
 |  0.523 |  0.102 |  0.988 |  0.267 | torch.Size([64]) || model.33.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.33.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.35.bias
 |  0.041 | -0.420 |  0.422 |  0.241 | torch.Size([4, 4, 4]) || model.35.A
 |  0.001 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.35.F
 |  0.575 |  0.107 |  0.992 |  0.284 | torch.Size([64]) || model.36.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.36.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.38.bias
 |  0.047 | -0.428 |  0.424 |  0.256 | torch.Size([4, 4, 4]) || model.38.A
 | -0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.38.F
 |  0.566 |  0.112 |  0.996 |  0.276 | torch.Size([64]) || model.39.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.39.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.41.bias
 |  0.041 | -0.426 |  0.428 |  0.226 | torch.Size([4, 4, 4]) || model.41.A
 | -0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.41.F
 |  0.530 |  0.113 |  0.993 |  0.274 | torch.Size([64]) || model.42.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.42.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.44.bias
 | -0.008 | -0.398 |  0.397 |  0.246 | torch.Size([4, 4, 4]) || model.44.A
 | -0.000 | -0.046 |  0.046 |  0.026 | torch.Size([4, 16, 16, 3, 3]) || model.44.F
 |  0.532 |  0.110 |  0.999 |  0.268 | torch.Size([64]) || model.45.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.45.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([4]) || model.47.bias
 | -0.021 | -0.410 |  0.412 |  0.260 | torch.Size([4, 4, 4]) || model.47.A
 | -0.002 | -0.090 |  0.090 |  0.052 | torch.Size([4, 1, 16, 3, 3]) || model.47.F

23-04-29 10:28:43.906 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 3
    out_nc: 3
    nc: 64
    nb: 20
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-29 10:28:43.906 : Random seed: 8795
23-04-29 10:28:43.914 : Number of train images: 200, iters: 4
23-04-29 10:29:42.857 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 3
    out_nc: 3
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-29 10:29:42.858 : Random seed: 5508
23-04-29 10:29:42.867 : Number of train images: 200, iters: 4
23-04-29 10:29:43.191 : 
Networks name: DnCNN
Params number: 183145
Net structure:
DnCNN(
  (model): Sequential(
    (0): PHConv2d(in_features=3, out_features=64, bias=True)
    (1): ReLU(inplace=True)
    (2): PHConv2d(in_features=64, out_features=64, bias=True)
    (3): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): PHConv2d(in_features=64, out_features=64, bias=True)
    (6): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): PHConv2d(in_features=64, out_features=64, bias=True)
    (9): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): PHConv2d(in_features=64, out_features=64, bias=True)
    (12): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): PHConv2d(in_features=64, out_features=64, bias=True)
    (15): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): PHConv2d(in_features=64, out_features=64, bias=True)
    (18): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): PHConv2d(in_features=64, out_features=64, bias=True)
    (21): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): PHConv2d(in_features=64, out_features=64, bias=True)
    (24): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): PHConv2d(in_features=64, out_features=64, bias=True)
    (27): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): PHConv2d(in_features=64, out_features=64, bias=True)
    (30): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): PHConv2d(in_features=64, out_features=64, bias=True)
    (33): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): PHConv2d(in_features=64, out_features=64, bias=True)
    (36): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): PHConv2d(in_features=64, out_features=64, bias=True)
    (39): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): PHConv2d(in_features=64, out_features=64, bias=True)
    (42): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): PHConv2d(in_features=64, out_features=64, bias=True)
    (45): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): PHConv2d(in_features=64, out_features=3, bias=True)
  )
)

23-04-29 10:29:43.240 : 
 |  mean  |  min   |  max   |  std   || shape               
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.0.bias
 |  0.079 | -0.521 |  0.533 |  0.325 | torch.Size([3, 3, 3]) || model.0.A
 | -0.005 | -0.166 |  0.166 |  0.099 | torch.Size([3, 21, 1, 3, 3]) || model.0.F
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.2.bias
 |  0.108 | -0.538 |  0.576 |  0.335 | torch.Size([3, 3, 3]) || model.2.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.2.F
 |  0.592 |  0.111 |  0.983 |  0.255 | torch.Size([64]) || model.3.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.3.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.5.bias
 |  0.117 | -0.504 |  0.542 |  0.273 | torch.Size([3, 3, 3]) || model.5.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.5.F
 |  0.575 |  0.123 |  0.998 |  0.252 | torch.Size([64]) || model.6.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.6.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.8.bias
 | -0.007 | -0.504 |  0.501 |  0.342 | torch.Size([3, 3, 3]) || model.8.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.8.F
 |  0.519 |  0.121 |  0.993 |  0.266 | torch.Size([64]) || model.9.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.9.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.11.bias
 |  0.025 | -0.572 |  0.543 |  0.336 | torch.Size([3, 3, 3]) || model.11.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.11.F
 |  0.552 |  0.101 |  0.978 |  0.264 | torch.Size([64]) || model.12.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.12.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.14.bias
 |  0.092 | -0.543 |  0.536 |  0.296 | torch.Size([3, 3, 3]) || model.14.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.14.F
 |  0.531 |  0.119 |  0.992 |  0.253 | torch.Size([64]) || model.15.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.15.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.17.bias
 | -0.008 | -0.554 |  0.567 |  0.370 | torch.Size([3, 3, 3]) || model.17.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.17.F
 |  0.561 |  0.112 |  0.998 |  0.241 | torch.Size([64]) || model.18.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.18.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.20.bias
 | -0.078 | -0.564 |  0.309 |  0.266 | torch.Size([3, 3, 3]) || model.20.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.20.F
 |  0.545 |  0.118 |  0.967 |  0.246 | torch.Size([64]) || model.21.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.21.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.23.bias
 |  0.058 | -0.551 |  0.575 |  0.334 | torch.Size([3, 3, 3]) || model.23.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.23.F
 |  0.541 |  0.120 |  0.968 |  0.237 | torch.Size([64]) || model.24.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.24.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.26.bias
 | -0.002 | -0.559 |  0.529 |  0.398 | torch.Size([3, 3, 3]) || model.26.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.26.F
 |  0.550 |  0.101 |  0.987 |  0.261 | torch.Size([64]) || model.27.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.27.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.29.bias
 | -0.018 | -0.533 |  0.482 |  0.329 | torch.Size([3, 3, 3]) || model.29.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.29.F
 |  0.515 |  0.114 |  0.993 |  0.281 | torch.Size([64]) || model.30.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.30.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.32.bias
 |  0.056 | -0.478 |  0.530 |  0.293 | torch.Size([3, 3, 3]) || model.32.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.32.F
 |  0.572 |  0.104 |  0.991 |  0.280 | torch.Size([64]) || model.33.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.33.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.35.bias
 |  0.005 | -0.521 |  0.559 |  0.347 | torch.Size([3, 3, 3]) || model.35.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.35.F
 |  0.548 |  0.104 |  0.990 |  0.262 | torch.Size([64]) || model.36.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.36.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.38.bias
 | -0.064 | -0.511 |  0.485 |  0.287 | torch.Size([3, 3, 3]) || model.38.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.38.F
 |  0.577 |  0.105 |  0.970 |  0.255 | torch.Size([64]) || model.39.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.39.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.41.bias
 |  0.000 | -0.576 |  0.563 |  0.351 | torch.Size([3, 3, 3]) || model.41.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.41.F
 |  0.541 |  0.101 |  0.982 |  0.262 | torch.Size([64]) || model.42.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.42.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.44.bias
 |  0.041 | -0.511 |  0.567 |  0.340 | torch.Size([3, 3, 3]) || model.44.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.44.F
 |  0.515 |  0.101 |  0.997 |  0.264 | torch.Size([64]) || model.45.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.45.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([3]) || model.47.bias
 |  0.036 | -0.481 |  0.488 |  0.321 | torch.Size([3, 3, 3]) || model.47.A
 |  0.000 | -0.089 |  0.089 |  0.052 | torch.Size([3, 1, 21, 3, 3]) || model.47.F

23-04-29 14:41:43.100 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 3
    out_nc: 3
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-29 14:41:43.385 : Random seed: 798
23-04-29 14:41:44.671 : Number of train images: 200, iters: 4
23-04-29 14:41:49.047 : 
Networks name: DnCNN
Params number: 183145
Net structure:
DnCNN(
  (model): Sequential(
    (0): PHConv2d(in_features=3, out_features=64, bias=True)
    (1): ReLU(inplace=True)
    (2): PHConv2d(in_features=64, out_features=64, bias=True)
    (3): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): PHConv2d(in_features=64, out_features=64, bias=True)
    (6): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): PHConv2d(in_features=64, out_features=64, bias=True)
    (9): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): PHConv2d(in_features=64, out_features=64, bias=True)
    (12): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): PHConv2d(in_features=64, out_features=64, bias=True)
    (15): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): PHConv2d(in_features=64, out_features=64, bias=True)
    (18): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): PHConv2d(in_features=64, out_features=64, bias=True)
    (21): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): PHConv2d(in_features=64, out_features=64, bias=True)
    (24): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): PHConv2d(in_features=64, out_features=64, bias=True)
    (27): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): PHConv2d(in_features=64, out_features=64, bias=True)
    (30): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): PHConv2d(in_features=64, out_features=64, bias=True)
    (33): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): PHConv2d(in_features=64, out_features=64, bias=True)
    (36): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): PHConv2d(in_features=64, out_features=64, bias=True)
    (39): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): PHConv2d(in_features=64, out_features=64, bias=True)
    (42): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): PHConv2d(in_features=64, out_features=64, bias=True)
    (45): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): PHConv2d(in_features=64, out_features=3, bias=True)
  )
)

23-04-29 14:41:49.193 : 
 |  mean  |  min   |  max   |  std   || shape               
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.0.bias
 | -0.045 | -0.561 |  0.561 |  0.317 | torch.Size([3, 3, 3]) || model.0.A
 | -0.003 | -0.167 |  0.166 |  0.096 | torch.Size([3, 21, 1, 3, 3]) || model.0.F
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.2.bias
 | -0.000 | -0.569 |  0.549 |  0.306 | torch.Size([3, 3, 3]) || model.2.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.2.F
 |  0.496 |  0.146 |  0.954 |  0.229 | torch.Size([64]) || model.3.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.3.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.5.bias
 |  0.015 | -0.491 |  0.556 |  0.309 | torch.Size([3, 3, 3]) || model.5.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.5.F
 |  0.520 |  0.102 |  0.998 |  0.258 | torch.Size([64]) || model.6.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.6.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.8.bias
 |  0.005 | -0.570 |  0.529 |  0.349 | torch.Size([3, 3, 3]) || model.8.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.8.F
 |  0.544 |  0.131 |  0.980 |  0.239 | torch.Size([64]) || model.9.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.9.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.11.bias
 |  0.124 | -0.570 |  0.567 |  0.336 | torch.Size([3, 3, 3]) || model.11.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.11.F
 |  0.571 |  0.107 |  0.991 |  0.266 | torch.Size([64]) || model.12.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.12.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.14.bias
 | -0.058 | -0.491 |  0.468 |  0.248 | torch.Size([3, 3, 3]) || model.14.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.14.F
 |  0.524 |  0.129 |  0.998 |  0.257 | torch.Size([64]) || model.15.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.15.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.17.bias
 |  0.131 | -0.512 |  0.563 |  0.382 | torch.Size([3, 3, 3]) || model.17.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.17.F
 |  0.501 |  0.116 |  0.966 |  0.249 | torch.Size([64]) || model.18.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.18.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.20.bias
 | -0.051 | -0.576 |  0.563 |  0.332 | torch.Size([3, 3, 3]) || model.20.A
 |  0.001 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.20.F
 |  0.521 |  0.108 |  0.991 |  0.265 | torch.Size([64]) || model.21.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.21.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.23.bias
 | -0.008 | -0.567 |  0.503 |  0.334 | torch.Size([3, 3, 3]) || model.23.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.23.F
 |  0.548 |  0.105 |  0.958 |  0.231 | torch.Size([64]) || model.24.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.24.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.26.bias
 | -0.133 | -0.575 |  0.326 |  0.289 | torch.Size([3, 3, 3]) || model.26.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.26.F
 |  0.496 |  0.110 |  0.996 |  0.251 | torch.Size([64]) || model.27.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.27.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.29.bias
 | -0.040 | -0.459 |  0.441 |  0.272 | torch.Size([3, 3, 3]) || model.29.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.29.F
 |  0.511 |  0.131 |  0.966 |  0.236 | torch.Size([64]) || model.30.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.30.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.32.bias
 |  0.096 | -0.525 |  0.529 |  0.307 | torch.Size([3, 3, 3]) || model.32.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.32.F
 |  0.529 |  0.105 |  0.983 |  0.260 | torch.Size([64]) || model.33.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.33.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.35.bias
 |  0.006 | -0.542 |  0.485 |  0.339 | torch.Size([3, 3, 3]) || model.35.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.35.F
 |  0.533 |  0.113 |  0.992 |  0.266 | torch.Size([64]) || model.36.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.36.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.38.bias
 | -0.020 | -0.570 |  0.503 |  0.314 | torch.Size([3, 3, 3]) || model.38.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.38.F
 |  0.612 |  0.124 |  0.999 |  0.249 | torch.Size([64]) || model.39.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.39.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.41.bias
 | -0.030 | -0.576 |  0.532 |  0.353 | torch.Size([3, 3, 3]) || model.41.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.41.F
 |  0.574 |  0.117 |  0.971 |  0.251 | torch.Size([64]) || model.42.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.42.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.44.bias
 | -0.068 | -0.557 |  0.545 |  0.358 | torch.Size([3, 3, 3]) || model.44.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.44.F
 |  0.613 |  0.111 |  0.982 |  0.222 | torch.Size([64]) || model.45.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.45.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([3]) || model.47.bias
 |  0.020 | -0.512 |  0.573 |  0.329 | torch.Size([3, 3, 3]) || model.47.A
 |  0.001 | -0.089 |  0.089 |  0.051 | torch.Size([3, 1, 21, 3, 3]) || model.47.F

23-04-29 14:43:24.958 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 3
    out_nc: 3
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-29 14:43:24.959 : Random seed: 2540
23-04-29 14:43:24.966 : Number of train images: 200, iters: 4
23-04-29 14:43:25.333 : 
Networks name: DnCNN
Params number: 183145
Net structure:
DnCNN(
  (model): Sequential(
    (0): PHConv2d(in_features=3, out_features=64, bias=True)
    (1): ReLU(inplace=True)
    (2): PHConv2d(in_features=64, out_features=64, bias=True)
    (3): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): PHConv2d(in_features=64, out_features=64, bias=True)
    (6): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): PHConv2d(in_features=64, out_features=64, bias=True)
    (9): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): PHConv2d(in_features=64, out_features=64, bias=True)
    (12): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): PHConv2d(in_features=64, out_features=64, bias=True)
    (15): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): PHConv2d(in_features=64, out_features=64, bias=True)
    (18): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): PHConv2d(in_features=64, out_features=64, bias=True)
    (21): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): PHConv2d(in_features=64, out_features=64, bias=True)
    (24): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): PHConv2d(in_features=64, out_features=64, bias=True)
    (27): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): PHConv2d(in_features=64, out_features=64, bias=True)
    (30): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): PHConv2d(in_features=64, out_features=64, bias=True)
    (33): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): PHConv2d(in_features=64, out_features=64, bias=True)
    (36): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): PHConv2d(in_features=64, out_features=64, bias=True)
    (39): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): PHConv2d(in_features=64, out_features=64, bias=True)
    (42): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): PHConv2d(in_features=64, out_features=64, bias=True)
    (45): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): PHConv2d(in_features=64, out_features=3, bias=True)
  )
)

23-04-29 14:43:25.368 : 
 |  mean  |  min   |  max   |  std   || shape               
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.0.bias
 | -0.069 | -0.560 |  0.424 |  0.349 | torch.Size([3, 3, 3]) || model.0.A
 |  0.008 | -0.166 |  0.166 |  0.096 | torch.Size([3, 21, 1, 3, 3]) || model.0.F
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.2.bias
 |  0.087 | -0.524 |  0.505 |  0.325 | torch.Size([3, 3, 3]) || model.2.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.2.F
 |  0.556 |  0.115 |  0.996 |  0.252 | torch.Size([64]) || model.3.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.3.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.5.bias
 | -0.059 | -0.554 |  0.374 |  0.295 | torch.Size([3, 3, 3]) || model.5.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.5.F
 |  0.617 |  0.105 |  0.995 |  0.261 | torch.Size([64]) || model.6.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.6.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.8.bias
 |  0.122 | -0.524 |  0.519 |  0.305 | torch.Size([3, 3, 3]) || model.8.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.8.F
 |  0.576 |  0.122 |  0.997 |  0.261 | torch.Size([64]) || model.9.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.9.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.11.bias
 |  0.008 | -0.560 |  0.521 |  0.306 | torch.Size([3, 3, 3]) || model.11.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.11.F
 |  0.544 |  0.115 |  0.992 |  0.263 | torch.Size([64]) || model.12.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.12.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.14.bias
 | -0.017 | -0.575 |  0.561 |  0.402 | torch.Size([3, 3, 3]) || model.14.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.14.F
 |  0.542 |  0.124 |  0.986 |  0.260 | torch.Size([64]) || model.15.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.15.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.17.bias
 | -0.031 | -0.564 |  0.558 |  0.354 | torch.Size([3, 3, 3]) || model.17.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.17.F
 |  0.530 |  0.105 |  0.980 |  0.251 | torch.Size([64]) || model.18.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.18.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.20.bias
 | -0.070 | -0.549 |  0.500 |  0.348 | torch.Size([3, 3, 3]) || model.20.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.20.F
 |  0.467 |  0.111 |  0.994 |  0.226 | torch.Size([64]) || model.21.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.21.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.23.bias
 | -0.064 | -0.559 |  0.517 |  0.320 | torch.Size([3, 3, 3]) || model.23.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.23.F
 |  0.551 |  0.147 |  0.973 |  0.246 | torch.Size([64]) || model.24.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.24.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.26.bias
 | -0.051 | -0.531 |  0.519 |  0.372 | torch.Size([3, 3, 3]) || model.26.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.26.F
 |  0.603 |  0.104 |  0.984 |  0.278 | torch.Size([64]) || model.27.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.27.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.29.bias
 |  0.014 | -0.515 |  0.508 |  0.293 | torch.Size([3, 3, 3]) || model.29.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.29.F
 |  0.521 |  0.102 |  0.929 |  0.252 | torch.Size([64]) || model.30.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.30.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.32.bias
 |  0.077 | -0.520 |  0.569 |  0.350 | torch.Size([3, 3, 3]) || model.32.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.32.F
 |  0.490 |  0.125 |  0.999 |  0.239 | torch.Size([64]) || model.33.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.33.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.35.bias
 | -0.045 | -0.573 |  0.502 |  0.360 | torch.Size([3, 3, 3]) || model.35.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.35.F
 |  0.525 |  0.150 |  0.979 |  0.269 | torch.Size([64]) || model.36.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.36.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.38.bias
 |  0.063 | -0.546 |  0.479 |  0.331 | torch.Size([3, 3, 3]) || model.38.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.38.F
 |  0.493 |  0.106 |  0.997 |  0.253 | torch.Size([64]) || model.39.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.39.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.41.bias
 |  0.008 | -0.534 |  0.566 |  0.356 | torch.Size([3, 3, 3]) || model.41.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.41.F
 |  0.607 |  0.101 |  0.996 |  0.253 | torch.Size([64]) || model.42.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.42.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.44.bias
 | -0.023 | -0.546 |  0.518 |  0.323 | torch.Size([3, 3, 3]) || model.44.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.44.F
 |  0.550 |  0.107 |  0.985 |  0.260 | torch.Size([64]) || model.45.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.45.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([3]) || model.47.bias
 | -0.069 | -0.502 |  0.490 |  0.273 | torch.Size([3, 3, 3]) || model.47.A
 | -0.004 | -0.089 |  0.088 |  0.053 | torch.Size([3, 1, 21, 3, 3]) || model.47.F

23-04-29 14:43:52.249 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 3
    out_nc: 3
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-29 14:43:52.250 : Random seed: 5733
23-04-29 14:43:52.258 : Number of train images: 200, iters: 4
23-04-29 14:43:52.660 : 
Networks name: DnCNN
Params number: 183145
Net structure:
DnCNN(
  (model): Sequential(
    (0): PHConv2d(in_features=3, out_features=64, bias=True)
    (1): ReLU(inplace=True)
    (2): PHConv2d(in_features=64, out_features=64, bias=True)
    (3): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): PHConv2d(in_features=64, out_features=64, bias=True)
    (6): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): PHConv2d(in_features=64, out_features=64, bias=True)
    (9): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): PHConv2d(in_features=64, out_features=64, bias=True)
    (12): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): PHConv2d(in_features=64, out_features=64, bias=True)
    (15): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): PHConv2d(in_features=64, out_features=64, bias=True)
    (18): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): PHConv2d(in_features=64, out_features=64, bias=True)
    (21): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): PHConv2d(in_features=64, out_features=64, bias=True)
    (24): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): PHConv2d(in_features=64, out_features=64, bias=True)
    (27): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): PHConv2d(in_features=64, out_features=64, bias=True)
    (30): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): PHConv2d(in_features=64, out_features=64, bias=True)
    (33): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): PHConv2d(in_features=64, out_features=64, bias=True)
    (36): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): PHConv2d(in_features=64, out_features=64, bias=True)
    (39): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): PHConv2d(in_features=64, out_features=64, bias=True)
    (42): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): PHConv2d(in_features=64, out_features=64, bias=True)
    (45): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): PHConv2d(in_features=64, out_features=3, bias=True)
  )
)

23-04-29 14:43:52.704 : 
 |  mean  |  min   |  max   |  std   || shape               
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.0.bias
 | -0.009 | -0.570 |  0.552 |  0.356 | torch.Size([3, 3, 3]) || model.0.A
 | -0.005 | -0.166 |  0.166 |  0.096 | torch.Size([3, 21, 1, 3, 3]) || model.0.F
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.2.bias
 |  0.067 | -0.570 |  0.570 |  0.376 | torch.Size([3, 3, 3]) || model.2.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.2.F
 |  0.561 |  0.107 |  0.991 |  0.273 | torch.Size([64]) || model.3.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.3.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.5.bias
 |  0.054 | -0.575 |  0.484 |  0.296 | torch.Size([3, 3, 3]) || model.5.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.5.F
 |  0.494 |  0.102 |  0.989 |  0.247 | torch.Size([64]) || model.6.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.6.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.8.bias
 | -0.103 | -0.567 |  0.526 |  0.327 | torch.Size([3, 3, 3]) || model.8.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.8.F
 |  0.495 |  0.107 |  0.963 |  0.247 | torch.Size([64]) || model.9.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.9.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.11.bias
 |  0.074 | -0.467 |  0.526 |  0.279 | torch.Size([3, 3, 3]) || model.11.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.11.F
 |  0.564 |  0.110 |  0.977 |  0.274 | torch.Size([64]) || model.12.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.12.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.14.bias
 | -0.041 | -0.486 |  0.439 |  0.308 | torch.Size([3, 3, 3]) || model.14.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.14.F
 |  0.555 |  0.113 |  0.996 |  0.254 | torch.Size([64]) || model.15.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.15.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.17.bias
 | -0.003 | -0.541 |  0.573 |  0.389 | torch.Size([3, 3, 3]) || model.17.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.17.F
 |  0.565 |  0.106 |  0.991 |  0.266 | torch.Size([64]) || model.18.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.18.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.20.bias
 |  0.049 | -0.572 |  0.548 |  0.365 | torch.Size([3, 3, 3]) || model.20.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.20.F
 |  0.608 |  0.124 |  0.988 |  0.268 | torch.Size([64]) || model.21.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.21.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.23.bias
 |  0.009 | -0.540 |  0.573 |  0.317 | torch.Size([3, 3, 3]) || model.23.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.23.F
 |  0.572 |  0.100 |  0.995 |  0.241 | torch.Size([64]) || model.24.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.24.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.26.bias
 | -0.000 | -0.496 |  0.522 |  0.327 | torch.Size([3, 3, 3]) || model.26.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.26.F
 |  0.547 |  0.122 |  0.981 |  0.255 | torch.Size([64]) || model.27.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.27.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.29.bias
 | -0.027 | -0.560 |  0.534 |  0.337 | torch.Size([3, 3, 3]) || model.29.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.29.F
 |  0.551 |  0.117 |  0.997 |  0.263 | torch.Size([64]) || model.30.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.30.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.32.bias
 |  0.041 | -0.564 |  0.552 |  0.334 | torch.Size([3, 3, 3]) || model.32.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.32.F
 |  0.582 |  0.130 |  0.990 |  0.263 | torch.Size([64]) || model.33.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.33.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.35.bias
 |  0.080 | -0.419 |  0.564 |  0.324 | torch.Size([3, 3, 3]) || model.35.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.35.F
 |  0.577 |  0.110 |  0.989 |  0.275 | torch.Size([64]) || model.36.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.36.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.38.bias
 | -0.027 | -0.476 |  0.558 |  0.317 | torch.Size([3, 3, 3]) || model.38.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.38.F
 |  0.594 |  0.109 |  0.994 |  0.270 | torch.Size([64]) || model.39.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.39.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.41.bias
 | -0.039 | -0.534 |  0.566 |  0.328 | torch.Size([3, 3, 3]) || model.41.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.41.F
 |  0.543 |  0.107 |  0.999 |  0.276 | torch.Size([64]) || model.42.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.42.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.44.bias
 |  0.027 | -0.536 |  0.577 |  0.320 | torch.Size([3, 3, 3]) || model.44.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.44.F
 |  0.587 |  0.141 |  0.967 |  0.234 | torch.Size([64]) || model.45.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.45.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([3]) || model.47.bias
 |  0.061 | -0.563 |  0.560 |  0.345 | torch.Size([3, 3, 3]) || model.47.A
 | -0.001 | -0.089 |  0.089 |  0.051 | torch.Size([3, 1, 21, 3, 3]) || model.47.F

23-04-29 14:44:24.345 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 3
    out_nc: 3
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-29 14:44:24.346 : Random seed: 8464
23-04-29 14:44:24.354 : Number of train images: 200, iters: 4
23-04-29 14:44:24.717 : 
Networks name: DnCNN
Params number: 183145
Net structure:
DnCNN(
  (model): Sequential(
    (0): PHConv2d(in_features=3, out_features=64, bias=True)
    (1): ReLU(inplace=True)
    (2): PHConv2d(in_features=64, out_features=64, bias=True)
    (3): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): PHConv2d(in_features=64, out_features=64, bias=True)
    (6): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): PHConv2d(in_features=64, out_features=64, bias=True)
    (9): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): PHConv2d(in_features=64, out_features=64, bias=True)
    (12): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): PHConv2d(in_features=64, out_features=64, bias=True)
    (15): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): PHConv2d(in_features=64, out_features=64, bias=True)
    (18): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): PHConv2d(in_features=64, out_features=64, bias=True)
    (21): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): PHConv2d(in_features=64, out_features=64, bias=True)
    (24): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): PHConv2d(in_features=64, out_features=64, bias=True)
    (27): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): PHConv2d(in_features=64, out_features=64, bias=True)
    (30): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): PHConv2d(in_features=64, out_features=64, bias=True)
    (33): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): PHConv2d(in_features=64, out_features=64, bias=True)
    (36): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): PHConv2d(in_features=64, out_features=64, bias=True)
    (39): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): PHConv2d(in_features=64, out_features=64, bias=True)
    (42): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): PHConv2d(in_features=64, out_features=64, bias=True)
    (45): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): PHConv2d(in_features=64, out_features=3, bias=True)
  )
)

23-04-29 14:44:24.751 : 
 |  mean  |  min   |  max   |  std   || shape               
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.0.bias
 |  0.005 | -0.531 |  0.576 |  0.362 | torch.Size([3, 3, 3]) || model.0.A
 | -0.006 | -0.167 |  0.165 |  0.094 | torch.Size([3, 21, 1, 3, 3]) || model.0.F
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.2.bias
 | -0.085 | -0.569 |  0.529 |  0.323 | torch.Size([3, 3, 3]) || model.2.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.2.F
 |  0.599 |  0.129 |  0.998 |  0.266 | torch.Size([64]) || model.3.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.3.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.5.bias
 | -0.008 | -0.560 |  0.552 |  0.317 | torch.Size([3, 3, 3]) || model.5.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.5.F
 |  0.580 |  0.123 |  0.979 |  0.281 | torch.Size([64]) || model.6.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.6.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.8.bias
 | -0.051 | -0.548 |  0.460 |  0.309 | torch.Size([3, 3, 3]) || model.8.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.8.F
 |  0.553 |  0.138 |  0.971 |  0.225 | torch.Size([64]) || model.9.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.9.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.11.bias
 | -0.147 | -0.555 |  0.450 |  0.257 | torch.Size([3, 3, 3]) || model.11.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.11.F
 |  0.517 |  0.107 |  0.983 |  0.251 | torch.Size([64]) || model.12.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.12.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.14.bias
 | -0.044 | -0.523 |  0.575 |  0.381 | torch.Size([3, 3, 3]) || model.14.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.14.F
 |  0.526 |  0.102 |  0.998 |  0.257 | torch.Size([64]) || model.15.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.15.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.17.bias
 |  0.057 | -0.576 |  0.550 |  0.312 | torch.Size([3, 3, 3]) || model.17.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.17.F
 |  0.555 |  0.125 |  0.991 |  0.276 | torch.Size([64]) || model.18.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.18.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.20.bias
 |  0.000 | -0.554 |  0.527 |  0.329 | torch.Size([3, 3, 3]) || model.20.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.20.F
 |  0.612 |  0.130 |  0.994 |  0.258 | torch.Size([64]) || model.21.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.21.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.23.bias
 |  0.159 | -0.402 |  0.569 |  0.258 | torch.Size([3, 3, 3]) || model.23.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.23.F
 |  0.586 |  0.101 |  0.982 |  0.275 | torch.Size([64]) || model.24.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.24.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.26.bias
 | -0.007 | -0.557 |  0.534 |  0.395 | torch.Size([3, 3, 3]) || model.26.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.26.F
 |  0.596 |  0.101 |  0.991 |  0.250 | torch.Size([64]) || model.27.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.27.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.29.bias
 |  0.047 | -0.478 |  0.556 |  0.315 | torch.Size([3, 3, 3]) || model.29.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.29.F
 |  0.551 |  0.107 |  0.998 |  0.248 | torch.Size([64]) || model.30.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.30.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.32.bias
 | -0.084 | -0.536 |  0.517 |  0.330 | torch.Size([3, 3, 3]) || model.32.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.32.F
 |  0.515 |  0.109 |  0.952 |  0.268 | torch.Size([64]) || model.33.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.33.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.35.bias
 | -0.052 | -0.571 |  0.563 |  0.388 | torch.Size([3, 3, 3]) || model.35.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.35.F
 |  0.502 |  0.106 |  0.991 |  0.268 | torch.Size([64]) || model.36.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.36.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.38.bias
 |  0.091 | -0.483 |  0.564 |  0.351 | torch.Size([3, 3, 3]) || model.38.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.38.F
 |  0.546 |  0.100 |  0.998 |  0.276 | torch.Size([64]) || model.39.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.39.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.41.bias
 | -0.031 | -0.570 |  0.538 |  0.359 | torch.Size([3, 3, 3]) || model.41.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.41.F
 |  0.546 |  0.102 |  0.960 |  0.270 | torch.Size([64]) || model.42.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.42.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.44.bias
 |  0.000 | -0.573 |  0.566 |  0.394 | torch.Size([3, 3, 3]) || model.44.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.44.F
 |  0.541 |  0.138 |  0.991 |  0.248 | torch.Size([64]) || model.45.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.45.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([3]) || model.47.bias
 | -0.047 | -0.546 |  0.562 |  0.372 | torch.Size([3, 3, 3]) || model.47.A
 |  0.000 | -0.089 |  0.089 |  0.050 | torch.Size([3, 1, 21, 3, 3]) || model.47.F

23-04-29 14:49:55.565 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 3
    out_nc: 3
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-29 14:49:55.565 : Random seed: 9010
23-04-29 14:49:55.574 : Number of train images: 200, iters: 4
23-04-29 14:49:55.941 : 
Networks name: DnCNN
Params number: 183145
Net structure:
DnCNN(
  (model): Sequential(
    (0): PHConv2d(in_features=3, out_features=64, bias=True)
    (1): ReLU(inplace=True)
    (2): PHConv2d(in_features=64, out_features=64, bias=True)
    (3): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): PHConv2d(in_features=64, out_features=64, bias=True)
    (6): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): PHConv2d(in_features=64, out_features=64, bias=True)
    (9): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): PHConv2d(in_features=64, out_features=64, bias=True)
    (12): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): PHConv2d(in_features=64, out_features=64, bias=True)
    (15): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): PHConv2d(in_features=64, out_features=64, bias=True)
    (18): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): PHConv2d(in_features=64, out_features=64, bias=True)
    (21): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): PHConv2d(in_features=64, out_features=64, bias=True)
    (24): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): PHConv2d(in_features=64, out_features=64, bias=True)
    (27): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): PHConv2d(in_features=64, out_features=64, bias=True)
    (30): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): PHConv2d(in_features=64, out_features=64, bias=True)
    (33): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): PHConv2d(in_features=64, out_features=64, bias=True)
    (36): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): PHConv2d(in_features=64, out_features=64, bias=True)
    (39): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): PHConv2d(in_features=64, out_features=64, bias=True)
    (42): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): PHConv2d(in_features=64, out_features=64, bias=True)
    (45): BatchNorm2d(64, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): PHConv2d(in_features=64, out_features=3, bias=True)
  )
)

23-04-29 14:49:55.975 : 
 |  mean  |  min   |  max   |  std   || shape               
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.0.bias
 |  0.063 | -0.516 |  0.550 |  0.372 | torch.Size([3, 3, 3]) || model.0.A
 |  0.005 | -0.167 |  0.167 |  0.093 | torch.Size([3, 21, 1, 3, 3]) || model.0.F
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.2.bias
 | -0.038 | -0.548 |  0.571 |  0.280 | torch.Size([3, 3, 3]) || model.2.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.2.F
 |  0.595 |  0.122 |  0.987 |  0.245 | torch.Size([64]) || model.3.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.3.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.3.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.5.bias
 |  0.004 | -0.488 |  0.526 |  0.347 | torch.Size([3, 3, 3]) || model.5.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.5.F
 |  0.564 |  0.108 |  0.992 |  0.255 | torch.Size([64]) || model.6.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.6.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.6.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.8.bias
 | -0.002 | -0.553 |  0.568 |  0.347 | torch.Size([3, 3, 3]) || model.8.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.8.F
 |  0.568 |  0.125 |  0.983 |  0.261 | torch.Size([64]) || model.9.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.9.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.9.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.11.bias
 | -0.025 | -0.566 |  0.572 |  0.341 | torch.Size([3, 3, 3]) || model.11.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.11.F
 |  0.538 |  0.102 |  0.991 |  0.252 | torch.Size([64]) || model.12.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.12.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.12.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.14.bias
 |  0.036 | -0.552 |  0.545 |  0.298 | torch.Size([3, 3, 3]) || model.14.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.14.F
 |  0.534 |  0.110 |  0.985 |  0.272 | torch.Size([64]) || model.15.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.15.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.15.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.17.bias
 | -0.008 | -0.513 |  0.429 |  0.285 | torch.Size([3, 3, 3]) || model.17.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.17.F
 |  0.551 |  0.104 |  0.997 |  0.270 | torch.Size([64]) || model.18.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.18.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.18.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.20.bias
 | -0.006 | -0.550 |  0.542 |  0.377 | torch.Size([3, 3, 3]) || model.20.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.20.F
 |  0.599 |  0.112 |  0.979 |  0.263 | torch.Size([64]) || model.21.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.21.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.21.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.23.bias
 |  0.043 | -0.576 |  0.521 |  0.409 | torch.Size([3, 3, 3]) || model.23.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.23.F
 |  0.561 |  0.105 |  0.976 |  0.270 | torch.Size([64]) || model.24.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.24.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.24.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.26.bias
 | -0.149 | -0.564 |  0.548 |  0.341 | torch.Size([3, 3, 3]) || model.26.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.26.F
 |  0.588 |  0.100 |  0.972 |  0.266 | torch.Size([64]) || model.27.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.27.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.27.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.29.bias
 |  0.020 | -0.491 |  0.492 |  0.366 | torch.Size([3, 3, 3]) || model.29.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.29.F
 |  0.572 |  0.107 |  0.985 |  0.245 | torch.Size([64]) || model.30.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.30.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.30.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.32.bias
 |  0.019 | -0.556 |  0.575 |  0.326 | torch.Size([3, 3, 3]) || model.32.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.32.F
 |  0.598 |  0.133 |  0.993 |  0.250 | torch.Size([64]) || model.33.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.33.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.33.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.35.bias
 |  0.023 | -0.551 |  0.501 |  0.297 | torch.Size([3, 3, 3]) || model.35.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.35.F
 |  0.535 |  0.105 |  0.985 |  0.281 | torch.Size([64]) || model.36.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.36.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.36.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.38.bias
 |  0.101 | -0.440 |  0.577 |  0.324 | torch.Size([3, 3, 3]) || model.38.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.38.F
 |  0.583 |  0.118 |  0.996 |  0.250 | torch.Size([64]) || model.39.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.39.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.39.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.41.bias
 |  0.066 | -0.545 |  0.542 |  0.344 | torch.Size([3, 3, 3]) || model.41.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.41.F
 |  0.608 |  0.105 |  0.966 |  0.241 | torch.Size([64]) || model.42.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.42.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.42.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.44.bias
 |  0.047 | -0.564 |  0.563 |  0.331 | torch.Size([3, 3, 3]) || model.44.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.44.F
 |  0.602 |  0.108 |  0.989 |  0.268 | torch.Size([64]) || model.45.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.45.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([64]) || model.45.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([3]) || model.47.bias
 | -0.028 | -0.545 |  0.537 |  0.303 | torch.Size([3, 3, 3]) || model.47.A
 |  0.003 | -0.089 |  0.088 |  0.051 | torch.Size([3, 1, 21, 3, 3]) || model.47.F

23-04-29 19:31:30.320 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 3
    out_nc: 3
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-29 19:31:30.554 : Random seed: 8825
23-04-29 19:31:31.809 : Number of train images: 200, iters: 4
23-04-29 19:31:35.977 : 
Networks name: DnCNN
Params number: 183115
Net structure:
DnCNN(
  (model): Sequential(
    (0): PHConv2d(in_features=3, out_features=64, bias=True)
    (1): ReLU(inplace=True)
    (2): PHConv2d(in_features=64, out_features=64, bias=True)
    (3): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): PHConv2d(in_features=64, out_features=64, bias=True)
    (6): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): PHConv2d(in_features=64, out_features=64, bias=True)
    (9): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): PHConv2d(in_features=64, out_features=64, bias=True)
    (12): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): PHConv2d(in_features=64, out_features=64, bias=True)
    (15): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): PHConv2d(in_features=64, out_features=64, bias=True)
    (18): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): PHConv2d(in_features=64, out_features=64, bias=True)
    (21): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): PHConv2d(in_features=64, out_features=64, bias=True)
    (24): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): PHConv2d(in_features=64, out_features=64, bias=True)
    (27): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): PHConv2d(in_features=64, out_features=64, bias=True)
    (30): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): PHConv2d(in_features=64, out_features=64, bias=True)
    (33): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): PHConv2d(in_features=64, out_features=64, bias=True)
    (36): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): PHConv2d(in_features=64, out_features=64, bias=True)
    (39): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): PHConv2d(in_features=64, out_features=64, bias=True)
    (42): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): PHConv2d(in_features=64, out_features=64, bias=True)
    (45): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): PHConv2d(in_features=64, out_features=3, bias=True)
  )
)

23-04-29 19:31:36.106 : 
 |  mean  |  min   |  max   |  std   || shape               
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.0.bias
 | -0.061 | -0.547 |  0.509 |  0.339 | torch.Size([3, 3, 3]) || model.0.A
 | -0.001 | -0.167 |  0.167 |  0.097 | torch.Size([3, 21, 1, 3, 3]) || model.0.F
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.2.bias
 |  0.053 | -0.492 |  0.557 |  0.303 | torch.Size([3, 3, 3]) || model.2.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.2.F
 |  0.519 |  0.113 |  0.988 |  0.274 | torch.Size([63]) || model.3.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.3.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.3.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.3.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.5.bias
 |  0.143 | -0.473 |  0.576 |  0.299 | torch.Size([3, 3, 3]) || model.5.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.5.F
 |  0.583 |  0.105 |  0.992 |  0.267 | torch.Size([63]) || model.6.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.6.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.6.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.6.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.8.bias
 | -0.035 | -0.511 |  0.525 |  0.323 | torch.Size([3, 3, 3]) || model.8.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.8.F
 |  0.542 |  0.115 |  0.995 |  0.268 | torch.Size([63]) || model.9.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.9.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.9.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.9.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.11.bias
 |  0.025 | -0.551 |  0.559 |  0.338 | torch.Size([3, 3, 3]) || model.11.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.11.F
 |  0.578 |  0.113 |  0.997 |  0.250 | torch.Size([63]) || model.12.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.12.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.12.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.12.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.14.bias
 |  0.095 | -0.539 |  0.523 |  0.335 | torch.Size([3, 3, 3]) || model.14.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.14.F
 |  0.522 |  0.145 |  1.000 |  0.245 | torch.Size([63]) || model.15.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.15.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.15.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.15.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.17.bias
 |  0.018 | -0.546 |  0.565 |  0.347 | torch.Size([3, 3, 3]) || model.17.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.17.F
 |  0.605 |  0.132 |  0.973 |  0.236 | torch.Size([63]) || model.18.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.18.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.18.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.18.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.20.bias
 |  0.058 | -0.546 |  0.550 |  0.348 | torch.Size([3, 3, 3]) || model.20.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.20.F
 |  0.577 |  0.116 |  0.974 |  0.265 | torch.Size([63]) || model.21.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.21.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.21.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.21.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.23.bias
 |  0.105 | -0.565 |  0.562 |  0.371 | torch.Size([3, 3, 3]) || model.23.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.23.F
 |  0.583 |  0.116 |  0.994 |  0.279 | torch.Size([63]) || model.24.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.24.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.24.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.24.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.26.bias
 |  0.050 | -0.550 |  0.480 |  0.311 | torch.Size([3, 3, 3]) || model.26.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.26.F
 |  0.519 |  0.105 |  0.977 |  0.278 | torch.Size([63]) || model.27.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.27.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.27.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.27.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.29.bias
 | -0.033 | -0.563 |  0.576 |  0.363 | torch.Size([3, 3, 3]) || model.29.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.29.F
 |  0.544 |  0.132 |  0.995 |  0.261 | torch.Size([63]) || model.30.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.30.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.30.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.30.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.32.bias
 |  0.016 | -0.577 |  0.495 |  0.371 | torch.Size([3, 3, 3]) || model.32.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.32.F
 |  0.523 |  0.104 |  0.998 |  0.250 | torch.Size([63]) || model.33.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.33.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.33.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.33.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.35.bias
 |  0.143 | -0.574 |  0.518 |  0.318 | torch.Size([3, 3, 3]) || model.35.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.35.F
 |  0.553 |  0.133 |  0.998 |  0.279 | torch.Size([63]) || model.36.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.36.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.36.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.36.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.38.bias
 | -0.009 | -0.576 |  0.511 |  0.362 | torch.Size([3, 3, 3]) || model.38.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.38.F
 |  0.483 |  0.102 |  0.986 |  0.274 | torch.Size([63]) || model.39.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.39.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.39.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.39.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.41.bias
 |  0.031 | -0.557 |  0.564 |  0.354 | torch.Size([3, 3, 3]) || model.41.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.41.F
 |  0.542 |  0.102 |  0.989 |  0.272 | torch.Size([63]) || model.42.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.42.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.42.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.42.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.44.bias
 | -0.038 | -0.568 |  0.558 |  0.344 | torch.Size([3, 3, 3]) || model.44.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.44.F
 |  0.504 |  0.104 |  0.979 |  0.279 | torch.Size([63]) || model.45.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.45.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.45.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.45.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([3]) || model.47.bias
 |  0.044 | -0.518 |  0.494 |  0.313 | torch.Size([3, 3, 3]) || model.47.A
 |  0.002 | -0.089 |  0.089 |  0.051 | torch.Size([3, 1, 21, 3, 3]) || model.47.F

23-04-29 19:33:06.212 : <epoch: 66, iter:     200, lr:1.000e-04> G_loss: 7.454e-02 
23-04-29 19:34:32.223 : <epoch:133, iter:     400, lr:1.000e-04> G_loss: 6.826e-02 
23-04-29 19:35:55.934 : <epoch:199, iter:     600, lr:1.000e-04> G_loss: 6.896e-02 
23-04-29 19:37:21.399 : <epoch:266, iter:     800, lr:1.000e-04> G_loss: 6.481e-02 
23-04-29 19:38:02.537 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 3
    out_nc: 3
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-29 19:38:02.538 : Random seed: 7176
23-04-29 19:38:02.545 : Number of train images: 200, iters: 4
23-04-29 19:38:02.879 : 
Networks name: DnCNN
Params number: 183115
Net structure:
DnCNN(
  (model): Sequential(
    (0): PHConv2d(in_features=3, out_features=64, bias=True)
    (1): ReLU(inplace=True)
    (2): PHConv2d(in_features=64, out_features=64, bias=True)
    (3): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): PHConv2d(in_features=64, out_features=64, bias=True)
    (6): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): PHConv2d(in_features=64, out_features=64, bias=True)
    (9): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): PHConv2d(in_features=64, out_features=64, bias=True)
    (12): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): PHConv2d(in_features=64, out_features=64, bias=True)
    (15): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): PHConv2d(in_features=64, out_features=64, bias=True)
    (18): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): PHConv2d(in_features=64, out_features=64, bias=True)
    (21): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): PHConv2d(in_features=64, out_features=64, bias=True)
    (24): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): PHConv2d(in_features=64, out_features=64, bias=True)
    (27): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): PHConv2d(in_features=64, out_features=64, bias=True)
    (30): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): PHConv2d(in_features=64, out_features=64, bias=True)
    (33): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): PHConv2d(in_features=64, out_features=64, bias=True)
    (36): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): PHConv2d(in_features=64, out_features=64, bias=True)
    (39): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): PHConv2d(in_features=64, out_features=64, bias=True)
    (42): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): PHConv2d(in_features=64, out_features=64, bias=True)
    (45): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): PHConv2d(in_features=64, out_features=3, bias=True)
  )
)

23-04-29 19:38:02.913 : 
 |  mean  |  min   |  max   |  std   || shape               
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.0.bias
 | -0.024 | -0.572 |  0.532 |  0.376 | torch.Size([3, 3, 3]) || model.0.A
 |  0.004 | -0.166 |  0.166 |  0.096 | torch.Size([3, 21, 1, 3, 3]) || model.0.F
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.2.bias
 |  0.067 | -0.496 |  0.524 |  0.316 | torch.Size([3, 3, 3]) || model.2.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.2.F
 |  0.511 |  0.105 |  0.978 |  0.264 | torch.Size([63]) || model.3.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.3.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.3.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.3.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.5.bias
 | -0.030 | -0.568 |  0.454 |  0.308 | torch.Size([3, 3, 3]) || model.5.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.5.F
 |  0.534 |  0.112 |  0.973 |  0.266 | torch.Size([63]) || model.6.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.6.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.6.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.6.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.8.bias
 | -0.014 | -0.565 |  0.570 |  0.379 | torch.Size([3, 3, 3]) || model.8.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.8.F
 |  0.569 |  0.107 |  0.993 |  0.250 | torch.Size([63]) || model.9.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.9.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.9.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.9.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.11.bias
 |  0.046 | -0.451 |  0.559 |  0.307 | torch.Size([3, 3, 3]) || model.11.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.11.F
 |  0.560 |  0.102 |  0.973 |  0.278 | torch.Size([63]) || model.12.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.12.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.12.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.12.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.14.bias
 | -0.040 | -0.548 |  0.560 |  0.318 | torch.Size([3, 3, 3]) || model.14.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.14.F
 |  0.505 |  0.130 |  0.943 |  0.251 | torch.Size([63]) || model.15.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.15.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.15.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.15.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.17.bias
 | -0.039 | -0.547 |  0.527 |  0.359 | torch.Size([3, 3, 3]) || model.17.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.17.F
 |  0.537 |  0.102 |  1.000 |  0.260 | torch.Size([63]) || model.18.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.18.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.18.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.18.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.20.bias
 |  0.202 | -0.553 |  0.574 |  0.318 | torch.Size([3, 3, 3]) || model.20.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.20.F
 |  0.539 |  0.113 |  0.991 |  0.257 | torch.Size([63]) || model.21.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.21.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.21.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.21.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.23.bias
 | -0.071 | -0.538 |  0.569 |  0.321 | torch.Size([3, 3, 3]) || model.23.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.23.F
 |  0.613 |  0.127 |  0.985 |  0.258 | torch.Size([63]) || model.24.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.24.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.24.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.24.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.26.bias
 |  0.006 | -0.564 |  0.554 |  0.331 | torch.Size([3, 3, 3]) || model.26.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.26.F
 |  0.541 |  0.111 |  0.935 |  0.234 | torch.Size([63]) || model.27.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.27.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.27.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.27.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.29.bias
 |  0.080 | -0.550 |  0.553 |  0.348 | torch.Size([3, 3, 3]) || model.29.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.29.F
 |  0.544 |  0.103 |  0.969 |  0.261 | torch.Size([63]) || model.30.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.30.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.30.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.30.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.32.bias
 |  0.222 | -0.294 |  0.516 |  0.268 | torch.Size([3, 3, 3]) || model.32.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.32.F
 |  0.622 |  0.108 |  0.994 |  0.256 | torch.Size([63]) || model.33.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.33.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.33.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.33.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.35.bias
 |  0.007 | -0.572 |  0.495 |  0.361 | torch.Size([3, 3, 3]) || model.35.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.35.F
 |  0.582 |  0.108 |  0.997 |  0.260 | torch.Size([63]) || model.36.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.36.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.36.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.36.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.38.bias
 |  0.017 | -0.574 |  0.541 |  0.353 | torch.Size([3, 3, 3]) || model.38.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.38.F
 |  0.494 |  0.109 |  0.990 |  0.257 | torch.Size([63]) || model.39.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.39.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.39.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.39.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.41.bias
 | -0.003 | -0.516 |  0.431 |  0.295 | torch.Size([3, 3, 3]) || model.41.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.41.F
 |  0.563 |  0.132 |  1.000 |  0.270 | torch.Size([63]) || model.42.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.42.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.42.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.42.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.44.bias
 |  0.006 | -0.551 |  0.571 |  0.347 | torch.Size([3, 3, 3]) || model.44.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.44.F
 |  0.535 |  0.104 |  0.976 |  0.239 | torch.Size([63]) || model.45.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.45.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.45.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.45.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([3]) || model.47.bias
 |  0.179 | -0.483 |  0.560 |  0.315 | torch.Size([3, 3, 3]) || model.47.A
 |  0.000 | -0.088 |  0.089 |  0.050 | torch.Size([3, 1, 21, 3, 3]) || model.47.F

23-04-29 19:39:30.805 : <epoch: 66, iter:     200, lr:1.000e-04> G_loss: 7.752e-02 
23-04-29 19:40:59.413 : <epoch:133, iter:     400, lr:1.000e-04> G_loss: 6.631e-02 
23-04-29 19:42:25.184 : <epoch:199, iter:     600, lr:1.000e-04> G_loss: 5.475e-02 
23-04-29 19:43:52.786 : <epoch:266, iter:     800, lr:1.000e-04> G_loss: 4.297e-02 
23-04-29 19:45:19.047 : <epoch:333, iter:   1,000, lr:1.000e-04> G_loss: 3.993e-02 
23-04-29 19:46:45.681 : <epoch:399, iter:   1,200, lr:1.000e-04> G_loss: 4.047e-02 
23-04-29 19:48:13.118 : <epoch:466, iter:   1,400, lr:1.000e-04> G_loss: 3.570e-02 
23-04-29 19:49:39.497 : <epoch:533, iter:   1,600, lr:1.000e-04> G_loss: 3.490e-02 
23-04-29 19:51:06.359 : <epoch:599, iter:   1,800, lr:1.000e-04> G_loss: 3.292e-02 
23-04-29 19:52:31.613 : <epoch:666, iter:   2,000, lr:1.000e-04> G_loss: 3.484e-02 
23-04-29 19:53:58.521 : <epoch:733, iter:   2,200, lr:1.000e-04> G_loss: 3.257e-02 
23-04-29 19:55:24.180 : <epoch:799, iter:   2,400, lr:1.000e-04> G_loss: 3.131e-02 
23-04-29 19:56:52.028 : <epoch:866, iter:   2,600, lr:1.000e-04> G_loss: 3.343e-02 
23-04-29 19:58:17.714 : <epoch:933, iter:   2,800, lr:1.000e-04> G_loss: 3.172e-02 
23-04-29 19:59:43.451 : <epoch:999, iter:   3,000, lr:1.000e-04> G_loss: 3.156e-02 
23-04-29 19:59:43.497 : Saving the final model.
23-04-29 19:59:43.514 : End of training.
23-04-29 20:10:22.329 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 3
    out_nc: 3
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-29 20:10:22.330 : Random seed: 9813
23-04-29 20:10:22.338 : Number of train images: 200, iters: 4
23-04-29 20:10:22.736 : 
Networks name: DnCNN
Params number: 183115
Net structure:
DnCNN(
  (model): Sequential(
    (0): PHConv2d(in_features=3, out_features=64, bias=True)
    (1): ReLU(inplace=True)
    (2): PHConv2d(in_features=64, out_features=64, bias=True)
    (3): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): PHConv2d(in_features=64, out_features=64, bias=True)
    (6): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): PHConv2d(in_features=64, out_features=64, bias=True)
    (9): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): PHConv2d(in_features=64, out_features=64, bias=True)
    (12): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): PHConv2d(in_features=64, out_features=64, bias=True)
    (15): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): PHConv2d(in_features=64, out_features=64, bias=True)
    (18): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): PHConv2d(in_features=64, out_features=64, bias=True)
    (21): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): PHConv2d(in_features=64, out_features=64, bias=True)
    (24): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): PHConv2d(in_features=64, out_features=64, bias=True)
    (27): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): PHConv2d(in_features=64, out_features=64, bias=True)
    (30): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): PHConv2d(in_features=64, out_features=64, bias=True)
    (33): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): PHConv2d(in_features=64, out_features=64, bias=True)
    (36): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): PHConv2d(in_features=64, out_features=64, bias=True)
    (39): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): PHConv2d(in_features=64, out_features=64, bias=True)
    (42): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): PHConv2d(in_features=64, out_features=64, bias=True)
    (45): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): PHConv2d(in_features=64, out_features=3, bias=True)
  )
)

23-04-29 20:10:22.789 : 
 |  mean  |  min   |  max   |  std   || shape               
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.0.bias
 | -0.043 | -0.542 |  0.565 |  0.349 | torch.Size([3, 3, 3]) || model.0.A
 |  0.002 | -0.166 |  0.166 |  0.097 | torch.Size([3, 21, 1, 3, 3]) || model.0.F
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.2.bias
 |  0.016 | -0.557 |  0.527 |  0.322 | torch.Size([3, 3, 3]) || model.2.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.2.F
 |  0.540 |  0.114 |  0.993 |  0.278 | torch.Size([63]) || model.3.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.3.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.3.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.3.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.5.bias
 | -0.155 | -0.496 |  0.548 |  0.287 | torch.Size([3, 3, 3]) || model.5.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.5.F
 |  0.571 |  0.116 |  0.998 |  0.269 | torch.Size([63]) || model.6.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.6.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.6.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.6.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.8.bias
 | -0.037 | -0.576 |  0.512 |  0.319 | torch.Size([3, 3, 3]) || model.8.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.8.F
 |  0.529 |  0.102 |  0.980 |  0.258 | torch.Size([63]) || model.9.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.9.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.9.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.9.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.11.bias
 |  0.010 | -0.568 |  0.573 |  0.399 | torch.Size([3, 3, 3]) || model.11.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.11.F
 |  0.513 |  0.102 |  1.000 |  0.281 | torch.Size([63]) || model.12.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.12.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.12.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.12.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.14.bias
 |  0.031 | -0.547 |  0.522 |  0.327 | torch.Size([3, 3, 3]) || model.14.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.14.F
 |  0.491 |  0.100 |  0.990 |  0.289 | torch.Size([63]) || model.15.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.15.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.15.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.15.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.17.bias
 | -0.048 | -0.571 |  0.498 |  0.318 | torch.Size([3, 3, 3]) || model.17.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.17.F
 |  0.534 |  0.135 |  0.973 |  0.234 | torch.Size([63]) || model.18.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.18.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.18.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.18.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.20.bias
 | -0.007 | -0.573 |  0.572 |  0.375 | torch.Size([3, 3, 3]) || model.20.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.20.F
 |  0.540 |  0.103 |  0.989 |  0.273 | torch.Size([63]) || model.21.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.21.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.21.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.21.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.23.bias
 |  0.143 | -0.577 |  0.575 |  0.310 | torch.Size([3, 3, 3]) || model.23.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.23.F
 |  0.546 |  0.105 |  0.986 |  0.226 | torch.Size([63]) || model.24.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.24.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.24.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.24.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.26.bias
 |  0.002 | -0.520 |  0.496 |  0.319 | torch.Size([3, 3, 3]) || model.26.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.26.F
 |  0.483 |  0.105 |  0.976 |  0.256 | torch.Size([63]) || model.27.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.27.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.27.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.27.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.29.bias
 | -0.056 | -0.540 |  0.477 |  0.294 | torch.Size([3, 3, 3]) || model.29.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.29.F
 |  0.548 |  0.110 |  0.997 |  0.262 | torch.Size([63]) || model.30.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.30.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.30.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.30.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.32.bias
 | -0.213 | -0.549 |  0.478 |  0.272 | torch.Size([3, 3, 3]) || model.32.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.32.F
 |  0.497 |  0.122 |  0.998 |  0.255 | torch.Size([63]) || model.33.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.33.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.33.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.33.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.35.bias
 | -0.089 | -0.573 |  0.517 |  0.340 | torch.Size([3, 3, 3]) || model.35.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.35.F
 |  0.521 |  0.117 |  0.995 |  0.264 | torch.Size([63]) || model.36.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.36.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.36.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.36.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.38.bias
 |  0.135 | -0.446 |  0.577 |  0.305 | torch.Size([3, 3, 3]) || model.38.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.38.F
 |  0.566 |  0.136 |  1.000 |  0.278 | torch.Size([63]) || model.39.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.39.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.39.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.39.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.41.bias
 | -0.043 | -0.568 |  0.534 |  0.337 | torch.Size([3, 3, 3]) || model.41.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.41.F
 |  0.578 |  0.105 |  0.997 |  0.281 | torch.Size([63]) || model.42.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.42.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.42.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.42.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.44.bias
 | -0.020 | -0.554 |  0.564 |  0.345 | torch.Size([3, 3, 3]) || model.44.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.44.F
 |  0.521 |  0.114 |  0.961 |  0.253 | torch.Size([63]) || model.45.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.45.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.45.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.45.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([3]) || model.47.bias
 | -0.005 | -0.472 |  0.576 |  0.359 | torch.Size([3, 3, 3]) || model.47.A
 | -0.001 | -0.089 |  0.089 |  0.050 | torch.Size([3, 1, 21, 3, 3]) || model.47.F

23-04-29 20:11:51.331 : <epoch: 66, iter:     200, lr:1.000e-04> G_loss: 7.721e-02 
23-04-29 20:13:17.815 : <epoch:133, iter:     400, lr:1.000e-04> G_loss: 6.869e-02 
23-04-29 20:14:44.565 : <epoch:199, iter:     600, lr:1.000e-04> G_loss: 5.572e-02 
23-04-29 20:16:11.329 : <epoch:266, iter:     800, lr:1.000e-04> G_loss: 5.218e-02 
23-04-29 20:17:39.603 : <epoch:333, iter:   1,000, lr:1.000e-04> G_loss: 4.995e-02 
23-04-29 20:19:04.745 : <epoch:399, iter:   1,200, lr:1.000e-04> G_loss: 4.830e-02 
23-04-29 20:20:31.780 : <epoch:466, iter:   1,400, lr:1.000e-04> G_loss: 4.853e-02 
23-04-29 20:21:58.718 : <epoch:533, iter:   1,600, lr:1.000e-04> G_loss: 4.755e-02 
23-04-29 20:23:25.049 : <epoch:599, iter:   1,800, lr:1.000e-04> G_loss: 4.775e-02 
23-04-29 20:24:51.020 : <epoch:666, iter:   2,000, lr:1.000e-04> G_loss: 4.606e-02 
23-04-29 20:26:17.903 : <epoch:733, iter:   2,200, lr:1.000e-04> G_loss: 3.888e-02 
23-04-29 20:27:42.496 : <epoch:799, iter:   2,400, lr:1.000e-04> G_loss: 3.392e-02 
23-04-29 20:29:10.844 : <epoch:866, iter:   2,600, lr:1.000e-04> G_loss: 3.357e-02 
23-04-29 20:30:35.999 : <epoch:933, iter:   2,800, lr:1.000e-04> G_loss: 2.952e-02 
23-04-29 20:32:02.068 : <epoch:999, iter:   3,000, lr:1.000e-04> G_loss: 3.131e-02 
23-04-29 20:33:27.583 : <epoch:1066, iter:   3,200, lr:1.000e-04> G_loss: 3.196e-02 
23-04-29 20:34:55.284 : <epoch:1133, iter:   3,400, lr:1.000e-04> G_loss: 3.141e-02 
23-04-29 20:36:20.381 : <epoch:1199, iter:   3,600, lr:1.000e-04> G_loss: 2.971e-02 
23-04-29 20:37:47.793 : <epoch:1266, iter:   3,800, lr:1.000e-04> G_loss: 3.043e-02 
23-04-29 20:39:13.024 : <epoch:1333, iter:   4,000, lr:1.000e-04> G_loss: 3.128e-02 
23-04-29 20:40:38.636 : <epoch:1399, iter:   4,200, lr:1.000e-04> G_loss: 2.979e-02 
23-04-29 20:42:03.590 : <epoch:1466, iter:   4,400, lr:1.000e-04> G_loss: 2.982e-02 
23-04-29 20:43:30.556 : <epoch:1533, iter:   4,600, lr:1.000e-04> G_loss: 3.090e-02 
23-04-29 20:44:56.189 : <epoch:1599, iter:   4,800, lr:1.000e-04> G_loss: 2.866e-02 
23-04-29 20:46:23.920 : <epoch:1666, iter:   5,000, lr:1.000e-04> G_loss: 2.885e-02 
23-04-29 20:46:23.920 : Saving the model.
23-04-29 20:46:24.930 : ---1--> 101085.png | 27.31dB
23-04-29 20:46:25.529 : ---2--> 101087.png | 30.39dB
23-04-29 20:46:26.129 : ---3--> 102061.png | 30.30dB
23-04-29 20:46:26.785 : ---4--> 103070.png | 30.91dB
23-04-29 20:46:27.403 : ---5--> 105025.png | 28.60dB
23-04-29 20:46:28.000 : ---6--> 106024.png | 32.50dB
23-04-29 20:46:28.640 : ---7--> 108005.png | 29.29dB
23-04-29 20:46:29.244 : ---8--> 108070.png | 27.81dB
23-04-29 20:46:29.874 : ---9--> 108082.png | 29.87dB
23-04-29 20:46:30.505 : --10--> 109053.png | 30.29dB
23-04-29 20:46:31.117 : --11--> 119082.png | 28.63dB
23-04-29 20:46:31.734 : --12-->  12084.png | 28.24dB
23-04-29 20:46:32.359 : --13--> 123074.png | 30.16dB
23-04-29 20:46:33.152 : --14--> 126007.png | 30.18dB
23-04-29 20:46:33.788 : --15--> 130026.png | 28.76dB
23-04-29 20:46:34.438 : --16--> 134035.png | 28.53dB
23-04-29 20:46:35.197 : --17-->  14037.png | 31.65dB
23-04-29 20:46:35.837 : --18--> 143090.png | 31.76dB
23-04-29 20:46:36.583 : --19--> 145086.png | 28.61dB
23-04-29 20:46:37.194 : --20--> 147091.png | 29.54dB
23-04-29 20:46:38.081 : --21--> 148026.png | 27.48dB
23-04-29 20:46:38.697 : --22--> 148089.png | 28.10dB
23-04-29 20:46:39.382 : --23--> 157055.png | 29.26dB
23-04-29 20:46:39.993 : --24--> 159008.png | 29.41dB
23-04-29 20:46:40.644 : --25--> 160068.png | 30.38dB
23-04-29 20:46:41.365 : --26-->  16077.png | 29.17dB
23-04-29 20:46:42.061 : --27--> 163085.png | 30.43dB
23-04-29 20:46:42.810 : --28--> 167062.png | 31.29dB
23-04-29 20:46:43.482 : --29--> 167083.png | 26.27dB
23-04-29 20:46:44.179 : --30--> 170057.png | 30.24dB
23-04-29 20:46:44.787 : --31--> 175032.png | 26.16dB
23-04-29 20:46:45.417 : --32--> 175043.png | 27.86dB
23-04-29 20:46:46.086 : --33--> 182053.png | 28.93dB
23-04-29 20:46:46.680 : --34--> 189080.png | 32.38dB
23-04-29 20:46:47.343 : --35-->  19021.png | 29.09dB
23-04-29 20:46:48.027 : --36--> 196073.png | 27.93dB
23-04-29 20:46:48.740 : --37--> 197017.png | 29.38dB
23-04-29 20:46:49.433 : --38--> 208001.png | 29.55dB
23-04-29 20:46:50.106 : --39--> 210088.png | 31.04dB
23-04-29 20:46:50.862 : --40-->  21077.png | 29.40dB
23-04-29 20:46:51.436 : --41--> 216081.png | 28.49dB
23-04-29 20:46:52.298 : --42--> 219090.png | 30.03dB
23-04-29 20:46:52.921 : --43--> 220075.png | 30.09dB
23-04-29 20:46:53.633 : --44--> 223061.png | 28.09dB
23-04-29 20:46:54.217 : --45--> 227092.png | 31.98dB
23-04-29 20:46:54.886 : --46--> 229036.png | 27.74dB
23-04-29 20:46:55.589 : --47--> 236037.png | 27.81dB
23-04-29 20:46:56.206 : --48-->  24077.png | 28.83dB
23-04-29 20:46:56.911 : --49--> 241004.png | 31.74dB
23-04-29 20:46:57.627 : --50--> 241048.png | 27.89dB
23-04-29 20:46:58.294 : --51--> 253027.png | 28.71dB
23-04-29 20:46:58.942 : --52--> 253055.png | 31.79dB
23-04-29 20:46:59.562 : --53--> 260058.png | 31.21dB
23-04-29 20:47:00.205 : --54--> 271035.png | 29.54dB
23-04-29 20:47:00.863 : --55--> 285079.png | 28.51dB
23-04-29 20:47:01.496 : --56--> 291000.png | 25.69dB
23-04-29 20:47:02.364 : --57--> 295087.png | 28.85dB
23-04-29 20:47:03.018 : --58--> 296007.png | 30.88dB
23-04-29 20:47:03.684 : --59--> 296059.png | 30.58dB
23-04-29 20:47:04.309 : --60--> 299086.png | 30.83dB
23-04-29 20:47:04.914 : --61--> 300091.png | 30.61dB
23-04-29 20:47:05.590 : --62--> 302008.png | 31.22dB
23-04-29 20:47:06.221 : --63--> 304034.png | 27.87dB
23-04-29 20:47:06.874 : --64--> 304074.png | 28.07dB
23-04-29 20:47:07.534 : --65--> 306005.png | 29.33dB
23-04-29 20:47:08.193 : --66-->   3096.png | 33.86dB
23-04-29 20:47:08.839 : --67-->  33039.png | 26.61dB
23-04-29 20:47:09.494 : --68--> 351093.png | 27.87dB
23-04-29 20:47:09.511 : <epoch:1666, iter:   5,000, Average PSNR : 29.44dB

23-04-29 20:48:37.832 : <epoch:1733, iter:   5,200, lr:1.000e-04> G_loss: 3.229e-02 
23-04-29 20:50:02.915 : <epoch:1799, iter:   5,400, lr:1.000e-04> G_loss: 2.893e-02 
23-04-29 20:51:29.918 : <epoch:1866, iter:   5,600, lr:1.000e-04> G_loss: 2.970e-02 
23-04-29 20:52:56.957 : <epoch:1933, iter:   5,800, lr:1.000e-04> G_loss: 2.787e-02 
23-04-29 20:54:23.230 : <epoch:1999, iter:   6,000, lr:1.000e-04> G_loss: 2.976e-02 
23-04-29 20:55:49.341 : <epoch:2066, iter:   6,200, lr:1.000e-04> G_loss: 2.994e-02 
23-04-29 20:57:17.625 : <epoch:2133, iter:   6,400, lr:1.000e-04> G_loss: 2.965e-02 
23-04-29 20:58:42.662 : <epoch:2199, iter:   6,600, lr:1.000e-04> G_loss: 2.837e-02 
23-04-29 21:00:11.005 : <epoch:2266, iter:   6,800, lr:1.000e-04> G_loss: 2.910e-02 
23-04-29 21:01:37.962 : <epoch:2333, iter:   7,000, lr:1.000e-04> G_loss: 2.937e-02 
23-04-29 21:03:05.257 : <epoch:2399, iter:   7,200, lr:1.000e-04> G_loss: 2.800e-02 
23-04-29 21:04:31.077 : <epoch:2466, iter:   7,400, lr:1.000e-04> G_loss: 2.723e-02 
23-04-29 21:05:58.576 : <epoch:2533, iter:   7,600, lr:1.000e-04> G_loss: 2.984e-02 
23-04-29 21:07:23.389 : <epoch:2599, iter:   7,800, lr:1.000e-04> G_loss: 2.955e-02 
23-04-29 21:08:51.619 : <epoch:2666, iter:   8,000, lr:1.000e-04> G_loss: 2.838e-02 
23-04-29 21:10:17.434 : <epoch:2733, iter:   8,200, lr:1.000e-04> G_loss: 2.555e-02 
23-04-29 21:11:43.519 : <epoch:2799, iter:   8,400, lr:1.000e-04> G_loss: 2.819e-02 
23-04-29 21:13:08.887 : <epoch:2866, iter:   8,600, lr:1.000e-04> G_loss: 2.748e-02 
23-04-29 21:14:36.326 : <epoch:2933, iter:   8,800, lr:1.000e-04> G_loss: 2.585e-02 
23-04-29 21:16:01.468 : <epoch:2999, iter:   9,000, lr:1.000e-04> G_loss: 2.925e-02 
23-04-29 21:17:28.513 : <epoch:3066, iter:   9,200, lr:1.000e-04> G_loss: 2.931e-02 
23-04-29 21:18:54.868 : <epoch:3133, iter:   9,400, lr:1.000e-04> G_loss: 2.564e-02 
23-04-29 21:20:22.070 : <epoch:3199, iter:   9,600, lr:1.000e-04> G_loss: 2.690e-02 
23-04-29 21:21:49.978 : <epoch:3266, iter:   9,800, lr:1.000e-04> G_loss: 2.722e-02 
23-04-29 21:23:18.430 : <epoch:3333, iter:  10,000, lr:1.000e-04> G_loss: 2.778e-02 
23-04-29 21:23:18.431 : Saving the model.
23-04-29 21:23:18.906 : ---1--> 101085.png | 27.52dB
23-04-29 21:23:19.231 : ---2--> 101087.png | 30.73dB
23-04-29 21:23:19.557 : ---3--> 102061.png | 30.67dB
23-04-29 21:23:19.880 : ---4--> 103070.png | 31.20dB
23-04-29 21:23:20.539 : ---5--> 105025.png | 28.88dB
23-04-29 21:23:20.868 : ---6--> 106024.png | 32.74dB
23-04-29 21:23:21.174 : ---7--> 108005.png | 29.53dB
23-04-29 21:23:21.494 : ---8--> 108070.png | 28.01dB
23-04-29 21:23:21.843 : ---9--> 108082.png | 30.20dB
23-04-29 21:23:22.204 : --10--> 109053.png | 30.56dB
23-04-29 21:23:22.556 : --11--> 119082.png | 28.98dB
23-04-29 21:23:22.945 : --12-->  12084.png | 28.51dB
23-04-29 21:23:23.345 : --13--> 123074.png | 30.45dB
23-04-29 21:23:23.804 : --14--> 126007.png | 30.76dB
23-04-29 21:23:24.168 : --15--> 130026.png | 28.99dB
23-04-29 21:23:24.520 : --16--> 134035.png | 28.88dB
23-04-29 21:23:24.907 : --17-->  14037.png | 32.36dB
23-04-29 21:23:25.267 : --18--> 143090.png | 32.34dB
23-04-29 21:23:25.602 : --19--> 145086.png | 28.93dB
23-04-29 21:23:25.993 : --20--> 147091.png | 29.82dB
23-04-29 21:23:26.323 : --21--> 148026.png | 27.77dB
23-04-29 21:23:26.696 : --22--> 148089.png | 28.37dB
23-04-29 21:23:27.086 : --23--> 157055.png | 29.52dB
23-04-29 21:23:27.470 : --24--> 159008.png | 29.79dB
23-04-29 21:23:27.845 : --25--> 160068.png | 30.82dB
23-04-29 21:23:28.176 : --26-->  16077.png | 29.48dB
23-04-29 21:23:28.648 : --27--> 163085.png | 30.74dB
23-04-29 21:23:29.016 : --28--> 167062.png | 31.98dB
23-04-29 21:23:29.356 : --29--> 167083.png | 26.53dB
23-04-29 21:23:30.022 : --30--> 170057.png | 30.53dB
23-04-29 21:23:30.385 : --31--> 175032.png | 26.32dB
23-04-29 21:23:30.806 : --32--> 175043.png | 28.10dB
23-04-29 21:23:31.224 : --33--> 182053.png | 29.22dB
23-04-29 21:23:31.631 : --34--> 189080.png | 32.63dB
23-04-29 21:23:32.039 : --35-->  19021.png | 29.35dB
23-04-29 21:23:32.347 : --36--> 196073.png | 28.61dB
23-04-29 21:23:32.734 : --37--> 197017.png | 29.56dB
23-04-29 21:23:33.108 : --38--> 208001.png | 29.80dB
23-04-29 21:23:33.503 : --39--> 210088.png | 31.47dB
23-04-29 21:23:33.821 : --40-->  21077.png | 29.78dB
23-04-29 21:23:34.169 : --41--> 216081.png | 28.83dB
23-04-29 21:23:34.608 : --42--> 219090.png | 30.34dB
23-04-29 21:23:34.960 : --43--> 220075.png | 30.55dB
23-04-29 21:23:35.327 : --44--> 223061.png | 28.38dB
23-04-29 21:23:35.789 : --45--> 227092.png | 32.65dB
23-04-29 21:23:36.195 : --46--> 229036.png | 27.97dB
23-04-29 21:23:36.649 : --47--> 236037.png | 28.07dB
23-04-29 21:23:37.020 : --48-->  24077.png | 29.17dB
23-04-29 21:23:37.444 : --49--> 241004.png | 32.00dB
23-04-29 21:23:38.066 : --50--> 241048.png | 28.25dB
23-04-29 21:23:38.759 : --51--> 253027.png | 28.97dB
23-04-29 21:23:39.156 : --52--> 253055.png | 31.92dB
23-04-29 21:23:39.537 : --53--> 260058.png | 31.51dB
23-04-29 21:23:39.961 : --54--> 271035.png | 29.81dB
23-04-29 21:23:40.299 : --55--> 285079.png | 28.77dB
23-04-29 21:23:40.693 : --56--> 291000.png | 25.95dB
23-04-29 21:23:41.028 : --57--> 295087.png | 29.18dB
23-04-29 21:23:41.425 : --58--> 296007.png | 31.23dB
23-04-29 21:23:41.744 : --59--> 296059.png | 30.81dB
23-04-29 21:23:42.150 : --60--> 299086.png | 31.17dB
23-04-29 21:23:42.498 : --61--> 300091.png | 30.96dB
23-04-29 21:23:42.871 : --62--> 302008.png | 31.94dB
23-04-29 21:23:43.290 : --63--> 304034.png | 28.08dB
23-04-29 21:23:43.614 : --64--> 304074.png | 28.37dB
23-04-29 21:23:43.971 : --65--> 306005.png | 29.65dB
23-04-29 21:23:44.301 : --66-->   3096.png | 35.01dB
23-04-29 21:23:44.666 : --67-->  33039.png | 26.85dB
23-04-29 21:23:45.052 : --68--> 351093.png | 28.02dB
23-04-29 21:23:45.065 : <epoch:3333, iter:  10,000, Average PSNR : 29.78dB

23-04-29 21:25:14.025 : <epoch:3399, iter:  10,200, lr:1.000e-04> G_loss: 2.879e-02 
23-04-29 21:26:42.557 : <epoch:3466, iter:  10,400, lr:1.000e-04> G_loss: 2.661e-02 
23-04-29 21:28:11.509 : <epoch:3533, iter:  10,600, lr:1.000e-04> G_loss: 2.521e-02 
23-04-29 21:29:38.015 : <epoch:3599, iter:  10,800, lr:1.000e-04> G_loss: 2.579e-02 
23-04-29 21:31:06.769 : <epoch:3666, iter:  11,000, lr:1.000e-04> G_loss: 2.646e-02 
23-04-29 21:32:32.590 : <epoch:3733, iter:  11,200, lr:1.000e-04> G_loss: 2.706e-02 
23-04-29 21:33:59.602 : <epoch:3799, iter:  11,400, lr:1.000e-04> G_loss: 2.558e-02 
23-04-29 21:35:28.273 : <epoch:3866, iter:  11,600, lr:1.000e-04> G_loss: 2.565e-02 
23-04-29 21:36:54.253 : <epoch:3933, iter:  11,800, lr:1.000e-04> G_loss: 2.938e-02 
23-04-29 21:38:20.732 : <epoch:3999, iter:  12,000, lr:1.000e-04> G_loss: 2.613e-02 
23-04-29 21:39:46.892 : <epoch:4066, iter:  12,200, lr:1.000e-04> G_loss: 2.554e-02 
23-04-29 21:41:15.855 : <epoch:4133, iter:  12,400, lr:1.000e-04> G_loss: 2.762e-02 
23-04-29 21:42:40.241 : <epoch:4199, iter:  12,600, lr:1.000e-04> G_loss: 2.623e-02 
23-04-29 21:44:07.537 : <epoch:4266, iter:  12,800, lr:1.000e-04> G_loss: 2.545e-02 
23-04-29 21:45:33.450 : <epoch:4333, iter:  13,000, lr:1.000e-04> G_loss: 2.530e-02 
23-04-29 21:47:00.613 : <epoch:4399, iter:  13,200, lr:1.000e-04> G_loss: 2.682e-02 
23-04-29 21:48:26.996 : <epoch:4466, iter:  13,400, lr:1.000e-04> G_loss: 2.445e-02 
23-04-29 21:49:54.423 : <epoch:4533, iter:  13,600, lr:1.000e-04> G_loss: 2.379e-02 
23-04-29 21:51:20.777 : <epoch:4599, iter:  13,800, lr:1.000e-04> G_loss: 2.619e-02 
23-04-29 21:52:47.233 : <epoch:4666, iter:  14,000, lr:1.000e-04> G_loss: 2.430e-02 
23-04-29 21:54:15.347 : <epoch:4733, iter:  14,200, lr:1.000e-04> G_loss: 2.661e-02 
23-04-29 21:55:40.925 : <epoch:4799, iter:  14,400, lr:1.000e-04> G_loss: 2.443e-02 
23-04-29 21:57:08.293 : <epoch:4866, iter:  14,600, lr:1.000e-04> G_loss: 2.373e-02 
23-04-29 21:58:33.673 : <epoch:4933, iter:  14,800, lr:1.000e-04> G_loss: 2.553e-02 
23-04-29 21:59:59.744 : <epoch:4999, iter:  15,000, lr:1.000e-04> G_loss: 2.532e-02 
23-04-29 21:59:59.745 : Saving the model.
23-04-29 22:00:00.265 : ---1--> 101085.png | 27.43dB
23-04-29 22:00:00.622 : ---2--> 101087.png | 30.83dB
23-04-29 22:00:00.990 : ---3--> 102061.png | 30.71dB
23-04-29 22:00:01.317 : ---4--> 103070.png | 31.27dB
23-04-29 22:00:01.634 : ---5--> 105025.png | 28.55dB
23-04-29 22:00:01.983 : ---6--> 106024.png | 33.21dB
23-04-29 22:00:02.300 : ---7--> 108005.png | 29.58dB
23-04-29 22:00:02.655 : ---8--> 108070.png | 27.96dB
23-04-29 22:00:02.999 : ---9--> 108082.png | 30.19dB
23-04-29 22:00:03.355 : --10--> 109053.png | 30.65dB
23-04-29 22:00:03.722 : --11--> 119082.png | 29.04dB
23-04-29 22:00:04.068 : --12-->  12084.png | 28.65dB
23-04-29 22:00:04.405 : --13--> 123074.png | 30.54dB
23-04-29 22:00:04.768 : --14--> 126007.png | 30.68dB
23-04-29 22:00:05.111 : --15--> 130026.png | 28.94dB
23-04-29 22:00:05.477 : --16--> 134035.png | 29.10dB
23-04-29 22:00:05.819 : --17-->  14037.png | 32.29dB
23-04-29 22:00:06.182 : --18--> 143090.png | 32.49dB
23-04-29 22:00:06.510 : --19--> 145086.png | 28.92dB
23-04-29 22:00:06.863 : --20--> 147091.png | 29.78dB
23-04-29 22:00:07.240 : --21--> 148026.png | 27.88dB
23-04-29 22:00:07.580 : --22--> 148089.png | 28.40dB
23-04-29 22:00:07.933 : --23--> 157055.png | 29.44dB
23-04-29 22:00:08.295 : --24--> 159008.png | 29.84dB
23-04-29 22:00:08.654 : --25--> 160068.png | 30.84dB
23-04-29 22:00:09.061 : --26-->  16077.png | 29.30dB
23-04-29 22:00:09.395 : --27--> 163085.png | 30.68dB
23-04-29 22:00:09.741 : --28--> 167062.png | 31.09dB
23-04-29 22:00:10.108 : --29--> 167083.png | 26.52dB
23-04-29 22:00:11.041 : --30--> 170057.png | 30.72dB
23-04-29 22:00:11.418 : --31--> 175032.png | 26.39dB
23-04-29 22:00:11.839 : --32--> 175043.png | 28.19dB
23-04-29 22:00:12.215 : --33--> 182053.png | 29.39dB
23-04-29 22:00:12.569 : --34--> 189080.png | 33.01dB
23-04-29 22:00:12.990 : --35-->  19021.png | 29.34dB
23-04-29 22:00:13.337 : --36--> 196073.png | 28.06dB
23-04-29 22:00:13.698 : --37--> 197017.png | 29.58dB
23-04-29 22:00:14.044 : --38--> 208001.png | 29.71dB
23-04-29 22:00:14.483 : --39--> 210088.png | 31.59dB
23-04-29 22:00:14.845 : --40-->  21077.png | 29.80dB
23-04-29 22:00:15.378 : --41--> 216081.png | 28.86dB
23-04-29 22:00:15.776 : --42--> 219090.png | 30.43dB
23-04-29 22:00:16.176 : --43--> 220075.png | 30.72dB
23-04-29 22:00:16.552 : --44--> 223061.png | 28.39dB
23-04-29 22:00:16.880 : --45--> 227092.png | 32.78dB
23-04-29 22:00:17.333 : --46--> 229036.png | 28.00dB
23-04-29 22:00:18.047 : --47--> 236037.png | 28.07dB
23-04-29 22:00:18.389 : --48-->  24077.png | 29.14dB
23-04-29 22:00:18.724 : --49--> 241004.png | 31.94dB
23-04-29 22:00:19.057 : --50--> 241048.png | 27.93dB
23-04-29 22:00:19.427 : --51--> 253027.png | 29.15dB
23-04-29 22:00:19.774 : --52--> 253055.png | 32.02dB
23-04-29 22:00:20.107 : --53--> 260058.png | 31.50dB
23-04-29 22:00:20.490 : --54--> 271035.png | 30.01dB
23-04-29 22:00:20.837 : --55--> 285079.png | 28.77dB
23-04-29 22:00:21.182 : --56--> 291000.png | 25.84dB
23-04-29 22:00:21.552 : --57--> 295087.png | 29.17dB
23-04-29 22:00:21.885 : --58--> 296007.png | 31.28dB
23-04-29 22:00:22.242 : --59--> 296059.png | 30.80dB
23-04-29 22:00:22.593 : --60--> 299086.png | 31.28dB
23-04-29 22:00:22.942 : --61--> 300091.png | 30.77dB
23-04-29 22:00:23.270 : --62--> 302008.png | 32.41dB
23-04-29 22:00:23.613 : --63--> 304034.png | 28.16dB
23-04-29 22:00:24.024 : --64--> 304074.png | 28.20dB
23-04-29 22:00:24.355 : --65--> 306005.png | 29.57dB
23-04-29 22:00:24.740 : --66-->   3096.png | 36.26dB
23-04-29 22:00:25.164 : --67-->  33039.png | 26.88dB
23-04-29 22:00:25.960 : --68--> 351093.png | 28.09dB
23-04-29 22:00:25.983 : <epoch:4999, iter:  15,000, Average PSNR : 29.81dB

23-04-29 22:01:54.677 : <epoch:5066, iter:  15,200, lr:1.000e-04> G_loss: 2.509e-02 
23-04-29 22:03:19.912 : <epoch:5133, iter:  15,400, lr:1.000e-04> G_loss: 2.527e-02 
23-04-29 22:04:45.829 : <epoch:5199, iter:  15,600, lr:1.000e-04> G_loss: 2.537e-02 
23-04-29 22:06:11.439 : <epoch:5266, iter:  15,800, lr:1.000e-04> G_loss: 2.496e-02 
23-04-29 22:07:39.156 : <epoch:5333, iter:  16,000, lr:1.000e-04> G_loss: 2.501e-02 
23-04-29 22:09:04.137 : <epoch:5399, iter:  16,200, lr:1.000e-04> G_loss: 2.431e-02 
23-04-29 22:10:31.089 : <epoch:5466, iter:  16,400, lr:1.000e-04> G_loss: 2.533e-02 
23-04-29 22:11:56.091 : <epoch:5533, iter:  16,600, lr:1.000e-04> G_loss: 2.443e-02 
23-04-29 22:13:21.996 : <epoch:5599, iter:  16,800, lr:1.000e-04> G_loss: 2.417e-02 
23-04-29 22:14:48.846 : <epoch:5666, iter:  17,000, lr:1.000e-04> G_loss: 2.336e-02 
23-04-29 22:16:15.428 : <epoch:5733, iter:  17,200, lr:1.000e-04> G_loss: 2.377e-02 
23-04-29 22:17:41.114 : <epoch:5799, iter:  17,400, lr:1.000e-04> G_loss: 2.464e-02 
23-04-29 22:19:06.333 : <epoch:5866, iter:  17,600, lr:1.000e-04> G_loss: 2.456e-02 
23-04-29 22:20:32.872 : <epoch:5933, iter:  17,800, lr:1.000e-04> G_loss: 2.353e-02 
23-04-29 22:21:57.597 : <epoch:5999, iter:  18,000, lr:1.000e-04> G_loss: 2.390e-02 
23-04-29 22:23:25.272 : <epoch:6066, iter:  18,200, lr:1.000e-04> G_loss: 2.408e-02 
23-04-29 22:24:52.229 : <epoch:6133, iter:  18,400, lr:1.000e-04> G_loss: 2.464e-02 
23-04-29 22:26:16.778 : <epoch:6199, iter:  18,600, lr:1.000e-04> G_loss: 2.446e-02 
23-04-29 22:27:43.688 : <epoch:6266, iter:  18,800, lr:1.000e-04> G_loss: 2.258e-02 
23-04-29 22:29:09.629 : <epoch:6333, iter:  19,000, lr:1.000e-04> G_loss: 2.332e-02 
23-04-29 22:30:36.334 : <epoch:6399, iter:  19,200, lr:1.000e-04> G_loss: 2.414e-02 
23-04-29 22:32:03.120 : <epoch:6466, iter:  19,400, lr:1.000e-04> G_loss: 2.430e-02 
23-04-29 22:33:28.815 : <epoch:6533, iter:  19,600, lr:1.000e-04> G_loss: 2.310e-02 
23-04-29 22:34:55.160 : <epoch:6599, iter:  19,800, lr:1.000e-04> G_loss: 2.600e-02 
23-04-29 22:36:20.639 : <epoch:6666, iter:  20,000, lr:1.000e-04> G_loss: 2.479e-02 
23-04-29 22:36:20.640 : Saving the model.
23-04-29 22:36:21.150 : ---1--> 101085.png | 27.79dB
23-04-29 22:36:21.469 : ---2--> 101087.png | 31.11dB
23-04-29 22:36:21.841 : ---3--> 102061.png | 31.06dB
23-04-29 22:36:22.144 : ---4--> 103070.png | 31.57dB
23-04-29 22:36:22.488 : ---5--> 105025.png | 29.08dB
23-04-29 22:36:22.824 : ---6--> 106024.png | 33.23dB
23-04-29 22:36:23.182 : ---7--> 108005.png | 29.83dB
23-04-29 22:36:23.515 : ---8--> 108070.png | 28.23dB
23-04-29 22:36:23.888 : ---9--> 108082.png | 30.46dB
23-04-29 22:36:24.271 : --10--> 109053.png | 30.95dB
23-04-29 22:36:24.674 : --11--> 119082.png | 29.47dB
23-04-29 22:36:25.008 : --12-->  12084.png | 28.98dB
23-04-29 22:36:25.346 : --13--> 123074.png | 30.68dB
23-04-29 22:36:25.774 : --14--> 126007.png | 31.17dB
23-04-29 22:36:26.303 : --15--> 130026.png | 29.20dB
23-04-29 22:36:26.675 : --16--> 134035.png | 29.27dB
23-04-29 22:36:27.019 : --17-->  14037.png | 32.83dB
23-04-29 22:36:27.353 : --18--> 143090.png | 32.92dB
23-04-29 22:36:27.688 : --19--> 145086.png | 29.35dB
23-04-29 22:36:28.031 : --20--> 147091.png | 30.18dB
23-04-29 22:36:28.394 : --21--> 148026.png | 28.10dB
23-04-29 22:36:28.774 : --22--> 148089.png | 28.64dB
23-04-29 22:36:29.121 : --23--> 157055.png | 29.84dB
23-04-29 22:36:29.448 : --24--> 159008.png | 30.12dB
23-04-29 22:36:29.765 : --25--> 160068.png | 31.07dB
23-04-29 22:36:30.192 : --26-->  16077.png | 29.72dB
23-04-29 22:36:30.518 : --27--> 163085.png | 31.00dB
23-04-29 22:36:30.830 : --28--> 167062.png | 32.50dB
23-04-29 22:36:31.184 : --29--> 167083.png | 26.88dB
23-04-29 22:36:31.664 : --30--> 170057.png | 30.89dB
23-04-29 22:36:32.004 : --31--> 175032.png | 26.62dB
23-04-29 22:36:32.550 : --32--> 175043.png | 28.34dB
23-04-29 22:36:33.022 : --33--> 182053.png | 29.61dB
23-04-29 22:36:33.594 : --34--> 189080.png | 33.14dB
23-04-29 22:36:33.992 : --35-->  19021.png | 29.66dB
23-04-29 22:36:34.377 : --36--> 196073.png | 28.55dB
23-04-29 22:36:34.737 : --37--> 197017.png | 29.87dB
23-04-29 22:36:35.384 : --38--> 208001.png | 30.05dB
23-04-29 22:36:35.841 : --39--> 210088.png | 32.16dB
23-04-29 22:36:36.221 : --40-->  21077.png | 30.17dB
23-04-29 22:36:36.566 : --41--> 216081.png | 29.22dB
23-04-29 22:36:36.907 : --42--> 219090.png | 30.77dB
23-04-29 22:36:37.283 : --43--> 220075.png | 30.96dB
23-04-29 22:36:37.663 : --44--> 223061.png | 28.75dB
23-04-29 22:36:38.009 : --45--> 227092.png | 33.11dB
23-04-29 22:36:38.398 : --46--> 229036.png | 28.27dB
23-04-29 22:36:38.745 : --47--> 236037.png | 28.34dB
23-04-29 22:36:39.085 : --48-->  24077.png | 29.68dB
23-04-29 22:36:39.478 : --49--> 241004.png | 32.42dB
23-04-29 22:36:39.890 : --50--> 241048.png | 28.55dB
23-04-29 22:36:40.579 : --51--> 253027.png | 29.47dB
23-04-29 22:36:40.956 : --52--> 253055.png | 32.44dB
23-04-29 22:36:41.267 : --53--> 260058.png | 31.70dB
23-04-29 22:36:41.648 : --54--> 271035.png | 30.15dB
23-04-29 22:36:42.061 : --55--> 285079.png | 29.08dB
23-04-29 22:36:42.430 : --56--> 291000.png | 26.11dB
23-04-29 22:36:42.828 : --57--> 295087.png | 29.57dB
23-04-29 22:36:43.192 : --58--> 296007.png | 31.56dB
23-04-29 22:36:43.545 : --59--> 296059.png | 31.21dB
23-04-29 22:36:43.900 : --60--> 299086.png | 31.71dB
23-04-29 22:36:44.378 : --61--> 300091.png | 31.36dB
23-04-29 22:36:44.734 : --62--> 302008.png | 32.62dB
23-04-29 22:36:45.144 : --63--> 304034.png | 28.35dB
23-04-29 22:36:45.459 : --64--> 304074.png | 28.51dB
23-04-29 22:36:45.800 : --65--> 306005.png | 29.89dB
23-04-29 22:36:46.287 : --66-->   3096.png | 35.60dB
23-04-29 22:36:46.615 : --67-->  33039.png | 27.10dB
23-04-29 22:36:46.974 : --68--> 351093.png | 28.37dB
23-04-29 22:36:46.992 : <epoch:6666, iter:  20,000, Average PSNR : 30.13dB

23-04-29 22:38:14.484 : <epoch:6733, iter:  20,200, lr:1.000e-04> G_loss: 2.613e-02 
23-04-29 22:39:40.043 : <epoch:6799, iter:  20,400, lr:1.000e-04> G_loss: 2.290e-02 
23-04-29 22:41:05.220 : <epoch:6866, iter:  20,600, lr:1.000e-04> G_loss: 2.487e-02 
23-04-29 22:42:32.195 : <epoch:6933, iter:  20,800, lr:1.000e-04> G_loss: 2.640e-02 
23-04-29 22:43:56.793 : <epoch:6999, iter:  21,000, lr:1.000e-04> G_loss: 2.340e-02 
23-04-29 22:45:25.221 : <epoch:7066, iter:  21,200, lr:1.000e-04> G_loss: 2.377e-02 
23-04-29 22:46:52.104 : <epoch:7133, iter:  21,400, lr:1.000e-04> G_loss: 2.484e-02 
23-04-29 22:48:16.858 : <epoch:7199, iter:  21,600, lr:1.000e-04> G_loss: 2.308e-02 
23-04-29 22:49:43.533 : <epoch:7266, iter:  21,800, lr:1.000e-04> G_loss: 2.624e-02 
23-04-29 22:51:09.489 : <epoch:7333, iter:  22,000, lr:1.000e-04> G_loss: 2.442e-02 
23-04-29 22:52:35.416 : <epoch:7399, iter:  22,200, lr:1.000e-04> G_loss: 2.350e-02 
23-04-29 22:54:02.109 : <epoch:7466, iter:  22,400, lr:1.000e-04> G_loss: 2.477e-02 
23-04-29 22:55:28.265 : <epoch:7533, iter:  22,600, lr:1.000e-04> G_loss: 2.334e-02 
23-04-29 22:56:54.011 : <epoch:7599, iter:  22,800, lr:1.000e-04> G_loss: 2.297e-02 
23-04-30 00:54:34.843 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: denoising/dncnn25/models/20000_G.pth
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 3
    out_nc: 3
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-30 00:54:35.421 : Random seed: 7000
23-04-30 00:54:37.654 : Number of train images: 200, iters: 4
23-04-30 01:07:43.499 :   task: dncnn25
  model: plain
  gpu_ids: [0]
  scale: 1
  n_channels: 3
  merge_bn: True
  merge_bn_startpoint: 400000
  path:[
    root: denoising
    pretrained_netG: None
    task: denoising/dncnn25
    log: denoising/dncnn25
    options: denoising/dncnn25/options
    models: denoising/dncnn25/models
    images: denoising/dncnn25/images
  ]
  datasets:[
    train:[
      name: train_dataset
      dataset_type: dncnn
      dataroot_H: trainsets/trainH
      dataroot_L: None
      H_size: 40
      sigma: 25
      sigma_test: 25
      dataloader_shuffle: True
      dataloader_num_workers: 8
      dataloader_batch_size: 64
      phase: train
      scale: 1
      n_channels: 3
    ]
    test:[
      name: test_dataset
      dataset_type: dncnn
      dataroot_H: testsets/bsd68
      dataroot_L: None
      sigma: 25
      sigma_test: 25
      phase: test
      scale: 1
      n_channels: 3
    ]
  ]
  netG:[
    net_type: dncnn
    in_nc: 3
    out_nc: 3
    nc: 64
    nb: 17
    gc: 32
    ng: 2
    reduction: 16
    act_mode: BR
    upsample_mode: convtranspose
    downsample_mode: strideconv
    init_type: orthogonal
    init_bn_type: uniform
    init_gain: 0.2
    scale: 1
  ]
  train:[
    G_lossfn_type: l1
    G_lossfn_weight: 1.0
    G_optimizer_type: adam
    G_optimizer_lr: 0.0001
    G_optimizer_clipgrad: None
    G_scheduler_type: MultiStepLR
    G_scheduler_milestones: [200000, 400000, 600000, 800000, 1000000, 2000000]
    G_scheduler_gamma: 0.5
    G_regularizer_orthstep: None
    G_regularizer_clipstep: None
    checkpoint_test: 5000
    checkpoint_save: 5000
    checkpoint_print: 200
    F_feature_layer: 34
    F_weights: 1.0
    F_lossfn_type: l1
    F_use_input_norm: True
    F_use_range_norm: False
    G_optimizer_betas: [0.9, 0.999]
    G_scheduler_restart_weights: 1
    G_optimizer_wd: 0
    G_optimizer_reuse: False
    G_param_strict: True
    E_param_strict: True
    E_decay: 0
  ]
  opt_path: options/train_dncnn.json
  is_train: True
  find_unused_parameters: True
  use_static_graph: False
  dist: False
  num_gpu: 1

23-04-30 01:07:44.101 : Random seed: 5033
23-04-30 01:07:46.302 : Number of train images: 200, iters: 4
23-04-30 01:07:56.816 : 
Networks name: DnCNN
Params number: 183115
Net structure:
DnCNN(
  (model): Sequential(
    (0): PHConv2d(in_features=3, out_features=64, bias=True)
    (1): ReLU(inplace=True)
    (2): PHConv2d(in_features=64, out_features=64, bias=True)
    (3): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (4): ReLU(inplace=True)
    (5): PHConv2d(in_features=64, out_features=64, bias=True)
    (6): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (7): ReLU(inplace=True)
    (8): PHConv2d(in_features=64, out_features=64, bias=True)
    (9): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): PHConv2d(in_features=64, out_features=64, bias=True)
    (12): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): PHConv2d(in_features=64, out_features=64, bias=True)
    (15): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): PHConv2d(in_features=64, out_features=64, bias=True)
    (18): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): PHConv2d(in_features=64, out_features=64, bias=True)
    (21): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): PHConv2d(in_features=64, out_features=64, bias=True)
    (24): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (25): ReLU(inplace=True)
    (26): PHConv2d(in_features=64, out_features=64, bias=True)
    (27): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (28): ReLU(inplace=True)
    (29): PHConv2d(in_features=64, out_features=64, bias=True)
    (30): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (31): ReLU(inplace=True)
    (32): PHConv2d(in_features=64, out_features=64, bias=True)
    (33): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (34): ReLU(inplace=True)
    (35): PHConv2d(in_features=64, out_features=64, bias=True)
    (36): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (37): ReLU(inplace=True)
    (38): PHConv2d(in_features=64, out_features=64, bias=True)
    (39): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (40): ReLU(inplace=True)
    (41): PHConv2d(in_features=64, out_features=64, bias=True)
    (42): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (43): ReLU(inplace=True)
    (44): PHConv2d(in_features=64, out_features=64, bias=True)
    (45): BatchNorm2d(63, eps=0.0001, momentum=0.9, affine=True, track_running_stats=True)
    (46): ReLU(inplace=True)
    (47): PHConv2d(in_features=64, out_features=3, bias=True)
  )
)

23-04-30 01:07:56.928 : 
 |  mean  |  min   |  max   |  std   || shape               
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.0.bias
 |  0.039 | -0.513 |  0.570 |  0.332 | torch.Size([3, 3, 3]) || model.0.A
 | -0.002 | -0.166 |  0.167 |  0.098 | torch.Size([3, 21, 1, 3, 3]) || model.0.F
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.2.bias
 | -0.064 | -0.513 |  0.565 |  0.335 | torch.Size([3, 3, 3]) || model.2.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.2.F
 |  0.511 |  0.117 |  0.979 |  0.278 | torch.Size([63]) || model.3.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.3.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.3.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.3.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.5.bias
 | -0.102 | -0.574 |  0.510 |  0.356 | torch.Size([3, 3, 3]) || model.5.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.5.F
 |  0.558 |  0.106 |  0.995 |  0.279 | torch.Size([63]) || model.6.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.6.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.6.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.6.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.8.bias
 |  0.057 | -0.540 |  0.540 |  0.336 | torch.Size([3, 3, 3]) || model.8.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.8.F
 |  0.577 |  0.109 |  0.991 |  0.268 | torch.Size([63]) || model.9.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.9.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.9.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.9.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.11.bias
 |  0.171 | -0.432 |  0.576 |  0.263 | torch.Size([3, 3, 3]) || model.11.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.11.F
 |  0.519 |  0.105 |  0.993 |  0.252 | torch.Size([63]) || model.12.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.12.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.12.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.12.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.14.bias
 | -0.086 | -0.574 |  0.545 |  0.297 | torch.Size([3, 3, 3]) || model.14.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.14.F
 |  0.528 |  0.102 |  0.984 |  0.269 | torch.Size([63]) || model.15.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.15.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.15.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.15.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.17.bias
 |  0.042 | -0.563 |  0.539 |  0.361 | torch.Size([3, 3, 3]) || model.17.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.17.F
 |  0.585 |  0.128 |  0.996 |  0.259 | torch.Size([63]) || model.18.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.18.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.18.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.18.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.20.bias
 | -0.068 | -0.568 |  0.555 |  0.362 | torch.Size([3, 3, 3]) || model.20.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.20.F
 |  0.610 |  0.130 |  1.000 |  0.257 | torch.Size([63]) || model.21.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.21.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.21.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.21.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.23.bias
 | -0.080 | -0.568 |  0.567 |  0.379 | torch.Size([3, 3, 3]) || model.23.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.23.F
 |  0.466 |  0.113 |  1.000 |  0.251 | torch.Size([63]) || model.24.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.24.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.24.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.24.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.26.bias
 | -0.060 | -0.488 |  0.491 |  0.254 | torch.Size([3, 3, 3]) || model.26.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.26.F
 |  0.503 |  0.101 |  0.983 |  0.257 | torch.Size([63]) || model.27.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.27.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.27.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.27.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.29.bias
 | -0.054 | -0.499 |  0.510 |  0.313 | torch.Size([3, 3, 3]) || model.29.A
 |  0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.29.F
 |  0.541 |  0.126 |  0.987 |  0.249 | torch.Size([63]) || model.30.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.30.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.30.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.30.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.32.bias
 |  0.042 | -0.467 |  0.499 |  0.307 | torch.Size([3, 3, 3]) || model.32.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.32.F
 |  0.570 |  0.106 |  0.972 |  0.222 | torch.Size([63]) || model.33.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.33.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.33.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.33.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.35.bias
 |  0.026 | -0.470 |  0.552 |  0.273 | torch.Size([3, 3, 3]) || model.35.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.35.F
 |  0.522 |  0.101 |  0.988 |  0.276 | torch.Size([63]) || model.36.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.36.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.36.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.36.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.38.bias
 | -0.018 | -0.521 |  0.557 |  0.309 | torch.Size([3, 3, 3]) || model.38.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.38.F
 |  0.559 |  0.105 |  0.999 |  0.269 | torch.Size([63]) || model.39.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.39.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.39.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.39.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.41.bias
 | -0.055 | -0.568 |  0.511 |  0.331 | torch.Size([3, 3, 3]) || model.41.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.41.F
 |  0.528 |  0.114 |  0.971 |  0.271 | torch.Size([63]) || model.42.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.42.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.42.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.42.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([64]) || model.44.bias
 | -0.023 | -0.527 |  0.563 |  0.354 | torch.Size([3, 3, 3]) || model.44.A
 | -0.000 | -0.036 |  0.036 |  0.021 | torch.Size([3, 21, 21, 3, 3]) || model.44.F
 |  0.603 |  0.154 |  0.988 |  0.245 | torch.Size([63]) || model.45.weight
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.45.bias
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([63]) || model.45.running_mean
 |  1.000 |  1.000 |  1.000 |  0.000 | torch.Size([63]) || model.45.running_var
 |  0.000 |  0.000 |  0.000 |  0.000 | torch.Size([3]) || model.47.bias
 |  0.034 | -0.558 |  0.541 |  0.348 | torch.Size([3, 3, 3]) || model.47.A
 | -0.002 | -0.089 |  0.089 |  0.052 | torch.Size([3, 1, 21, 3, 3]) || model.47.F

23-04-30 01:09:42.348 : <epoch: 66, iter:     200, lr:1.000e-04> G_loss: 7.791e-02 
23-04-30 01:11:07.446 : <epoch:133, iter:     400, lr:1.000e-04> G_loss: 6.857e-02 
23-04-30 01:12:31.218 : <epoch:199, iter:     600, lr:1.000e-04> G_loss: 5.904e-02 
23-04-30 01:13:55.086 : <epoch:266, iter:     800, lr:1.000e-04> G_loss: 5.237e-02 
23-04-30 01:15:20.041 : <epoch:333, iter:   1,000, lr:1.000e-04> G_loss: 5.068e-02 
23-04-30 01:16:42.542 : <epoch:399, iter:   1,200, lr:1.000e-04> G_loss: 4.860e-02 
23-04-30 01:18:07.048 : <epoch:466, iter:   1,400, lr:1.000e-04> G_loss: 4.615e-02 
23-04-30 01:19:31.601 : <epoch:533, iter:   1,600, lr:1.000e-04> G_loss: 4.349e-02 
23-04-30 01:20:56.183 : <epoch:599, iter:   1,800, lr:1.000e-04> G_loss: 3.816e-02 
23-04-30 01:22:22.028 : <epoch:666, iter:   2,000, lr:1.000e-04> G_loss: 3.367e-02 
23-04-30 01:23:46.955 : <epoch:733, iter:   2,200, lr:1.000e-04> G_loss: 3.334e-02 
23-04-30 01:25:12.189 : <epoch:799, iter:   2,400, lr:1.000e-04> G_loss: 3.300e-02 
23-04-30 01:26:37.488 : <epoch:866, iter:   2,600, lr:1.000e-04> G_loss: 3.217e-02 
23-04-30 01:28:01.638 : <epoch:933, iter:   2,800, lr:1.000e-04> G_loss: 3.377e-02 
23-04-30 01:29:27.082 : <epoch:999, iter:   3,000, lr:1.000e-04> G_loss: 3.140e-02 
23-04-30 01:30:53.256 : <epoch:1066, iter:   3,200, lr:1.000e-04> G_loss: 3.225e-02 
23-04-30 01:32:16.921 : <epoch:1133, iter:   3,400, lr:1.000e-04> G_loss: 2.914e-02 
23-04-30 01:33:42.441 : <epoch:1199, iter:   3,600, lr:1.000e-04> G_loss: 3.047e-02 
23-04-30 01:35:07.331 : <epoch:1266, iter:   3,800, lr:1.000e-04> G_loss: 3.085e-02 
23-04-30 01:36:32.863 : <epoch:1333, iter:   4,000, lr:1.000e-04> G_loss: 3.237e-02 
23-04-30 01:37:57.925 : <epoch:1399, iter:   4,200, lr:1.000e-04> G_loss: 3.094e-02 
23-04-30 01:39:22.036 : <epoch:1466, iter:   4,400, lr:1.000e-04> G_loss: 2.878e-02 
23-04-30 01:40:48.140 : <epoch:1533, iter:   4,600, lr:1.000e-04> G_loss: 2.949e-02 
23-04-30 01:42:12.364 : <epoch:1599, iter:   4,800, lr:1.000e-04> G_loss: 2.895e-02 
23-04-30 01:43:37.430 : <epoch:1666, iter:   5,000, lr:1.000e-04> G_loss: 2.972e-02 
23-04-30 01:43:37.431 : Saving the model.
23-04-30 01:43:39.623 : ---1--> 101085.png | 27.10dB
23-04-30 01:43:40.907 : ---2--> 101087.png | 29.63dB
23-04-30 01:43:42.338 : ---3--> 102061.png | 29.15dB
23-04-30 01:43:43.680 : ---4--> 103070.png | 30.40dB
23-04-30 01:43:45.066 : ---5--> 105025.png | 27.48dB
23-04-30 01:43:46.473 : ---6--> 106024.png | 30.34dB
23-04-30 01:43:48.179 : ---7--> 108005.png | 29.08dB
23-04-30 01:43:49.693 : ---8--> 108070.png | 27.69dB
23-04-30 01:43:51.551 : ---9--> 108082.png | 29.35dB
23-04-30 01:43:53.539 : --10--> 109053.png | 30.05dB
23-04-30 01:43:55.494 : --11--> 119082.png | 28.17dB
23-04-30 01:43:56.842 : --12-->  12084.png | 28.31dB
23-04-30 01:43:59.047 : --13--> 123074.png | 29.78dB
23-04-30 01:44:00.468 : --14--> 126007.png | 29.90dB
23-04-30 01:44:02.405 : --15--> 130026.png | 28.38dB
23-04-30 01:44:03.864 : --16--> 134035.png | 27.89dB
23-04-30 01:44:06.098 : --17-->  14037.png | 31.53dB
23-04-30 01:44:07.528 : --18--> 143090.png | 31.10dB
23-04-30 01:44:08.807 : --19--> 145086.png | 28.43dB
23-04-30 01:44:10.526 : --20--> 147091.png | 28.22dB
23-04-30 01:44:12.322 : --21--> 148026.png | 27.30dB
23-04-30 01:44:14.142 : --22--> 148089.png | 28.00dB
23-04-30 01:44:15.551 : --23--> 157055.png | 27.93dB
23-04-30 01:44:17.112 : --24--> 159008.png | 29.30dB
23-04-30 01:44:18.845 : --25--> 160068.png | 30.06dB
23-04-30 01:44:20.329 : --26-->  16077.png | 28.79dB
23-04-30 01:44:21.744 : --27--> 163085.png | 30.21dB
23-04-30 01:44:23.226 : --28--> 167062.png | 31.10dB
23-04-30 01:44:24.665 : --29--> 167083.png | 25.73dB
23-04-30 01:44:26.369 : --30--> 170057.png | 30.29dB
23-04-30 01:44:27.835 : --31--> 175032.png | 26.20dB
23-04-30 01:44:29.231 : --32--> 175043.png | 27.90dB
23-04-30 01:44:30.660 : --33--> 182053.png | 28.53dB
23-04-30 01:44:32.628 : --34--> 189080.png | 30.58dB
23-04-30 01:44:33.929 : --35-->  19021.png | 28.74dB
23-04-30 01:44:35.190 : --36--> 196073.png | 28.15dB
23-04-30 01:44:37.061 : --37--> 197017.png | 28.34dB
23-04-30 01:44:38.420 : --38--> 208001.png | 29.33dB
23-04-30 01:44:39.855 : --39--> 210088.png | 29.71dB
23-04-30 01:44:41.224 : --40-->  21077.png | 28.62dB
23-04-30 01:44:42.496 : --41--> 216081.png | 28.38dB
23-04-30 01:44:43.779 : --42--> 219090.png | 29.68dB
23-04-30 01:44:45.163 : --43--> 220075.png | 29.64dB
23-04-30 01:44:46.547 : --44--> 223061.png | 27.43dB
23-04-30 01:44:48.204 : --45--> 227092.png | 31.62dB
23-04-30 01:44:49.967 : --46--> 229036.png | 27.39dB
23-04-30 01:44:51.290 : --47--> 236037.png | 27.84dB
23-04-30 01:44:52.649 : --48-->  24077.png | 27.36dB
23-04-30 01:44:54.045 : --49--> 241004.png | 30.60dB
23-04-30 01:44:55.721 : --50--> 241048.png | 27.21dB
23-04-30 01:44:57.149 : --51--> 253027.png | 28.50dB
23-04-30 01:44:58.497 : --52--> 253055.png | 30.36dB
23-04-30 01:44:59.788 : --53--> 260058.png | 30.71dB
23-04-30 01:45:01.108 : --54--> 271035.png | 29.06dB
23-04-30 01:45:02.519 : --55--> 285079.png | 28.15dB
23-04-30 01:45:03.895 : --56--> 291000.png | 25.59dB
23-04-30 01:45:05.221 : --57--> 295087.png | 28.76dB
23-04-30 01:45:06.675 : --58--> 296007.png | 30.73dB
23-04-30 01:45:07.995 : --59--> 296059.png | 30.19dB
23-04-30 01:45:09.551 : --60--> 299086.png | 30.72dB
23-04-30 01:45:10.912 : --61--> 300091.png | 29.81dB
23-04-30 01:45:12.305 : --62--> 302008.png | 30.74dB
23-04-30 01:45:13.723 : --63--> 304034.png | 27.84dB
23-04-30 01:45:15.146 : --64--> 304074.png | 27.94dB
23-04-30 01:45:16.580 : --65--> 306005.png | 28.91dB
23-04-30 01:45:17.929 : --66-->   3096.png | 33.05dB
23-04-30 01:45:19.321 : --67-->  33039.png | 26.48dB
23-04-30 01:45:20.976 : --68--> 351093.png | 27.22dB
23-04-30 01:45:20.987 : <epoch:1666, iter:   5,000, Average PSNR : 28.95dB

23-04-30 01:46:45.977 : <epoch:1733, iter:   5,200, lr:1.000e-04> G_loss: 3.035e-02 
23-04-30 01:48:10.352 : <epoch:1799, iter:   5,400, lr:1.000e-04> G_loss: 2.858e-02 
23-04-30 01:49:35.886 : <epoch:1866, iter:   5,600, lr:1.000e-04> G_loss: 3.284e-02 
23-04-30 01:51:00.089 : <epoch:1933, iter:   5,800, lr:1.000e-04> G_loss: 2.834e-02 
23-04-30 01:52:24.800 : <epoch:1999, iter:   6,000, lr:1.000e-04> G_loss: 2.982e-02 
23-04-30 01:53:48.464 : <epoch:2066, iter:   6,200, lr:1.000e-04> G_loss: 2.877e-02 
23-04-30 01:55:15.772 : <epoch:2133, iter:   6,400, lr:1.000e-04> G_loss: 2.792e-02 
23-04-30 01:56:40.129 : <epoch:2199, iter:   6,600, lr:1.000e-04> G_loss: 2.936e-02 
23-04-30 01:58:04.275 : <epoch:2266, iter:   6,800, lr:1.000e-04> G_loss: 2.907e-02 
23-04-30 01:59:29.736 : <epoch:2333, iter:   7,000, lr:1.000e-04> G_loss: 2.691e-02 
23-04-30 02:00:52.407 : <epoch:2399, iter:   7,200, lr:1.000e-04> G_loss: 2.894e-02 
23-04-30 02:02:17.893 : <epoch:2466, iter:   7,400, lr:1.000e-04> G_loss: 2.871e-02 
23-04-30 02:03:43.286 : <epoch:2533, iter:   7,600, lr:1.000e-04> G_loss: 2.768e-02 
23-04-30 02:05:06.257 : <epoch:2599, iter:   7,800, lr:1.000e-04> G_loss: 2.487e-02 
23-04-30 02:06:32.734 : <epoch:2666, iter:   8,000, lr:1.000e-04> G_loss: 2.780e-02 
23-04-30 02:07:57.899 : <epoch:2733, iter:   8,200, lr:1.000e-04> G_loss: 2.647e-02 
23-04-30 02:09:22.739 : <epoch:2799, iter:   8,400, lr:1.000e-04> G_loss: 2.625e-02 
23-04-30 02:10:48.570 : <epoch:2866, iter:   8,600, lr:1.000e-04> G_loss: 2.793e-02 
23-04-30 02:12:12.537 : <epoch:2933, iter:   8,800, lr:1.000e-04> G_loss: 2.587e-02 
23-04-30 02:13:37.804 : <epoch:2999, iter:   9,000, lr:1.000e-04> G_loss: 2.849e-02 
23-04-30 02:15:01.627 : <epoch:3066, iter:   9,200, lr:1.000e-04> G_loss: 2.713e-02 
23-04-30 02:16:27.286 : <epoch:3133, iter:   9,400, lr:1.000e-04> G_loss: 2.894e-02 
23-04-30 02:17:51.565 : <epoch:3199, iter:   9,600, lr:1.000e-04> G_loss: 2.712e-02 
23-04-30 02:19:16.113 : <epoch:3266, iter:   9,800, lr:1.000e-04> G_loss: 2.646e-02 
23-04-30 02:20:42.134 : <epoch:3333, iter:  10,000, lr:1.000e-04> G_loss: 2.597e-02 
23-04-30 02:20:42.135 : Saving the model.
23-04-30 02:20:42.997 : ---1--> 101085.png | 27.21dB
23-04-30 02:20:44.141 : ---2--> 101087.png | 30.39dB
23-04-30 02:20:45.075 : ---3--> 102061.png | 29.65dB
23-04-30 02:20:45.914 : ---4--> 103070.png | 30.99dB
23-04-30 02:20:46.697 : ---5--> 105025.png | 27.89dB
23-04-30 02:20:47.476 : ---6--> 106024.png | 31.19dB
23-04-30 02:20:48.261 : ---7--> 108005.png | 29.46dB
23-04-30 02:20:49.462 : ---8--> 108070.png | 27.90dB
23-04-30 02:20:50.582 : ---9--> 108082.png | 29.84dB
23-04-30 02:20:51.423 : --10--> 109053.png | 30.51dB
23-04-30 02:20:52.402 : --11--> 119082.png | 28.49dB
23-04-30 02:20:54.277 : --12-->  12084.png | 28.61dB
23-04-30 02:20:56.099 : --13--> 123074.png | 30.15dB
23-04-30 02:20:56.929 : --14--> 126007.png | 30.53dB
23-04-30 02:20:57.697 : --15--> 130026.png | 28.67dB
23-04-30 02:20:59.343 : --16--> 134035.png | 28.20dB
23-04-30 02:21:00.110 : --17-->  14037.png | 32.32dB
23-04-30 02:21:00.907 : --18--> 143090.png | 31.98dB
23-04-30 02:21:01.713 : --19--> 145086.png | 28.81dB
23-04-30 02:21:02.558 : --20--> 147091.png | 28.87dB
23-04-30 02:21:03.655 : --21--> 148026.png | 27.24dB
23-04-30 02:21:04.436 : --22--> 148089.png | 28.41dB
23-04-30 02:21:05.276 : --23--> 157055.png | 28.22dB
23-04-30 02:21:06.098 : --24--> 159008.png | 29.65dB
23-04-30 02:21:07.195 : --25--> 160068.png | 30.80dB
23-04-30 02:21:08.002 : --26-->  16077.png | 29.14dB
23-04-30 02:21:08.978 : --27--> 163085.png | 30.81dB
23-04-30 02:21:09.848 : --28--> 167062.png | 32.33dB
23-04-30 02:21:10.791 : --29--> 167083.png | 25.84dB
23-04-30 02:21:11.653 : --30--> 170057.png | 30.85dB
23-04-30 02:21:12.621 : --31--> 175032.png | 26.47dB
23-04-30 02:21:13.409 : --32--> 175043.png | 28.24dB
23-04-30 02:21:14.464 : --33--> 182053.png | 28.77dB
23-04-30 02:21:15.361 : --34--> 189080.png | 31.57dB
23-04-30 02:21:16.256 : --35-->  19021.png | 29.01dB
23-04-30 02:21:17.202 : --36--> 196073.png | 28.32dB
23-04-30 02:21:18.313 : --37--> 197017.png | 29.02dB
23-04-30 02:21:19.136 : --38--> 208001.png | 29.62dB
23-04-30 02:21:19.889 : --39--> 210088.png | 29.96dB
23-04-30 02:21:20.670 : --40-->  21077.png | 29.04dB
23-04-30 02:21:22.026 : --41--> 216081.png | 28.68dB
23-04-30 02:21:22.785 : --42--> 219090.png | 30.09dB
23-04-30 02:21:23.549 : --43--> 220075.png | 30.09dB
23-04-30 02:21:24.357 : --44--> 223061.png | 27.91dB
23-04-30 02:21:25.700 : --45--> 227092.png | 32.88dB
23-04-30 02:21:26.493 : --46--> 229036.png | 27.62dB
23-04-30 02:21:27.405 : --47--> 236037.png | 28.12dB
23-04-30 02:21:28.183 : --48-->  24077.png | 27.90dB
23-04-30 02:21:28.960 : --49--> 241004.png | 31.30dB
23-04-30 02:21:29.764 : --50--> 241048.png | 27.42dB
23-04-30 02:21:31.104 : --51--> 253027.png | 28.74dB
23-04-30 02:21:31.903 : --52--> 253055.png | 31.03dB
23-04-30 02:21:32.705 : --53--> 260058.png | 31.25dB
23-04-30 02:21:33.482 : --54--> 271035.png | 29.51dB
23-04-30 02:21:34.269 : --55--> 285079.png | 28.44dB
23-04-30 02:21:35.053 : --56--> 291000.png | 25.70dB
23-04-30 02:21:36.282 : --57--> 295087.png | 29.14dB
23-04-30 02:21:38.398 : --58--> 296007.png | 31.11dB
23-04-30 02:21:39.259 : --59--> 296059.png | 30.57dB
23-04-30 02:21:40.472 : --60--> 299086.png | 31.39dB
23-04-30 02:21:41.274 : --61--> 300091.png | 30.19dB
23-04-30 02:21:42.347 : --62--> 302008.png | 31.38dB
23-04-30 02:21:43.185 : --63--> 304034.png | 28.12dB
23-04-30 02:21:44.419 : --64--> 304074.png | 28.11dB
23-04-30 02:21:45.187 : --65--> 306005.png | 29.24dB
23-04-30 02:21:46.220 : --66-->   3096.png | 35.53dB
23-04-30 02:21:47.008 : --67-->  33039.png | 26.52dB
23-04-30 02:21:47.852 : --68--> 351093.png | 27.60dB
23-04-30 02:21:47.863 : <epoch:3333, iter:  10,000, Average PSNR : 29.42dB

23-04-30 02:23:12.182 : <epoch:3399, iter:  10,200, lr:1.000e-04> G_loss: 2.687e-02 
23-04-30 02:24:35.738 : <epoch:3466, iter:  10,400, lr:1.000e-04> G_loss: 2.605e-02 
23-04-30 02:26:00.779 : <epoch:3533, iter:  10,600, lr:1.000e-04> G_loss: 2.592e-02 
23-04-30 02:27:24.662 : <epoch:3599, iter:  10,800, lr:1.000e-04> G_loss: 2.729e-02 
23-04-30 02:28:48.608 : <epoch:3666, iter:  11,000, lr:1.000e-04> G_loss: 2.573e-02 
23-04-30 02:30:14.586 : <epoch:3733, iter:  11,200, lr:1.000e-04> G_loss: 2.439e-02 
23-04-30 02:31:37.155 : <epoch:3799, iter:  11,400, lr:1.000e-04> G_loss: 2.481e-02 
23-04-30 02:33:03.713 : <epoch:3866, iter:  11,600, lr:1.000e-04> G_loss: 2.675e-02 
23-04-30 02:34:28.436 : <epoch:3933, iter:  11,800, lr:1.000e-04> G_loss: 2.509e-02 
23-04-30 02:35:51.927 : <epoch:3999, iter:  12,000, lr:1.000e-04> G_loss: 2.666e-02 
23-04-30 02:37:17.611 : <epoch:4066, iter:  12,200, lr:1.000e-04> G_loss: 2.631e-02 
23-04-30 02:38:41.924 : <epoch:4133, iter:  12,400, lr:1.000e-04> G_loss: 2.662e-02 
23-04-30 02:40:06.976 : <epoch:4199, iter:  12,600, lr:1.000e-04> G_loss: 2.621e-02 
23-04-30 02:41:32.671 : <epoch:4266, iter:  12,800, lr:1.000e-04> G_loss: 2.699e-02 
23-04-30 02:42:58.363 : <epoch:4333, iter:  13,000, lr:1.000e-04> G_loss: 2.636e-02 
23-04-30 02:44:24.810 : <epoch:4399, iter:  13,200, lr:1.000e-04> G_loss: 2.536e-02 
23-04-30 02:45:49.719 : <epoch:4466, iter:  13,400, lr:1.000e-04> G_loss: 2.667e-02 
23-04-30 02:47:15.816 : <epoch:4533, iter:  13,600, lr:1.000e-04> G_loss: 2.516e-02 
23-04-30 02:48:39.325 : <epoch:4599, iter:  13,800, lr:1.000e-04> G_loss: 2.791e-02 
23-04-30 02:50:04.648 : <epoch:4666, iter:  14,000, lr:1.000e-04> G_loss: 2.585e-02 
23-04-30 02:51:29.991 : <epoch:4733, iter:  14,200, lr:1.000e-04> G_loss: 2.699e-02 
23-04-30 02:52:52.999 : <epoch:4799, iter:  14,400, lr:1.000e-04> G_loss: 2.550e-02 
23-04-30 02:54:18.352 : <epoch:4866, iter:  14,600, lr:1.000e-04> G_loss: 2.461e-02 
23-04-30 02:55:42.049 : <epoch:4933, iter:  14,800, lr:1.000e-04> G_loss: 2.648e-02 
23-04-30 02:57:06.302 : <epoch:4999, iter:  15,000, lr:1.000e-04> G_loss: 2.564e-02 
23-04-30 02:57:06.302 : Saving the model.
23-04-30 02:57:07.673 : ---1--> 101085.png | 27.45dB
23-04-30 02:57:08.442 : ---2--> 101087.png | 30.63dB
23-04-30 02:57:09.235 : ---3--> 102061.png | 30.15dB
23-04-30 02:57:10.025 : ---4--> 103070.png | 31.38dB
23-04-30 02:57:11.233 : ---5--> 105025.png | 28.28dB
23-04-30 02:57:12.055 : ---6--> 106024.png | 31.81dB
23-04-30 02:57:13.157 : ---7--> 108005.png | 29.79dB
23-04-30 02:57:13.940 : ---8--> 108070.png | 28.10dB
23-04-30 02:57:14.715 : ---9--> 108082.png | 30.19dB
23-04-30 02:57:15.511 : --10--> 109053.png | 30.83dB
23-04-30 02:57:16.309 : --11--> 119082.png | 29.12dB
23-04-30 02:57:17.097 : --12-->  12084.png | 28.91dB
23-04-30 02:57:17.860 : --13--> 123074.png | 30.51dB
23-04-30 02:57:18.644 : --14--> 126007.png | 30.75dB
23-04-30 02:57:19.615 : --15--> 130026.png | 28.98dB
23-04-30 02:57:21.423 : --16--> 134035.png | 28.83dB
23-04-30 02:57:22.231 : --17-->  14037.png | 32.57dB
23-04-30 02:57:23.009 : --18--> 143090.png | 32.33dB
23-04-30 02:57:24.013 : --19--> 145086.png | 29.07dB
23-04-30 02:57:25.861 : --20--> 147091.png | 29.09dB
23-04-30 02:57:26.636 : --21--> 148026.png | 27.83dB
23-04-30 02:57:27.464 : --22--> 148089.png | 28.58dB
23-04-30 02:57:28.904 : --23--> 157055.png | 28.80dB
23-04-30 02:57:29.774 : --24--> 159008.png | 29.97dB
23-04-30 02:57:30.613 : --25--> 160068.png | 31.03dB
23-04-30 02:57:31.663 : --26-->  16077.png | 29.44dB
23-04-30 02:57:32.869 : --27--> 163085.png | 30.95dB
23-04-30 02:57:33.667 : --28--> 167062.png | 32.65dB
23-04-30 02:57:34.486 : --29--> 167083.png | 26.22dB
23-04-30 02:57:35.334 : --30--> 170057.png | 31.04dB
23-04-30 02:57:36.338 : --31--> 175032.png | 26.60dB
23-04-30 02:57:37.564 : --32--> 175043.png | 28.41dB
23-04-30 02:57:38.407 : --33--> 182053.png | 29.20dB
23-04-30 02:57:39.359 : --34--> 189080.png | 32.00dB
23-04-30 02:57:40.303 : --35-->  19021.png | 29.34dB
23-04-30 02:57:41.100 : --36--> 196073.png | 28.26dB
23-04-30 02:57:41.910 : --37--> 197017.png | 29.13dB
23-04-30 02:57:42.734 : --38--> 208001.png | 29.90dB
23-04-30 02:57:43.542 : --39--> 210088.png | 30.85dB
23-04-30 02:57:44.787 : --40-->  21077.png | 29.50dB
23-04-30 02:57:45.574 : --41--> 216081.png | 28.98dB
23-04-30 02:57:46.561 : --42--> 219090.png | 30.48dB
23-04-30 02:57:47.336 : --43--> 220075.png | 30.68dB
23-04-30 02:57:48.112 : --44--> 223061.png | 28.11dB
23-04-30 02:57:48.943 : --45--> 227092.png | 32.88dB
23-04-30 02:57:50.209 : --46--> 229036.png | 27.95dB
23-04-30 02:57:50.996 : --47--> 236037.png | 28.30dB
23-04-30 02:57:51.798 : --48-->  24077.png | 28.44dB
23-04-30 02:57:52.858 : --49--> 241004.png | 31.60dB
23-04-30 02:57:53.649 : --50--> 241048.png | 27.76dB
23-04-30 02:57:54.413 : --51--> 253027.png | 29.23dB
23-04-30 02:57:55.269 : --52--> 253055.png | 31.52dB
23-04-30 02:57:56.026 : --53--> 260058.png | 31.35dB
23-04-30 02:57:56.839 : --54--> 271035.png | 29.91dB
23-04-30 02:57:57.671 : --55--> 285079.png | 28.81dB
23-04-30 02:57:58.912 : --56--> 291000.png | 25.88dB
23-04-30 02:57:59.719 : --57--> 295087.png | 29.40dB
23-04-30 02:58:00.561 : --58--> 296007.png | 31.36dB
23-04-30 02:58:01.468 : --59--> 296059.png | 30.93dB
23-04-30 02:58:02.333 : --60--> 299086.png | 31.61dB
23-04-30 02:58:03.103 : --61--> 300091.png | 30.65dB
23-04-30 02:58:03.884 : --62--> 302008.png | 32.34dB
23-04-30 02:58:04.721 : --63--> 304034.png | 28.33dB
23-04-30 02:58:05.511 : --64--> 304074.png | 28.27dB
23-04-30 02:58:06.364 : --65--> 306005.png | 29.52dB
23-04-30 02:58:07.374 : --66-->   3096.png | 35.37dB
23-04-30 02:58:08.143 : --67-->  33039.png | 26.92dB
23-04-30 02:58:09.012 : --68--> 351093.png | 27.92dB
23-04-30 02:58:09.027 : <epoch:4999, iter:  15,000, Average PSNR : 29.75dB

23-04-30 02:59:33.980 : <epoch:5066, iter:  15,200, lr:1.000e-04> G_loss: 2.863e-02 
23-04-30 03:00:57.252 : <epoch:5133, iter:  15,400, lr:1.000e-04> G_loss: 2.544e-02 
23-04-30 03:02:20.986 : <epoch:5199, iter:  15,600, lr:1.000e-04> G_loss: 2.649e-02 
23-04-30 03:03:45.193 : <epoch:5266, iter:  15,800, lr:1.000e-04> G_loss: 2.635e-02 
23-04-30 03:05:08.185 : <epoch:5333, iter:  16,000, lr:1.000e-04> G_loss: 2.405e-02 
23-04-30 03:06:31.918 : <epoch:5399, iter:  16,200, lr:1.000e-04> G_loss: 2.612e-02 
23-04-30 03:07:55.059 : <epoch:5466, iter:  16,400, lr:1.000e-04> G_loss: 2.431e-02 
23-04-30 03:09:19.775 : <epoch:5533, iter:  16,600, lr:1.000e-04> G_loss: 2.413e-02 
23-04-30 03:10:42.569 : <epoch:5599, iter:  16,800, lr:1.000e-04> G_loss: 2.374e-02 
23-04-30 03:12:07.614 : <epoch:5666, iter:  17,000, lr:1.000e-04> G_loss: 2.501e-02 
23-04-30 03:13:32.541 : <epoch:5733, iter:  17,200, lr:1.000e-04> G_loss: 2.405e-02 
23-04-30 03:14:57.640 : <epoch:5799, iter:  17,400, lr:1.000e-04> G_loss: 2.681e-02 
23-04-30 03:16:23.689 : <epoch:5866, iter:  17,600, lr:1.000e-04> G_loss: 2.586e-02 
23-04-30 03:17:48.026 : <epoch:5933, iter:  17,800, lr:1.000e-04> G_loss: 2.487e-02 
23-04-30 03:19:12.565 : <epoch:5999, iter:  18,000, lr:1.000e-04> G_loss: 2.576e-02 
23-04-30 03:20:36.474 : <epoch:6066, iter:  18,200, lr:1.000e-04> G_loss: 2.373e-02 
23-04-30 03:22:03.146 : <epoch:6133, iter:  18,400, lr:1.000e-04> G_loss: 2.686e-02 
23-04-30 03:23:26.234 : <epoch:6199, iter:  18,600, lr:1.000e-04> G_loss: 2.714e-02 
23-04-30 03:24:51.600 : <epoch:6266, iter:  18,800, lr:1.000e-04> G_loss: 2.348e-02 
23-04-30 03:26:16.296 : <epoch:6333, iter:  19,000, lr:1.000e-04> G_loss: 2.456e-02 
23-04-30 03:27:40.789 : <epoch:6399, iter:  19,200, lr:1.000e-04> G_loss: 2.594e-02 
23-04-30 03:29:06.279 : <epoch:6466, iter:  19,400, lr:1.000e-04> G_loss: 2.633e-02 
23-04-30 03:30:31.912 : <epoch:6533, iter:  19,600, lr:1.000e-04> G_loss: 2.410e-02 
23-04-30 03:31:57.484 : <epoch:6599, iter:  19,800, lr:1.000e-04> G_loss: 2.415e-02 
23-04-30 03:33:22.185 : <epoch:6666, iter:  20,000, lr:1.000e-04> G_loss: 2.429e-02 
23-04-30 03:33:22.185 : Saving the model.
23-04-30 03:33:23.046 : ---1--> 101085.png | 27.66dB
23-04-30 03:33:23.803 : ---2--> 101087.png | 30.90dB
23-04-30 03:33:24.605 : ---3--> 102061.png | 30.35dB
23-04-30 03:33:25.652 : ---4--> 103070.png | 31.57dB
23-04-30 03:33:26.465 : ---5--> 105025.png | 28.79dB
23-04-30 03:33:27.349 : ---6--> 106024.png | 31.49dB
23-04-30 03:33:28.161 : ---7--> 108005.png | 29.93dB
23-04-30 03:33:28.930 : ---8--> 108070.png | 28.21dB
23-04-30 03:33:30.129 : ---9--> 108082.png | 30.37dB
23-04-30 03:33:30.936 : --10--> 109053.png | 30.95dB
23-04-30 03:33:31.747 : --11--> 119082.png | 29.56dB
23-04-30 03:33:32.633 : --12-->  12084.png | 29.11dB
23-04-30 03:33:33.411 : --13--> 123074.png | 30.73dB
23-04-30 03:33:34.317 : --14--> 126007.png | 31.16dB
23-04-30 03:33:36.219 : --15--> 130026.png | 29.17dB
23-04-30 03:33:37.074 : --16--> 134035.png | 29.18dB
23-04-30 03:33:38.151 : --17-->  14037.png | 32.88dB
23-04-30 03:33:38.931 : --18--> 143090.png | 32.75dB
23-04-30 03:33:39.743 : --19--> 145086.png | 29.33dB
23-04-30 03:33:41.558 : --20--> 147091.png | 29.42dB
23-04-30 03:33:42.389 : --21--> 148026.png | 28.05dB
23-04-30 03:33:43.375 : --22--> 148089.png | 28.70dB
23-04-30 03:33:44.312 : --23--> 157055.png | 29.35dB
23-04-30 03:33:45.120 : --24--> 159008.png | 30.19dB
23-04-30 03:33:45.935 : --25--> 160068.png | 31.15dB
23-04-30 03:33:46.938 : --26-->  16077.png | 29.76dB
23-04-30 03:33:47.803 : --27--> 163085.png | 31.04dB
23-04-30 03:33:48.946 : --28--> 167062.png | 33.05dB
23-04-30 03:33:49.870 : --29--> 167083.png | 26.73dB
23-04-30 03:33:50.794 : --30--> 170057.png | 31.16dB
23-04-30 03:33:51.671 : --31--> 175032.png | 26.68dB
23-04-30 03:33:52.520 : --32--> 175043.png | 28.50dB
23-04-30 03:33:53.473 : --33--> 182053.png | 29.49dB
23-04-30 03:33:54.248 : --34--> 189080.png | 32.30dB
23-04-30 03:33:55.232 : --35-->  19021.png | 29.59dB
23-04-30 03:33:56.033 : --36--> 196073.png | 28.58dB
23-04-30 03:33:56.959 : --37--> 197017.png | 29.40dB
23-04-30 03:33:57.855 : --38--> 208001.png | 30.10dB
23-04-30 03:33:58.668 : --39--> 210088.png | 31.65dB
23-04-30 03:33:59.496 : --40-->  21077.png | 29.89dB
23-04-30 03:34:01.347 : --41--> 216081.png | 29.16dB
23-04-30 03:34:02.189 : --42--> 219090.png | 30.61dB
23-04-30 03:34:02.998 : --43--> 220075.png | 31.00dB
23-04-30 03:34:03.856 : --44--> 223061.png | 28.42dB
23-04-30 03:34:04.627 : --45--> 227092.png | 33.00dB
23-04-30 03:34:05.413 : --46--> 229036.png | 28.19dB
23-04-30 03:34:06.295 : --47--> 236037.png | 28.43dB
23-04-30 03:34:07.046 : --48-->  24077.png | 29.22dB
23-04-30 03:34:07.811 : --49--> 241004.png | 31.64dB
23-04-30 03:34:08.585 : --50--> 241048.png | 28.19dB
23-04-30 03:34:09.358 : --51--> 253027.png | 29.59dB
23-04-30 03:34:10.393 : --52--> 253055.png | 31.53dB
23-04-30 03:34:11.184 : --53--> 260058.png | 31.68dB
23-04-30 03:34:11.992 : --54--> 271035.png | 30.16dB
23-04-30 03:34:12.772 : --55--> 285079.png | 29.03dB
23-04-30 03:34:13.658 : --56--> 291000.png | 26.10dB
23-04-30 03:34:14.657 : --57--> 295087.png | 29.55dB
23-04-30 03:34:15.498 : --58--> 296007.png | 31.37dB
23-04-30 03:34:16.273 : --59--> 296059.png | 31.01dB
23-04-30 03:34:17.141 : --60--> 299086.png | 31.71dB
23-04-30 03:34:17.968 : --61--> 300091.png | 31.07dB
23-04-30 03:34:18.784 : --62--> 302008.png | 32.66dB
23-04-30 03:34:19.794 : --63--> 304034.png | 28.43dB
23-04-30 03:34:20.605 : --64--> 304074.png | 28.48dB
23-04-30 03:34:21.384 : --65--> 306005.png | 29.84dB
23-04-30 03:34:22.192 : --66-->   3096.png | 35.13dB
23-04-30 03:34:23.344 : --67-->  33039.png | 27.10dB
23-04-30 03:34:24.178 : --68--> 351093.png | 28.08dB
23-04-30 03:34:24.202 : <epoch:6666, iter:  20,000, Average PSNR : 29.99dB

23-04-30 03:35:50.111 : <epoch:6733, iter:  20,200, lr:1.000e-04> G_loss: 2.362e-02 
23-04-30 03:37:16.573 : <epoch:6799, iter:  20,400, lr:1.000e-04> G_loss: 2.702e-02 
23-04-30 03:38:41.442 : <epoch:6866, iter:  20,600, lr:1.000e-04> G_loss: 2.442e-02 
23-04-30 03:40:07.887 : <epoch:6933, iter:  20,800, lr:1.000e-04> G_loss: 2.476e-02 
23-04-30 03:41:32.176 : <epoch:6999, iter:  21,000, lr:1.000e-04> G_loss: 2.558e-02 
23-04-30 03:42:59.973 : <epoch:7066, iter:  21,200, lr:1.000e-04> G_loss: 2.665e-02 
23-04-30 03:44:26.083 : <epoch:7133, iter:  21,400, lr:1.000e-04> G_loss: 2.608e-02 
23-04-30 03:45:49.611 : <epoch:7199, iter:  21,600, lr:1.000e-04> G_loss: 2.355e-02 
23-04-30 03:47:16.781 : <epoch:7266, iter:  21,800, lr:1.000e-04> G_loss: 2.448e-02 
23-04-30 03:48:44.214 : <epoch:7333, iter:  22,000, lr:1.000e-04> G_loss: 2.538e-02 
23-04-30 03:50:10.577 : <epoch:7399, iter:  22,200, lr:1.000e-04> G_loss: 2.561e-02 
23-04-30 03:51:36.596 : <epoch:7466, iter:  22,400, lr:1.000e-04> G_loss: 2.612e-02 
23-04-30 03:53:04.028 : <epoch:7533, iter:  22,600, lr:1.000e-04> G_loss: 2.499e-02 
23-04-30 03:54:29.069 : <epoch:7599, iter:  22,800, lr:1.000e-04> G_loss: 2.473e-02 
23-04-30 03:55:56.305 : <epoch:7666, iter:  23,000, lr:1.000e-04> G_loss: 2.424e-02 
23-04-30 03:57:24.330 : <epoch:7733, iter:  23,200, lr:1.000e-04> G_loss: 2.430e-02 
23-04-30 03:58:49.659 : <epoch:7799, iter:  23,400, lr:1.000e-04> G_loss: 2.505e-02 
23-04-30 04:00:16.995 : <epoch:7866, iter:  23,600, lr:1.000e-04> G_loss: 2.484e-02 
23-04-30 04:01:42.895 : <epoch:7933, iter:  23,800, lr:1.000e-04> G_loss: 2.497e-02 
23-04-30 04:03:08.813 : <epoch:7999, iter:  24,000, lr:1.000e-04> G_loss: 2.399e-02 
23-04-30 04:04:34.262 : <epoch:8066, iter:  24,200, lr:1.000e-04> G_loss: 2.445e-02 
23-04-30 04:06:01.812 : <epoch:8133, iter:  24,400, lr:1.000e-04> G_loss: 2.473e-02 
23-04-30 04:07:27.129 : <epoch:8199, iter:  24,600, lr:1.000e-04> G_loss: 2.331e-02 
23-04-30 04:08:54.859 : <epoch:8266, iter:  24,800, lr:1.000e-04> G_loss: 2.453e-02 
23-04-30 04:10:22.025 : <epoch:8333, iter:  25,000, lr:1.000e-04> G_loss: 2.553e-02 
23-04-30 04:10:22.026 : Saving the model.
23-04-30 04:10:22.940 : ---1--> 101085.png | 27.45dB
23-04-30 04:10:23.805 : ---2--> 101087.png | 29.84dB
23-04-30 04:10:24.635 : ---3--> 102061.png | 30.15dB
23-04-30 04:10:25.440 : ---4--> 103070.png | 31.43dB
23-04-30 04:10:26.269 : ---5--> 105025.png | 28.01dB
23-04-30 04:10:27.091 : ---6--> 106024.png | 30.92dB
23-04-30 04:10:27.912 : ---7--> 108005.png | 29.81dB
23-04-30 04:10:28.717 : ---8--> 108070.png | 28.08dB
23-04-30 04:10:29.541 : ---9--> 108082.png | 30.20dB
23-04-30 04:10:30.413 : --10--> 109053.png | 30.97dB
23-04-30 04:10:31.207 : --11--> 119082.png | 29.45dB
23-04-30 04:10:32.010 : --12-->  12084.png | 28.97dB
23-04-30 04:10:32.850 : --13--> 123074.png | 30.70dB
23-04-30 04:10:33.887 : --14--> 126007.png | 30.93dB
23-04-30 04:10:34.762 : --15--> 130026.png | 29.01dB
23-04-30 04:10:36.610 : --16--> 134035.png | 29.07dB
23-04-30 04:10:37.453 : --17-->  14037.png | 32.83dB
23-04-30 04:10:38.359 : --18--> 143090.png | 32.75dB
23-04-30 04:10:39.312 : --19--> 145086.png | 29.27dB
23-04-30 04:10:40.128 : --20--> 147091.png | 29.24dB
23-04-30 04:10:40.950 : --21--> 148026.png | 28.06dB
23-04-30 04:10:42.023 : --22--> 148089.png | 28.61dB
23-04-30 04:10:42.854 : --23--> 157055.png | 29.22dB
23-04-30 04:10:44.688 : --24--> 159008.png | 30.11dB
23-04-30 04:10:45.509 : --25--> 160068.png | 31.22dB
23-04-30 04:10:46.352 : --26-->  16077.png | 29.59dB
23-04-30 04:10:47.196 : --27--> 163085.png | 31.01dB
23-04-30 04:10:48.071 : --28--> 167062.png | 30.94dB
23-04-30 04:10:48.959 : --29--> 167083.png | 26.45dB
23-04-30 04:10:49.917 : --30--> 170057.png | 31.15dB
23-04-30 04:10:50.810 : --31--> 175032.png | 26.67dB
23-04-30 04:10:51.683 : --32--> 175043.png | 28.48dB
23-04-30 04:10:52.658 : --33--> 182053.png | 29.61dB
23-04-30 04:10:53.563 : --34--> 189080.png | 32.30dB
23-04-30 04:10:54.525 : --35-->  19021.png | 29.41dB
23-04-30 04:10:55.447 : --36--> 196073.png | 28.45dB
23-04-30 04:10:56.382 : --37--> 197017.png | 29.36dB
23-04-30 04:10:57.222 : --38--> 208001.png | 29.93dB
23-04-30 04:10:58.375 : --39--> 210088.png | 31.23dB
23-04-30 04:10:59.440 : --40-->  21077.png | 29.49dB
23-04-30 04:11:00.250 : --41--> 216081.png | 29.11dB
23-04-30 04:11:01.183 : --42--> 219090.png | 30.64dB
23-04-30 04:11:01.987 : --43--> 220075.png | 30.95dB
23-04-30 04:11:03.064 : --44--> 223061.png | 28.43dB
23-04-30 04:11:03.892 : --45--> 227092.png | 33.33dB
23-04-30 04:11:04.759 : --46--> 229036.png | 28.02dB
23-04-30 04:11:05.628 : --47--> 236037.png | 28.35dB
23-04-30 04:11:06.507 : --48-->  24077.png | 28.19dB
23-04-30 04:11:07.368 : --49--> 241004.png | 30.86dB
23-04-30 04:11:08.186 : --50--> 241048.png | 27.64dB
23-04-30 04:11:09.012 : --51--> 253027.png | 29.51dB
23-04-30 04:11:10.071 : --52--> 253055.png | 30.57dB
23-04-30 04:11:10.894 : --53--> 260058.png | 31.76dB
23-04-30 04:11:11.717 : --54--> 271035.png | 30.16dB
23-04-30 04:11:12.529 : --55--> 285079.png | 28.81dB
23-04-30 04:11:13.431 : --56--> 291000.png | 26.00dB
23-04-30 04:11:14.247 : --57--> 295087.png | 29.47dB
23-04-30 04:11:15.076 : --58--> 296007.png | 31.61dB
23-04-30 04:11:16.017 : --59--> 296059.png | 31.09dB
23-04-30 04:11:16.887 : --60--> 299086.png | 31.78dB
23-04-30 04:11:17.705 : --61--> 300091.png | 30.77dB
23-04-30 04:11:18.543 : --62--> 302008.png | 32.70dB
23-04-30 04:11:19.378 : --63--> 304034.png | 28.38dB
23-04-30 04:11:20.239 : --64--> 304074.png | 28.34dB
23-04-30 04:11:21.039 : --65--> 306005.png | 29.56dB
23-04-30 04:11:21.865 : --66-->   3096.png | 36.43dB
23-04-30 04:11:22.669 : --67-->  33039.png | 27.07dB
23-04-30 04:11:23.552 : --68--> 351093.png | 27.37dB
23-04-30 04:11:23.570 : <epoch:8333, iter:  25,000, Average PSNR : 29.81dB

23-04-30 04:12:51.053 : <epoch:8399, iter:  25,200, lr:1.000e-04> G_loss: 2.518e-02 
23-04-30 04:14:16.775 : <epoch:8466, iter:  25,400, lr:1.000e-04> G_loss: 2.375e-02 
23-04-30 04:15:43.748 : <epoch:8533, iter:  25,600, lr:1.000e-04> G_loss: 2.467e-02 
23-04-30 04:17:08.822 : <epoch:8599, iter:  25,800, lr:1.000e-04> G_loss: 2.518e-02 
23-04-30 04:18:36.288 : <epoch:8666, iter:  26,000, lr:1.000e-04> G_loss: 2.260e-02 
23-04-30 04:20:02.253 : <epoch:8733, iter:  26,200, lr:1.000e-04> G_loss: 2.414e-02 
23-04-30 04:21:27.633 : <epoch:8799, iter:  26,400, lr:1.000e-04> G_loss: 2.350e-02 
23-04-30 04:22:52.736 : <epoch:8866, iter:  26,600, lr:1.000e-04> G_loss: 2.365e-02 
23-04-30 04:24:19.267 : <epoch:8933, iter:  26,800, lr:1.000e-04> G_loss: 2.392e-02 
23-04-30 04:25:43.422 : <epoch:8999, iter:  27,000, lr:1.000e-04> G_loss: 2.440e-02 
23-04-30 04:27:09.486 : <epoch:9066, iter:  27,200, lr:1.000e-04> G_loss: 2.449e-02 
23-04-30 04:28:36.420 : <epoch:9133, iter:  27,400, lr:1.000e-04> G_loss: 2.451e-02 
23-04-30 04:29:59.720 : <epoch:9199, iter:  27,600, lr:1.000e-04> G_loss: 2.555e-02 
23-04-30 04:31:25.088 : <epoch:9266, iter:  27,800, lr:1.000e-04> G_loss: 2.573e-02 
23-04-30 04:32:49.503 : <epoch:9333, iter:  28,000, lr:1.000e-04> G_loss: 2.345e-02 
23-04-30 04:34:14.424 : <epoch:9399, iter:  28,200, lr:1.000e-04> G_loss: 2.410e-02 
23-04-30 04:35:38.314 : <epoch:9466, iter:  28,400, lr:1.000e-04> G_loss: 2.209e-02 
23-04-30 04:37:04.145 : <epoch:9533, iter:  28,600, lr:1.000e-04> G_loss: 2.488e-02 
23-04-30 04:38:27.902 : <epoch:9599, iter:  28,800, lr:1.000e-04> G_loss: 2.462e-02 
23-04-30 04:39:54.644 : <epoch:9666, iter:  29,000, lr:1.000e-04> G_loss: 2.315e-02 
23-04-30 04:41:20.197 : <epoch:9733, iter:  29,200, lr:1.000e-04> G_loss: 2.421e-02 
23-04-30 04:42:46.233 : <epoch:9799, iter:  29,400, lr:1.000e-04> G_loss: 2.565e-02 
23-04-30 04:44:11.510 : <epoch:9866, iter:  29,600, lr:1.000e-04> G_loss: 2.314e-02 
23-04-30 04:45:37.745 : <epoch:9933, iter:  29,800, lr:1.000e-04> G_loss: 2.382e-02 
23-04-30 04:47:01.620 : <epoch:9999, iter:  30,000, lr:1.000e-04> G_loss: 2.403e-02 
23-04-30 04:47:01.620 : Saving the model.
23-04-30 04:47:02.545 : ---1--> 101085.png | 27.75dB
23-04-30 04:47:03.564 : ---2--> 101087.png | 31.07dB
23-04-30 04:47:04.396 : ---3--> 102061.png | 30.95dB
23-04-30 04:47:05.366 : ---4--> 103070.png | 31.90dB
23-04-30 04:47:06.271 : ---5--> 105025.png | 29.02dB
23-04-30 04:47:07.220 : ---6--> 106024.png | 32.71dB
23-04-30 04:47:08.036 : ---7--> 108005.png | 30.10dB
23-04-30 04:47:08.850 : ---8--> 108070.png | 28.28dB
23-04-30 04:47:09.670 : ---9--> 108082.png | 30.64dB
23-04-30 04:47:10.714 : --10--> 109053.png | 31.26dB
23-04-30 04:47:11.550 : --11--> 119082.png | 30.01dB
23-04-30 04:47:12.376 : --12-->  12084.png | 29.18dB
23-04-30 04:47:13.200 : --13--> 123074.png | 31.13dB
23-04-30 04:47:14.072 : --14--> 126007.png | 31.56dB
23-04-30 04:47:14.935 : --15--> 130026.png | 29.34dB
23-04-30 04:47:15.769 : --16--> 134035.png | 29.61dB
23-04-30 04:47:16.602 : --17-->  14037.png | 33.31dB
23-04-30 04:47:17.483 : --18--> 143090.png | 33.40dB
23-04-30 04:47:18.478 : --19--> 145086.png | 29.61dB
23-04-30 04:47:19.336 : --20--> 147091.png | 30.06dB
23-04-30 04:47:20.348 : --21--> 148026.png | 28.28dB
23-04-30 04:47:21.178 : --22--> 148089.png | 28.83dB
23-04-30 04:47:22.271 : --23--> 157055.png | 30.05dB
23-04-30 04:47:24.111 : --24--> 159008.png | 30.43dB
23-04-30 04:47:24.932 : --25--> 160068.png | 31.44dB
23-04-30 04:47:25.994 : --26-->  16077.png | 29.94dB
23-04-30 04:47:26.821 : --27--> 163085.png | 31.32dB
23-04-30 04:47:27.679 : --28--> 167062.png | 33.15dB
23-04-30 04:47:28.730 : --29--> 167083.png | 26.93dB
23-04-30 04:47:29.561 : --30--> 170057.png | 31.39dB
23-04-30 04:47:30.377 : --31--> 175032.png | 26.76dB
23-04-30 04:47:31.409 : --32--> 175043.png | 28.66dB
23-04-30 04:47:32.241 : --33--> 182053.png | 29.92dB
23-04-30 04:47:33.266 : --34--> 189080.png | 33.69dB
23-04-30 04:47:34.245 : --35-->  19021.png | 29.77dB
23-04-30 04:47:35.059 : --36--> 196073.png | 28.68dB
23-04-30 04:47:36.958 : --37--> 197017.png | 29.98dB
23-04-30 04:47:37.781 : --38--> 208001.png | 30.24dB
23-04-30 04:47:38.589 : --39--> 210088.png | 32.37dB
23-04-30 04:47:39.624 : --40-->  21077.png | 30.28dB
23-04-30 04:47:40.425 : --41--> 216081.png | 29.37dB
23-04-30 04:47:41.230 : --42--> 219090.png | 30.97dB
23-04-30 04:47:42.059 : --43--> 220075.png | 31.43dB
23-04-30 04:47:42.863 : --44--> 223061.png | 28.97dB
23-04-30 04:47:43.695 : --45--> 227092.png | 33.79dB
23-04-30 04:47:44.491 : --46--> 229036.png | 28.38dB
23-04-30 04:47:45.315 : --47--> 236037.png | 28.57dB
23-04-30 04:47:46.343 : --48-->  24077.png | 29.66dB
23-04-30 04:47:47.145 : --49--> 241004.png | 32.08dB
23-04-30 04:47:49.050 : --50--> 241048.png | 28.33dB
23-04-30 04:47:49.923 : --51--> 253027.png | 29.88dB
23-04-30 04:47:50.761 : --52--> 253055.png | 32.10dB
23-04-30 04:47:51.575 : --53--> 260058.png | 32.18dB
23-04-30 04:47:52.207 : --54--> 271035.png | 30.60dB
23-04-30 04:47:53.009 : --55--> 285079.png | 29.18dB
23-04-30 04:47:53.836 : --56--> 291000.png | 26.16dB
23-04-30 04:47:54.635 : --57--> 295087.png | 29.73dB
23-04-30 04:47:55.699 : --58--> 296007.png | 31.97dB
23-04-30 04:47:56.617 : --59--> 296059.png | 31.39dB
23-04-30 04:47:57.468 : --60--> 299086.png | 32.08dB
23-04-30 04:47:58.296 : --61--> 300091.png | 31.34dB
23-04-30 04:47:59.190 : --62--> 302008.png | 33.30dB
23-04-30 04:48:00.260 : --63--> 304034.png | 28.55dB
23-04-30 04:48:01.101 : --64--> 304074.png | 28.62dB
23-04-30 04:48:01.908 : --65--> 306005.png | 29.99dB
23-04-30 04:48:02.765 : --66-->   3096.png | 37.12dB
23-04-30 04:48:03.617 : --67-->  33039.png | 27.29dB
23-04-30 04:48:04.566 : --68--> 351093.png | 28.21dB
23-04-30 04:48:04.578 : <epoch:9999, iter:  30,000, Average PSNR : 30.36dB

23-04-30 04:48:04.624 : Saving the final model.
23-04-30 04:48:04.642 : End of training.
